;title;Unnamed: 0;abstract;dc:publisher;prism:aggregationType;prism:publicationName;prism:coverDate;prism:url
0;Air Quality Management: An Exemplar for Model-Driven Digital Twin Engineering;21;Since its first mentioning in the literature, the concept of Digital Twin has gained traction in both industry and academia. However, there are still many open challenges when applying Digital Twins to industry-scale use cases. Applying Model-Driven Engineering techniques to the creation and maintenance of Digital Twins (also referred to as Model-Driven Digital Twin Engineering) promises automation and consistency throughout the life cycle of a Digital Twin. The exemplar provided in this paper can be used to identify open challenges when it comes to Model-Driven Digital Twin Engineering, and to demonstrate how approaches can solve them. This exemplar applies Digital Twins to an indoor air quality management use case, where CO2, temperature, and humidity values of rooms within a building are measured. These values can be used to derive actions to improve work productivity and reduce the risk for virus infections. We describe three applications that make use of this Digital Twin (i.e., runtime visualization, physical simulation, and ML-based predictions), and provide an online repository with the artefacts of this exemplar.;Institute of Electrical and Electronics Engineers Inc.;Conference Proceeding;Companion Proceedings - 24th International Conference on Model-Driven Engineering Languages and Systems, MODELS-C 2021;2021-01-01;https://api.elsevier.com/content/abstract/scopus_id/85124047367
6;AML4DT: A Model-Driven Framework for Developing and Maintaining Digital Twins with AutomationML;22;As technologies such as the Internet of Things (IoT) and Cyber-Physical Systems (CPS) are becoming ubiquitous, systems adopting these technologies are getting increasingly complex. Digital Twins (DTs) provide comprehensive views on such systems, the data they generate during runtime, as well as their usage and evolution over time. Setting up the required infrastructure to run a Digital Twin is still an ambitious task that involves significant upfront efforts from domain experts, although existing knowledge about the systems, such as engineering models, may be already available for reuse. To address this issue, we present AML4DT, a model-driven framework supporting the development and maintenance of Digital Twin infrastructures by employing AutomationML (AML) models. We automatically establish a connection between systems and their DTs based on dedicated DT models. These DT models are automatically derived from existing AutomationML models, which are produced in the engineering phases of a system. Additionally, to alleviate the maintenance of the DTs, AML4DT facilitates the synchronization of the AutomationML models with the DT infrastructure for several evolution cases. A case study shows the benefits of developing and maintaining DTs based on AutomationML models using the proposed AML4DT framework. For this particular study, the effort of performing the required tasks could be reduced by about 50%.;Institute of Electrical and Electronics Engineers Inc.;Conference Proceeding;IEEE International Conference on Emerging Technologies and Factory Automation, ETFA;2021-01-01;https://api.elsevier.com/content/abstract/scopus_id/85122957318
9;Meta-model-based shop-floor digital twin architecture, modeling and application;54;Digital twin is regarded as the virtual counterpart of physical entities, which can mirror the physical behavior and performance. Digital twin technology provides strong support for the achievement of cyber-physical system and intelligent manufacturing. Many investigations have been carried out for the digital twin of specific products. However, there are less researches on digital twin in the shop-floor domain, and there is a lack of model-driven digital twin comprehensive architecture. The modeling approach to the full lifecycle of digital twin is not considered enough. This paper proposes a meta-model-based shop-floor digital twin construction approach and a comprehensive architecture. A meta-model based on RAMI 4.0 is constructed, which provide a novel idea for the description of manufacturing resources and their status. The proposed shop-floor digital twin architecture consists of three key implementation elements: the meta-model construction, data modeling (including data interaction between cyber-physical spaces) and constructing different integration level models of shop-floor digital twin based on iteration feedback between the demands and models. The proposed approach is validated through a case study of the fischer learning factory 4.0.;Elsevier Ltd;Journal;Robotics and Computer-Integrated Manufacturing;2023-12-01;https://api.elsevier.com/content/abstract/scopus_id/85160515920
12;Generating Digital Twin Cockpits for Parameter Management in the Engineering of Wind Turbines;78;The complexity of wind energy systems combined with an increased trend towards mass customization require the collaboration of many experts to achieve high quality products. Currently, a major issue arises from the lack of data integration among the different tools used during the engineering process which may cause system failures eventually. Existing tools largely do not support automatic detection and indication of erroneous or contradictory parameter values between artifacts of different tools. Employing a model-driven and functional engineering approach enables to establish an integrated toolchain for the management and visualization of engineering artifacts that consume and produce the data. Within this paper, we present an automatic approach to derive an engineering digital twin for the cooperative development and management of engineering artifacts from functional models of the system under development. We evaluate our approach on the example of a hydraulic pump within the cooling system of a wind turbine. The prototype can be coupled with an existing engineering tool ecosystem. The approach enables to exchange the data produced by engineering artifacts according to a functional system model which facilitates the cooperation between different stakeholders throughout the development process.;Gesellschaft fur Informatik (GI);Conference Proceeding;Lecture Notes in Informatics (LNI), Proceedings - Series of the Gesellschaft fur Informatik (GI);2022-01-01;https://api.elsevier.com/content/abstract/scopus_id/85138312179
15;Semantic Interoperability of Digital Twins: Ontology-based Capability Checking in AAS Modeling Framework;106;Industry 4.0 currently prepares a major shift towards extreme flexibility into production lines management. Digital Twins are one of the key enabling technologies for Industry 4.0. However, the interoperability gap among digital representation of Industry 4.0 assets is still one of the obstacles to the development and adoption of digital twins. If the Asset Administration Shell (AAS), the standard proposed to represent the I4.0 components, caters for syntactic interoperability, a more semantic kind of interoperability is deeply needed to develop flexible and adaptable production lines. In our work, we overcome the limitation of current syntactic-only resource matching algorithms by implementing semantic interoperability based on ontologies i.e., by transforming AAS-based plant models into MaRCO (Manufacturing Resource Capability Ontology) instances and then query the expanded ontology to find the needed resources. This article presents this ontology-based approach as the first step towards the design and implementation of an automated I4.0 flexible plant supervision and control system based on model-driven engineering (MDE) within the 'Papyrus for Manufacturing' toolset. We show how an MDE approach can aggregate around digital twin modeling tools from the Papyrus platform both I4.0 technologies and AI (Knowledge Representation and Reasoning) tools. Our platform aligns modeling and ontological elements to get the best of both worlds. This method has two main advantages: (1) to provide semantic descriptions for digital twin models, (2) to complement model-driven engineering tools with automated reasoning. This paper showcases this approach through a robotic cell use case.;Institute of Electrical and Electronics Engineers Inc.;Conference Proceeding;Proceedings - 2023 IEEE 6th International Conference on Industrial Cyber-Physical Systems, ICPS 2023;2023-01-01;https://api.elsevier.com/content/abstract/scopus_id/85163130919
16;Supporting the Implementation of Digital Twins for IoT-Enhanced BPs;110;IoT-Enhanced Business Processes make use of Internet of Things technology to integrate physical devices into the process as digital actors. Closely related to this topic arises the concept of Digital Twin, which is a virtual representation of real-world entities and processes that connect to the physical counterpart to represent, simulate, or predict changes in the physical system. There are many works that focus on supporting the high-fidelity implementation of Digital Twins for specific physical devices. However, few of them consider the process as a real-world entity to be integrated into the Digital Twin. In this work, we present a microservice architecture to support the implementation of Digital Twins for IoT-Enhanced Business Processes, considering not only the physical devices but also the process itself and the relationship among them. This architectural solution is supported by a model-driven development approach, which proposes (1) the construction of a BPMN model to represent an IoT-enhanced Business Process and (2) the application of model transformation to automatically generate both Digital Twin Definition Language (DTDL) models and microservice Java code templates. DTDL models are used in the implementation of the Digital Twins for the IoT-Enhanced Business Process. Java code templates are used to facilitate the implementation of the microservices required to deploy the IoT-enhanced Business Process and its Digital Twins into the proposed architecture and maintain the digital and physical parts synchronised.;Springer Science and Business Media Deutschland GmbH;Book Series;Lecture Notes in Business Information Processing;2023-01-01;https://api.elsevier.com/content/abstract/scopus_id/85163280406
19;A Methodology for Digital Twin Modeling and Deployment for Industry 4.0;136;"The digital twin (DT) is a virtual representation of a physical object, which has been proposed as one of the key concepts for Industry 4.0. The DT provides a virtual representation of products along their lifecycle that enables the prediction and optimization of the behavior of a production system and its components. A methodology design using model-driven engineering (MDE) is proposed that strives toward being both flexible and generic. This approach is presented at two levels: first, a DT is modeled as a composition of basic components that provide basic functionalities, such as identification, storage, communication, security, data management, human-machine interface (HMI), and simulation; second, an aggregated DT is defined as a hierarchical composition of other DTs. A generic reference architecture based on these concepts and a concrete implementation methodology are proposed using AutomationML. This methodology follows an MDE approach that supports most of the DT features currently proposed in the literature. A case study has been developed, the proposed ideas are being evaluated with industrial case studies, and some of the preliminary results are described in this article. With the case study, it is possible to verify that the proposed methodology supports the creation and the deployment process of a DT.";Institute of Electrical and Electronics Engineers Inc.;Journal;Proceedings of the IEEE;2021-04-01;https://api.elsevier.com/content/abstract/scopus_id/85098780861
20;AAS Capability-Based Operation and Engineering of Flexible Production Lines;156;"Lot-size-one systems as well as plug and produce concepts imply (1) producing increased variety of products in a highly flexible and timely manner, and (2) making commissioning and maintenance more flexible. The speed with which manufacturers, in particular SMEs, can reconfigure the production to a new run and thus respond to clients and avoid costly machine downtime is critical to maintaining commercial success and profit margins. The manufacturing systems of tomorrow must offer a high degree of autonomy, be quickly re-planned to other operations, and cope with a wide variety of unforeseen situations, in a secure and safe manner. In this context, the Asset Administration Shell (AAS) is an emergent standard that leverages the digital twin approach and provides concepts for describing capabilities and skills of I4.0 components in order to automate the reconfiguration process. This article proposes a capability-based operation and engineering approach to tackle the syntactic and semantic interoperability problems in flexible production lines. We demonstrate the implementation of the AAS standard in the open source model-driven workbench Papyrus; then we assess its usability for modeling a production cell use case in order to implement a capability-based reconfiguration approach for flexible production lines.";Institute of Electrical and Electronics Engineers Inc.;Conference Proceeding;IEEE International Conference on Emerging Technologies and Factory Automation, ETFA;2021-01-01;https://api.elsevier.com/content/abstract/scopus_id/85122963448
22;An AAS Modeling Tool for Capability-Based Engineering of Flexible Production Lines;162;The future intelligent manufacturing systems should possess a high degree of autonomy, which is able to monitor the entire production process, quickly re-plan operations, and respond to various unforeseen situations in a secure and safe manner. This can achieve rapid response to customers and avoid costly machine downtime, which is crucial to maintaining business success and profitability. The Asset Administration Shell (AAS) is an emerging standard in the I4.0 (Industry 4.0) domain. Based on the concept of digital twins, it provides concepts for describing the digital representation of I4.0 assets including their capabilities and skills. The AAS provides also responses to the challenge of syntactic and semantic interoperability that the flexible and autonomous production lines are facing. In this article, we propose a capability-based operation and engineering approach for flexible production lines. Our approach is relying on the AAS standard which is a very wide and rich specification. Consequently, we describe the subset of AAS modelling concepts necessary for our approach, we clarify their semantics and we show their usage through a production cell use case. Furthermore, we demonstrate how these modelling concepts were tooled as an extension of the open source model-driven workbench Papyrus.;IEEE Computer Society;Conference Proceeding;IECON Proceedings (Industrial Electronics Conference);2021-10-13;https://api.elsevier.com/content/abstract/scopus_id/85119507003
24;Digital behavioral twins for safe connected cars;206;Driving is a social activity which involves endless interactions with other agents on the road. Failing to locate these agents and predict their possible future actions may result in serious safety hazards. Traditionally, the responsibility for avoiding these safety hazards is solely on the drivers. With improved sensor quantity and quality, modern ADAS systems are able to accurately perceive the location and speed of other nearby vehicles and warn the driver about potential safety hazards. However, accurately predicting the behavior of a driver remains a challenging problem. In this paper, we propose a framework in which behavioral models of drivers (Digital Behavioral Twins) are shared among connected cars to predict potential future actions of neighboring vehicles, therefore improving the safety of driving. We provide mathematical formulations of models of driver behavior and the environment, and discuss challenging problems during model construction and risk analysis. We also demonstrate that our digital twins framework can accurately predict driver behaviors and effectively prevent collisions using a case study in a virtual driving simulation environment.;Association for Computing Machinery, Incacmhelp@acm.org;Conference Proceeding;Proceedings - 21st ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2018;2018-10-14;https://api.elsevier.com/content/abstract/scopus_id/85056832496
26;Generating customized low-code development platforms for digital twins;256;A digital twin improves our use of a cyberâphysical system and understanding of its emerging behavior. To this effect, a digital twin is to be developed and configured and potentially also operated by domain experts, who rarely have a professional software engineering background and for whom easy access and support, e.g., in form of low-code platforms are missing. In this paper, we report on an integrated method for the model-driven engineering of low-code development platforms for digital twins that enables domain experts to create and operate digital twins for cyberâphysical systems using the most appropriate modeling languages. The foundation of this method is (1) a code generation infrastructure for information systems combined with (2) an extensible base architecture for self-adaptive digital twins and (3) reusable language components for their configuration. Using this method, software engineers first configure the information system with the required modeling languages to generate the low-code development platform for digital twins before domain experts leverage the generated platform to create digital twins. This two-step method facilitates creating tailored low-code development platforms as well as creating and operating customized digital twins for a variety of applications.;Elsevier Ltd;Journal;Journal of Computer Languages;2022-06-01;https://api.elsevier.com/content/abstract/scopus_id/85129984615
31;Model-Driven Development of a Digital Twin for Injection Molding;300;Digital Twins (DTs) of Cyber-Physical Production Systems (CPPSs) enable the smart automation of production processes, collection of data, and can thus reduce manual efforts for supervising and controlling CPPSs. Realizing DTs is challenging and requires significant efforts for their conception and integration with the represented CPPS. To mitigate this, we present an approach to systematically engineering DTs for injection molding that supports domain-specific customizations and automation of essential development activities based on a model-driven reference architecture. In this approach, reactive CPPS behavior is defined in terms of a Domain-Specific Language (DSL) for specifying events that occur in the physical system. The reference architecture connects to the CPPS through a novel DSL for representing OPC-UA bindings. We have evaluated this approach with a DT of an injection molding machine that controls the machine to optimize the Design of Experiment (DoE) parameters between experiment cycles before the products are molded. Through this, our reference implementation of the DT facilitates the time-consuming setup of a DT and the subsequent injection molding activities. Overall, this facilitates to systematically engineer digital twins with reactive behavior that help to optimize machine use.;Springer;Book Series;Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics);2020-01-01;https://api.elsevier.com/content/abstract/scopus_id/85086228557
37;Model-driven digital twin construction: Synthesizing the integration of cyber-physical systems with their information systems;312;Digital twins emerge in many disciplines to support engineering, monitoring, controlling, and optimizing cyber-physical systems, such as airplanes, cars, factories, medical devices, or ships. There is an increasing demand to create digital twins as representation of cyber-physical systems and their related models, data traces, aggregated data, and services. Despite a plethora of digital twin applications, there are very few systematic methods to facilitate the modeling of digital twins for a given cyber-physical system. Existing methods focus only on the construction of specific digital twin models and do not consider the integration of these models with the observed cyber-physical system. To mitigate this, we present a fully model-driven method to describe the software of the cyber-physical system, its digital twin information system, and their integration. The integration method relies on MontiArc models of the cyber-physical system's architecture and on UML/P class diagrams from which the digital twin information system is generated. We show the practical application and feasibility of our method on an IoT case study. Explicitly modeling the integration of digital twins and cyber-physical systems eliminates repetitive programming activities and can foster the systematic engineering of digital twins.;Association for Computing Machinery, Inc;Conference Proceeding;Proceedings - 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2020;2020-10-16;https://api.elsevier.com/content/abstract/scopus_id/85096992990
41;Multisource Model-Driven Digital Twin System of Robotic Assembly;325;"The digital twin technology effectively fuels improvements in the quality and efficiency of robotic assembly, especially for sophisticated processes. High-quality digitalization requires a comprehensive description and real-time rendering of system, which are challenging. This article aims to demonstrate a novel multisource model-driven digital twin system, which is based on the geometric, physics, and sequential rule descriptions for producing a precise and real-time simulation of a robotic assembly system. In our system, the digital counterpart rendered with virtual reality technology is created and updated by the real environment information. A 3-D graphic model is reconstructed first using the geometric information of surroundings captured by the depth sensor. During interaction, a fast and efficient approach is proposed to generate the contact force and render the object deformation in the virtual environment. The virtual space also provides the sequential rule that is based on the danger field, which helps to constrain the operation of digital twin. At last, the experimental platform is established in which the virtual space is at an update rate of 100 Hz, while the automatic sorting task is performed and verified; the results show the effectiveness and applicability of the method to digital twin system.";Institute of Electrical and Electronics Engineers Inc.;Journal;IEEE Systems Journal;2021-03-01;https://api.elsevier.com/content/abstract/scopus_id/85102015160
42;Towards a Model-Driven Architecture for Interactive Digital Twin Cockpits;388;Digital twins promise tremendous potential to reduce time and cost in the smart manufacturing of Industry 4.0. Engineering and monitoring interactive digital twins currently demands integrating different piecemeal technologies that effectively hinders their application and deployment. Current research on digital twins focuses on specific implementations or abstract models on how digital twins could be conceived. We propose model-driven software engineering to realize interactive digital twins and user-specific cockpits to interact with the digital twin by generating the infrastructure from common data structure models. To this end, we present a model-driven architecture for digital twins, its integration with an interactive cockpit, and a systematic method of realizing both. Through this, modeling, deploying, and monitoring interactive digital twins becomes more feasible and fosters their successful application in smart manufacturing.;Springer Science and Business Media Deutschland GmbH;Book Series;Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics);2020-01-01;https://api.elsevier.com/content/abstract/scopus_id/85097375593
47;Towards a Reference Architecture for Leveraging Model Repositories for Digital Twins;393;"In the area of Cyber-Physical Systems (CPS), the degree of complexity continuously increases mainly due to new key-enabling technologies supporting those systems. One way to deal with this increasing complexity is to create a digital representation of such systems, a so-called Digital Twin (DT), which virtually acts in parallel ideally across the entire life-cycle of a CPS. For this purpose, the DT uses simulated or real-time data to mimic operations, control, and may modify the CPS's behaviour at runtime. However, building such DTs from scratch is not trivial, mainly due to the integration needed to deal with heterogeneous systems residing in different technological spaces. In order to tackle this challenge, Model-Driven Engineering (MDE) allows to logically model a CPS with its physical components. Usually, in MDE such ""logical models""are created at design time which keep them detached from the deployed system during runtime. Instead of building bilateral solutions between each runtime environment and every engineering tool, a dedicated integration layer is needed which can deal with both, design and runtime aspects. Therefore, we present a reference architecture that allows on the one side to query data from model repositories to enrich the running system with design-time knowledge, and on the other side, to be able to reasoning about system states at runtime in design-time models. We introduce a model repository query and management engine as mediator and show its feasibility by a demonstration case.";Institute of Electrical and Electronics Engineers Inc.;Conference Proceeding;IEEE International Conference on Emerging Technologies and Factory Automation, ETFA;2020-09-01;https://api.elsevier.com/content/abstract/scopus_id/85093356602
49;Towards Development Platforms for Digital Twins: A Model-Driven Low-Code Approach;395;Digital Twins in smart manufacturing must be highly adaptable for different challenges, environments, and system states. In practice, there is a need for enabling the configuration of Digital Twins by domain experts. Low-code approaches seem to be a meaningful solution for configuration purposes but often lack extension options. We propose a model-driven low-code approach for the configuration and reconfiguration of Digital Twins using language plugins. This approach uses model-driven software engineering and software language engineering methods to derive a configurable digital twin implementation. Moreover, we discuss some remaining challenges such as interoperability, language modularity, evolution, integration of assistive services, collaborative development, and web-based debugging.;Springer Science and Business Media Deutschland GmbH;Book Series;IFIP Advances in Information and Communication Technology;2021-01-01;https://api.elsevier.com/content/abstract/scopus_id/85115225554
53;Towards Model-Driven Digital Twin Engineering: Current Opportunities and Future Challenges;398;Digital Twins have emerged since the beginning of this millennium to better support the management of systems based on (real-time) data collected in different parts of the operating systems. Digital Twins have been successfully used in many application domains, and thus, are considered as an important aspect of Model-Based Systems Engineering (MBSE). However, their development, maintenance, and evolution still face major challenges, in particular: (i) the management of heterogeneous models from different disciplines, (ii) the bi-directional synchronization of digital twins and the actual systems, and (iii) the support for collaborative development throughout the complete life-cycle. In the last decades, the Model-Driven Engineering (MDE) community has investigated these challenges in the context of software systems. Now the question arises, which results may be applicable for digital twin engineering as well. In this paper, we identify various MDE techniques and technologies which may contribute to tackle the three mentioned digital twin challenges as well as outline a set of open MDE research challenges that need to be addressed in order to move towards a digital twin engineering discipline.;Springer Science and Business Media Deutschland GmbHinfo@springer-sbm.com;Book Series;Communications in Computer and Information Science;2020-01-01;https://api.elsevier.com/content/abstract/scopus_id/85094117399
58;TwinOps - DevOps meets model-based engineering and digital twins for the engineering of CPS;404;The engineering of Cyber-Physical Systems (CPS) requires a large set of expertise to capture the system requirements and to derive a correct solution. Model-based Engineering and DevOps aim to efficiently deliver software with increased quality. Model-based Engineering relies on models as first-class artifacts to analyze, simulate, and ultimately generate parts of a system. DevOps focuses on software engineering activities, from early development to integration, and then improvement through the monitoring of the system at run-time. We claim these can be efficiently combined to improve the engineering process of CPS. In this paper, we present TwinOps, a process that unifies Model-based Engineering, Digital Twins, and DevOps practice in a uniform workflow. TwinOps illustrates how to leverage several best practices in MBE and DevOps for the engineering Cyber-Physical systems. We illustrate our contribution using a Digital Twins case study to illustrate TwinOps benefits, combining AADL and Modelica models, and an IoT platform.;Association for Computing Machinery, Inc;Conference Proceeding;Proceedings - 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS-C 2020 - Companion Proceedings;2020-10-16;https://api.elsevier.com/content/abstract/scopus_id/85096747019
59;Using UML and OCL Models to Realize High-Level Digital Twins;409;Digital twins constitute virtual representations of physically existing systems. However, their inherent complexity makes them difficult to develop and prove correct. In this paper we explore the use of UML and OCL, complemented with an executable language, SOIL, to build and test digital twins at a high level of abstraction. We also show how to realize the bidirectional connection between the UML models of the digital twin in the USE tool with the physical twin, using an architectural framework centered on a data lake. We have built a prototype of the framework to demonstrate our ideas, and validated it by developing a digital twin of a Lego Mindstorms car. The results allow us to show some interesting advantages of using high-level UML models to specify virtual twins, such as simulation, property checking and some other types of tests.;Institute of Electrical and Electronics Engineers Inc.;Conference Proceeding;Companion Proceedings - 24th International Conference on Model-Driven Engineering Languages and Systems, MODELS-C 2021;2021-01-01;https://api.elsevier.com/content/abstract/scopus_id/85123990225
63;Measuring the fidelity of digital twin systems;441;A digital twin is a virtual replica of a system at a certain level of fidelity, synchronized at a specific frequency. Digital twins often replicate physical systems whose simulations are usually computationally costly. One of the solutions to this problem proposed in the literature is to define a hierarchy of multi-fidelity digital twins, where we use one twin or another depending on the specific purpose. However, one of the challenges of this proposal is the need to determine whether the different twins are equivalent to each other and the physical system. In this thesis, we explore different methods to measure this equivalence by analyzing the state and behavior of the twins with the aid of high-level software models.;Association for Computing Machinery, Inc;Conference Proceeding;Proceedings - ACM/IEEE 25th International Conference on Model Driven Engineering Languages and Systems, MODELS 2022: Companion Proceedings;2022-10-23;https://api.elsevier.com/content/abstract/scopus_id/85142936449
67;CPSAML: A Language and Code Generation Framework for Digital Twin based Monitoring of Mobile Cyber-Physical Systems;442;Cyber-physical systems (CPS) are finding increasing use, whether in factories, autonomous vehicles, or smart buildings. Monitoring the execution of CPSs is crucial since CPSs directly influence their physical environment. Like the actual system, the monitoring application must be designed, developed, and tested. Mobile CPSs, in contrast to stationary CPSs, bring the additional requirement that instances can dynamically join, leave, or fail during execution time. This dynamic behavior must also be considered in the monitoring application. This paper presents CPSAML, a language and code generation framework for the model-driven development of mobile CPS systems, including a cockpit application for monitoring and interacting with such a system. The pipeline starts with the formulation of the system and the CPSs it contains at an abstract level by the system architect using a domain-specific modeling language. Next, this model is transformed into SysML 2 for further extension and richer specificity by system engineers on a more technical level. In the last step of the pipeline, the SysML 2 model is used to generate code for the CPS devices, a system-wide digital twin, and the cockpit application mentioned above. This cockpit enables the operator to configure and apply the monitoring and interaction with the system during runtime. We evaluate our CPSAML language and code generation framework on an Indoor Transport System case study with Roomba vacuum cleaner robots.;Association for Computing Machinery, Inc;Conference Proceeding;Proceedings - ACM/IEEE 25th International Conference on Model Driven Engineering Languages and Systems, MODELS 2022: Companion Proceedings;2022-10-23;https://api.elsevier.com/content/abstract/scopus_id/85142923460
68;Using trace alignments for measuring the similarity between a physical and its digital twin;456;A common problem in the development of digital twin systems is the validation that the behavior of both twins, the physical and the digital, is the same, or at least similar enough given the requirements of the digital twin system. In this paper, we propose a method for the alignment of the traces of both twins. Traces are sequences of snapshots that capture the progressive states of each entity. Our approach is based on a bioinformatic algorithm that we adapt and use for the alignment of snapshots. Additionally, we include a set of measures to evaluate the quality of these alignments and reason about the level of fidelity of the digital twin system. Two case studies are used to demonstrate our proposal and evaluate its accuracy and effectiveness.;Association for Computing Machinery, Inc;Conference Proceeding;Proceedings - ACM/IEEE 25th International Conference on Model Driven Engineering Languages and Systems, MODELS 2022: Companion Proceedings;2022-10-23;https://api.elsevier.com/content/abstract/scopus_id/85142936475
69;Enabling semantic interoperability of asset administration shells through an ontology-based modeling method;467;Digital twin technology establishes the future development vision for Industry 4.0, and is also an important exploration direction for the Model-Driven Engineering (MDE) paradigm. Because it builds a more flexible and communicative production system through models that spans life cycle, hierarchy and architecture. The standard proposed under the concept of Industry 4.0, the Asset Administration Shell (AAS), provides a syntactic interoperability interface for all assets involved in smart factories. However, there is still a need to fill the gap regarding semantic interoperability, in order to allow efficient interactions between Industry 4.0 components. Ontologies are a good candidate because they provide formal semantics expressed using a knowledge representation language, and in addition, there are many associated mature tools for reasoning and inference. Therefore, we propose a modeling approach that provides semantic interoperability for AAS-based digital twins using ontologies.;Association for Computing Machinery, Inc;Conference Proceeding;Proceedings - ACM/IEEE 25th International Conference on Model Driven Engineering Languages and Systems, MODELS 2022: Companion Proceedings;2022-10-23;https://api.elsevier.com/content/abstract/scopus_id/85142934810
70;Knowledge driven rapid development of white box digital twins for industrial plant systems;602;Industrial systems like power plants need a significant domain and engineering expertise for their efficient operations. Experts make decisions for multiple operational objectives such as minimizing cost, maximizing productivity, ensuring compliance to environmental conditions, etc. However, deciding strategies to achieve an objective can be highly non-trivial as it may lead to conflicting outcomes concerning other objectives. Modern digital twin(DT) technologies make it possible to build systems to support such decision-making to validate critical decisions. DTs are developed as one-off solutions for individual plants in the current practice, requiring high efforts and domain knowledge. Our work demonstrates the use of a knowledge-driven approach to reduce DT development efforts significantly. The main contribution of our work is an end-to-end architecture that allows us to explicate, structure, and reuse domain knowledge to semi-automate DT development for industrial plants. We integrate technologies like semantic web, model-driven engineering, and formal methods to realize the architecture. Our approach to developing a DT supporting a fault management scenario in a power plant reduced 70% development time and 50% manual efforts.;IEEE Computer Society;Conference Proceeding;IECON Proceedings (Industrial Electronics Conference);2021-10-13;https://api.elsevier.com/content/abstract/scopus_id/85119495014
71;Towards a digital twin for cyber-physical production systems: A multi-paradigm modeling approach in the postal industry;633;This paper presents our early-stage research on a Multi-Paradigm Modeling (MPM) approach as an initial step towards the definition of a Digital Twin (DT) for Cyber-Physical Production Systems (CPPSs). This work takes place in the context of the digitalization of the mail sorting process at La Poste, the French national postal service company. Indeed, La Poste is currently investing on robotics modules for automatically loading mail containers. The main objective is to reduce the painful work for human operators while optimizing the robots usage. We already worked on targeting such a balance in a past effort that resulted in the production of different kinds of models of the La Poste CPPS. However, these models were defined separately and are not directly related to the underlying business process in particular. Thus, we propose an MPM approach starting from this business process as now modeled explicitly in a BPMN model. Then, we refine the high-level business activities into finer-grained activities represented in a UML Activity model. From these latest, we derive the specification of a Multi-Agent System (MAS) developed with the JADE framework and emulating the behavior of the La Poste CPPS. Our longer term objective is to pave the way for supporting the definition of a DT for this CPPS, and potentially for other CPPSs in different contexts in the future.;Association for Computing Machinery, Inc;Conference Proceeding;Proceedings - 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS-C 2020 - Companion Proceedings;2020-10-16;https://api.elsevier.com/content/abstract/scopus_id/85096756100
72;Case study on automated and continuous reliability assessment of software-defined manufacturing based on digital twins;643;Traditional production systems are characterized by rare software updates and fixed production lines. Each production unit is designed and programmed for a specific task. Therefore, the reliability assessment is conducted once before the operation, mostly manually, and is based on traditional reliability models, such as event trees, fault trees, or reliability block diagrams. In comparison to traditional production systems, the focus of modern, complex production systems is shifted towards the software part. This is emphasized by the concepts of digital twins and Software-Defined Manufacturing (SDM). These software-intensive and safety-critical systems have more frequent software updates to address higher system flexibility and adjustable production processes. Therefore, SDM systems require a new approach to reliability assessment. Each software update can change the system behavior significantly. This leads to the necessity to reconduct the reliability assessment automatically before each software update. Advanced and hybrid reliability models are the key enabling technology. These models must be automatically generated and synchronized with the available system models and digital twins. Model-To-Model (M2M) transformation methods are another enabling technology. In this paper, we present a case study on automated and continuous reliability assessment of SDM. It shows, that our new method is a suitable candidate to enable the reliability assessment of SDM based on digital twins. The method includes (i) the extension of SysML v2 for reliability assessment, (ii) the automatic generation of hybrid reliability models from the digital twin, and (iii) their reliability assessment with new solvers developed for our OpenPRA framework.;Association for Computing Machinery, Inc;Conference Proceeding;Proceedings - ACM/IEEE 25th International Conference on Model Driven Engineering Languages and Systems, MODELS 2022: Companion Proceedings;2022-10-23;https://api.elsevier.com/content/abstract/scopus_id/85142927244
74;A Community-sourced view on engineering digital twins: A report from the edt community;644;Digital Twins are an important concept, enabling what-if scenario exploration, predictive maintenance, and other approaches. They help in saving time and physical resources when developing and evolving systems, whether natural or engineered. However, constructing and maintaining digital twins is a challenging engineering task-and, to date, there is a lack of understanding of the engineering techniques and methodologies required. To address these challenges, we created EDT.Community, a programme of seminars on the engineering of digital twins hosting digital twins experts from academia and industry. In this paper, we report on the main topics of discussion from the first year of the programme. We contribute by providing (1) a common understanding of open challenges in research and practice of the engineering of digital twins, and (2) an entry point to researchers who aim to close gaps in the current state of the art.;Association for Computing Machinery, Inc;Conference Proceeding;Proceedings - ACM/IEEE 25th International Conference on Model Driven Engineering Languages and Systems, MODELS 2022: Companion Proceedings;2022-10-23;https://api.elsevier.com/content/abstract/scopus_id/85142928470
75;The OMiLAB Digital Innovation environment: Agile conceptual models to bridge business value with Digital and Physical Twins for Product-Service Systems development;662;OMiLAB is a community of practice which offers a digital ecosystem bringing together open technologies to investigate and apply conceptual modeling methods for varying purposes and domains. One of the core value propositions is a dedicated Digital Innovation environment comprising several toolkits and workspaces, designed to support Product-Service Systems (PSS) prototyping â a key ingredient for PSS lifecycle management. At the core of this environment is a notion of Agile Digital Twin â a conceptual representation that can be tailored with knowledge engineering means to bridge the semantic and functional gap between a business perspective (focusing on value creation) and an engineering perspective (focusing on cyber-physical proofs-of-concept). To facilitate this bridging, the hereby proposed environment orchestrates, across three abstraction layers, methods such as Design Thinking, Agile Modeling Method Engineering and Model-driven Engineering to turn Ideation into smart Product-Service Systems experiments, in a laboratory setting. The proposed environment was built following Design Science principles. It addresses the problem of historically-disconnected skills required for Digital Innovation projects and it provides a testbed for feasibility experimentation. For design-oriented, artifact building research, a higher Technology Readiness Level can thus be achieved (compared to the level that idea development methods typically attain).;Elsevier B.V.;Journal;Computers in Industry;2022-06-01;https://api.elsevier.com/content/abstract/scopus_id/85125407746
76;Understanding and improving model-driven IoT systems through accompanying digital twins;665;Developers questioning why their system behaves differently than expected often have to rely on time-consuming and error-prone manual analysis of log files. Understanding the behavior of Internet of Things (IoT) applications is a challenging task because they are not only inherently hard-to-trace distributed systems, but their integration with the environment via sensors adds another layer of complexity. Related work proposes to record data during the execution of the system, which can later be replayed to analyze the system. We apply the model-driven development approach to this idea and leverage digital twins to collect the required data. We enable developers to replay and analyze the system's executions by applying model-to-model transformations. These transformations instrument component and connector (C&C) architecture models with components that reproduce the system's environment based on the data recorded by the system's digital twin. We validate and evaluate the feasibility of our approach using a heating, ventilation, and air conditioning (HVAC) case study. By facilitating the reproduction of the system's behavior, our method lowers the barrier to understanding the behavior of model-driven IoT systems.;Association for Computing Machinery, Inc;Conference Proceeding;GPCE 2021 - Proceedings of the 20th ACM SIGPLAN International Conference on Generative Programming: Concepts and Experiences, co-located with SPLASH 2021;2021-10-17;https://api.elsevier.com/content/abstract/scopus_id/85120898349
77;DataTime: A Framework to smoothly Integrate Past, Present and Future into Models;680;Models at runtime have been initially investigated for adaptive systems. Models are used as a reflective layer of the current state of the system to support the implementation of a feedback loop. More recently, models at runtime have also been identified as key for supporting the development of full-fledged digital twins. However, this use of models at runtime raises new challenges, such as the ability to seamlessly interact with the past, present and future states of the system. In this paper, we propose a framework called DataTime to implement models at runtime which capture the state of the system according to the dimensions of both time and space, here modeled as a directed graph where both nodes and edges bear local states (ie. values of properties of interest). DataTime provides a unifying interface to query the past, present and future (predicted) states of the system. This unifying interface provides i) an optimized structure of the time series that capture the past states of the system, possibly evolving over time, ii) the ability to get the last available value provided by the system's sensors, and iii) a continuous micro-learning over graph edges of a predictive model to make it possible to query future states, either locally or more globally, thanks to a composition law. The framework has been developed and evaluated in the context of the Intelligent Public Transportation Systems of the city of Rennes (France). This experimentation has demonstrated how DataTime can deprecate the use of heterogeneous tools for managing data from the past, the present and the future, and facilitate the development of digital twins.;Institute of Electrical and Electronics Engineers Inc.;Conference Proceeding;Proceedings - 24th International Conference on Model-Driven Engineering Languages and Systems, MODELS 2021;2021-01-01;https://api.elsevier.com/content/abstract/scopus_id/85123423166
