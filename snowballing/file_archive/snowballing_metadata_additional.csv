;title;Unnamed: 0;abstract;dc:publisher;prism:aggregationType;prism:publicationName;prism:coverDate;prism:url
0;Model-driven digital twin construction: Synthesizing the integration of cyber-physical systems with their information systems;42;Digital twins emerge in many disciplines to support engineering, monitoring, controlling, and optimizing cyber-physical systems, such as airplanes, cars, factories, medical devices, or ships. There is an increasing demand to create digital twins as representation of cyber-physical systems and their related models, data traces, aggregated data, and services. Despite a plethora of digital twin applications, there are very few systematic methods to facilitate the modeling of digital twins for a given cyber-physical system. Existing methods focus only on the construction of specific digital twin models and do not consider the integration of these models with the observed cyber-physical system. To mitigate this, we present a fully model-driven method to describe the software of the cyber-physical system, its digital twin information system, and their integration. The integration method relies on MontiArc models of the cyber-physical system's architecture and on UML/P class diagrams from which the digital twin information system is generated. We show the practical application and feasibility of our method on an IoT case study. Explicitly modeling the integration of digital twins and cyber-physical systems eliminates repetitive programming activities and can foster the systematic engineering of digital twins.;Association for Computing Machinery, Inc;Conference Proceeding;Proceedings - 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems, MODELS 2020;2020-10-16;https://api.elsevier.com/content/abstract/scopus_id/85096992990
3;Model-Driven Development of a Digital Twin for Injection Molding;131;Digital Twins (DTs) of Cyber-Physical Production Systems (CPPSs) enable the smart automation of production processes, collection of data, and can thus reduce manual efforts for supervising and controlling CPPSs. Realizing DTs is challenging and requires significant efforts for their conception and integration with the represented CPPS. To mitigate this, we present an approach to systematically engineering DTs for injection molding that supports domain-specific customizations and automation of essential development activities based on a model-driven reference architecture. In this approach, reactive CPPS behavior is defined in terms of a Domain-Specific Language (DSL) for specifying events that occur in the physical system. The reference architecture connects to the CPPS through a novel DSL for representing OPC-UA bindings. We have evaluated this approach with a DT of an injection molding machine that controls the machine to optimize the Design of Experiment (DoE) parameters between experiment cycles before the products are molded. Through this, our reference implementation of the DT facilitates the time-consuming setup of a DT and the subsequent injection molding activities. Overall, this facilitates to systematically engineer digital twins with reactive behavior that help to optimize machine use.;Springer;Book Series;Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics);2020-01-01;https://api.elsevier.com/content/abstract/scopus_id/85086228557
4;AML4DT: A Model-Driven Framework for Developing and Maintaining Digital Twins with AutomationML;134;As technologies such as the Internet of Things (IoT) and Cyber-Physical Systems (CPS) are becoming ubiquitous, systems adopting these technologies are getting increasingly complex. Digital Twins (DTs) provide comprehensive views on such systems, the data they generate during runtime, as well as their usage and evolution over time. Setting up the required infrastructure to run a Digital Twin is still an ambitious task that involves significant upfront efforts from domain experts, although existing knowledge about the systems, such as engineering models, may be already available for reuse. To address this issue, we present AML4DT, a model-driven framework supporting the development and maintenance of Digital Twin infrastructures by employing AutomationML (AML) models. We automatically establish a connection between systems and their DTs based on dedicated DT models. These DT models are automatically derived from existing AutomationML models, which are produced in the engineering phases of a system. Additionally, to alleviate the maintenance of the DTs, AML4DT facilitates the synchronization of the AutomationML models with the DT infrastructure for several evolution cases. A case study shows the benefits of developing and maintaining DTs based on AutomationML models using the proposed AML4DT framework. For this particular study, the effort of performing the required tasks could be reduced by about 50%.;Institute of Electrical and Electronics Engineers Inc.;Conference Proceeding;IEEE International Conference on Emerging Technologies and Factory Automation, ETFA;2021-01-01;https://api.elsevier.com/content/abstract/scopus_id/85122957318
5;Towards Model-Driven Digital Twin Engineering: Current Opportunities and Future Challenges;147;Digital Twins have emerged since the beginning of this millennium to better support the management of systems based on (real-time) data collected in different parts of the operating systems. Digital Twins have been successfully used in many application domains, and thus, are considered as an important aspect of Model-Based Systems Engineering (MBSE). However, their development, maintenance, and evolution still face major challenges, in particular: (i) the management of heterogeneous models from different disciplines, (ii) the bi-directional synchronization of digital twins and the actual systems, and (iii) the support for collaborative development throughout the complete life-cycle. In the last decades, the Model-Driven Engineering (MDE) community has investigated these challenges in the context of software systems. Now the question arises, which results may be applicable for digital twin engineering as well. In this paper, we identify various MDE techniques and technologies which may contribute to tackle the three mentioned digital twin challenges as well as outline a set of open MDE research challenges that need to be addressed in order to move towards a digital twin engineering discipline.;Springer Science and Business Media Deutschland GmbHinfo@springer-sbm.com;Book Series;Communications in Computer and Information Science;2020-01-01;https://api.elsevier.com/content/abstract/scopus_id/85094117399
7;Using UML and OCL Models to Realize High-Level Digital Twins;148;Digital twins constitute virtual representations of physically existing systems. However, their inherent complexity makes them difficult to develop and prove correct. In this paper we explore the use of UML and OCL, complemented with an executable language, SOIL, to build and test digital twins at a high level of abstraction. We also show how to realize the bidirectional connection between the UML models of the digital twin in the USE tool with the physical twin, using an architectural framework centered on a data lake. We have built a prototype of the framework to demonstrate our ideas, and validated it by developing a digital twin of a Lego Mindstorms car. The results allow us to show some interesting advantages of using high-level UML models to specify virtual twins, such as simulation, property checking and some other types of tests.;Institute of Electrical and Electronics Engineers Inc.;Conference Proceeding;Companion Proceedings - 24th International Conference on Model-Driven Engineering Languages and Systems, MODELS-C 2021;2021-01-01;https://api.elsevier.com/content/abstract/scopus_id/85123990225
8;Automated Model Transformation in modeling Digital Twins of Industrial Internet-of-Things Applications utilizing AutomationML;149;In recent years, the manufacturing industry sector has undergone major changes. Better known by the term Industry 4.0, this trend describes the transformation of centrally managed production systems towards decentralized value creation networks. As this leads to a strong increase regarding complexity, engineering such current or future manufacturing systems becomes a difficult task. An example for such a challenging engineering process is the selection of technical implementations fulfilling all requirements and performing the needed functions. In order to support this process, model-based systems engineering (MBSE) and its expressions like model-driven architecture (MDA) proved to be promising approaches. However, semi or fully automated model transformations, which could deal with the aforementioned issue, are still yet widely unexplored in the industrial area. Therefore, this paper introduces an approach transforming the logical architecture of a system into its technical implementation by utilizing AutomationML. As the goal is to perform this step automatically, additional tool support is provided by developing specific software. The results of this approach are thereby evaluated by a real-world case study, which is applied according to the concepts of the Reference Architecture Model Industrie 4.0 (RAMI 4.0).;Institute of Electrical and Electronics Engineers Inc.;Conference Proceeding;IEEE International Conference on Emerging Technologies and Factory Automation, ETFA;2021-01-01;https://api.elsevier.com/content/abstract/scopus_id/85122922012
9;A Methodology for Digital Twin Modeling and Deployment for Industry 4.0;153;"The digital twin (DT) is a virtual representation of a physical object, which has been proposed as one of the key concepts for Industry 4.0. The DT provides a virtual representation of products along their lifecycle that enables the prediction and optimization of the behavior of a production system and its components. A methodology design using model-driven engineering (MDE) is proposed that strives toward being both flexible and generic. This approach is presented at two levels: first, a DT is modeled as a composition of basic components that provide basic functionalities, such as identification, storage, communication, security, data management, human-machine interface (HMI), and simulation; second, an aggregated DT is defined as a hierarchical composition of other DTs. A generic reference architecture based on these concepts and a concrete implementation methodology are proposed using AutomationML. This methodology follows an MDE approach that supports most of the DT features currently proposed in the literature. A case study has been developed, the proposed ideas are being evaluated with industrial case studies, and some of the preliminary results are described in this article. With the case study, it is possible to verify that the proposed methodology supports the creation and the deployment process of a DT.";Institute of Electrical and Electronics Engineers Inc.;Journal;Proceedings of the IEEE;2021-04-01;https://api.elsevier.com/content/abstract/scopus_id/85098780861
10;Enabling semantic interoperability of asset administration shells through an ontology-based modeling method;156;Digital twin technology establishes the future development vision for Industry 4.0, and is also an important exploration direction for the Model-Driven Engineering (MDE) paradigm. Because it builds a more flexible and communicative production system through models that spans life cycle, hierarchy and architecture. The standard proposed under the concept of Industry 4.0, the Asset Administration Shell (AAS), provides a syntactic interoperability interface for all assets involved in smart factories. However, there is still a need to fill the gap regarding semantic interoperability, in order to allow efficient interactions between Industry 4.0 components. Ontologies are a good candidate because they provide formal semantics expressed using a knowledge representation language, and in addition, there are many associated mature tools for reasoning and inference. Therefore, we propose a modeling approach that provides semantic interoperability for AAS-based digital twins using ontologies.;Association for Computing Machinery, Inc;Conference Proceeding;Proceedings - ACM/IEEE 25th International Conference on Model Driven Engineering Languages and Systems, MODELS 2022: Companion Proceedings;2022-10-23;https://api.elsevier.com/content/abstract/scopus_id/85142934810
