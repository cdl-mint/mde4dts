ID;Title;model processing technique;source;source category;source sub-category 1;source sub-category 2;source model target category;target;target category;target sub-category 1;target sub-category 2;target model target category;Technological Readiness Level;system lifecycle phase;twinning target;twin lifecycle phase;use case domain;Use Case
1;A digital twin-driven hybrid approach for the prediction of performance degradation in transmission unit of CNC machine tool;Model Interpretation;hybrid model (physical, geometric, behavior, rule);behavior + structure model;data;;PT;performance degredation measurement algorithm;Software;data processing;;;Evaluation Research;Design;Individual Systems;As-Operated;Manufacturing;Transmission of CNC Machine
1;A digital twin-driven hybrid approach for the prediction of performance degradation in transmission unit of CNC machine tool;Model Interpretation;runtime data;structural model;data;;PT;simulation engine;Software;simulation software;;;;Design;;;;
2;A framework for Model-Driven Engineering of resilient software-controlled systems;Code Generation;SysML: BDD;structural model;data;;PT;Knowledge Base of software digital twins (Metamodel proposed in Figure 5 of the paper) -> in fact, this is the class diagram of their knowledge base;Software;database;;;Validation Research;Design;Individual Systems;As-Designed;Transportation and Storage;limited traffic zone access control
2;A framework for Model-Driven Engineering of resilient software-controlled systems;Model Interpretation;Fault Trees;behavior model;discrete behavior;;PT;FaultTreeAnalyzer (metamodel proposed in Figure 8);Software;control;;;;Design;;;;
3;A Methodology for Digital Twin Modeling and Deployment for Industry 4.0;Code Generation;AutomationML models;structural model;data;;PT;DT runtime memory;software;other software;;;Validation Research;Operate;Systems of Systems;As-Operated;Manufacturing;refinery automationsystem with four valves 
3;A Methodology for Digital Twin Modeling and Deployment for Industry 4.0;Model Interpretation;AutomationML models;structural model;data;;Software;Restful API, Html pages;Software;visualization software;;;;Design;;;;
4;A Model-Driven Approach for Situational Intelligence & Operational Awareness;Model Interpretation;electrical system model;structural model;data;;PT;;Software;simulation software;;;Solution Proposal;Operate;Individual Systems;As-Designed;Electricity;
5;A Novel Methodology to Construct Digital Twin Models for Spacecraft Operations Using Fault and Behaviour Trees;Model to Model Transformation;Fault Trees;structural model;discrete behavior;;PT;Behavior Trees (BTs);behavior model;discrete behavior;;PT;Solution Proposal;Operate;Individual Systems;As-Operated;Professional, Scientific;ground station of a spacecraft
5;A Novel Methodology to Construct Digital Twin Models for Spacecraft Operations Using Fault and Behaviour Trees;Model to Model Transformation;Fault Trees;behavior model;discrete behavior;;PT;Operations-Dedicated Models (ODMs);structural model;data;;PT;;Operate;;;;
5;A Novel Methodology to Construct Digital Twin Models for Spacecraft Operations Using Fault and Behaviour Trees;Model Interpretation;DT model (=ODM model);structural model;data;;Software;UI-based monitoring tools;Software;visualization software;;;;Operate;;;;
6;"A pattern catalog for augmenting Digital Twin models with behavior; [Ein Musterkatalog zur Erweiterung von digitalen Zwillingsmodellen um Verhaltenssichten]";Model to Model Transformation;behavior model;behavior model;discrete behavior;;PT;structure + behavior model (DTML);behavior + structure model;data;discrete behavior;PT;Validation Research;Design;Individual Systems;As-Designed;Manufacturing;3D Printer
6;"A pattern catalog for augmenting Digital Twin models with behavior; [Ein Musterkatalog zur Erweiterung von digitalen Zwillingsmodellen um Verhaltenssichten]";Model to Model Transformation;structure model;structural model;data;;PT;structure + behavior model (DTML);behavior + structure model;data;discrete behavior;PT;;Design;;;;
7;AML4DT: A Model-Driven Framework for Developing and Maintaining Digital Twins with AutomationML;Model to Model Transformation;AML;structural model;data;;PT;DT-MM;structural model;data;;PT;Validation Research;Implement;Individual Systems;As-Designed;Administrative;Air Quality Opitmization System
7;AML4DT: A Model-Driven Framework for Developing and Maintaining Digital Twins with AutomationML;Model to Model Transformation;DT-MM;structural model;data;;PT;Json Files;structural model;data;;PT;;Maintain;;;;
8;Case Study on Automated and Continuous Reliability Assessment of Software-Defined Manufacturing Based on Digital Twins;Model to Model Transformation;SysML v2 action sequences;behavior model;discrete behavior;;PT;Markov chains;behavior model;discrete behavior;;PT;Validation Research;Operate;Individual Systems;As-Operated;Manufacturing;
8;Case Study on Automated and Continuous Reliability Assessment of Software-Defined Manufacturing Based on Digital Twins;Model to Model Transformation;SysML v2 structure models;structural model;data;;PT;Fault Trees;behavior model;discrete behavior;;PT;;Operate;;;;
9;Closed-Loop Systems Engineering (CLOSE): Integrating Experimentable Digital Twins with the Model-Driven Engineering Process;Model Interpretation;Semantic Reference Model  (physical product parts) -> Experimentable Digital Twin;behavior model;continuous behavior;;PT;Simulator;Software;simulation software;;;Evaluation Research;Design;Individual Systems;As-Designed;Transportation and Storage;Autonomous Underwater Vehicle (Torpedo)
10;Combining Low-Code Programming and SDL-Based Modeling with Snap! in the Industry 4.0 Context;Model to Model Transformation;SDL model;behavior model;discrete behavior;;PT;Discrete Event System Specification (formal model for simulation engines);behavior model;discrete behavior;;PT;Evaluation Research;Design;Processes;As-Designed;Education;
10;Combining Low-Code Programming and SDL-Based Modeling with Snap! in the Industry 4.0 Context;Model to Model Transformation;SDL model;behavior model;discrete behavior;;PT;Snap!;behavior model;discrete behavior;;PT;;Design;;;;
11;Concept of a Modular and System Model Driven Digital Twin for Engineering Education;Model to Model Transformation;SysML models (BDD, Sequence Diagram, Parametric Diagram, State Machines);behavior + structure model;data;discrete behavior;PT;Simulink Model;behavior model;continuous behavior;;PT;Solution Proposal;Design;Individual Systems;As-Designed;Education;education platform
12;CPSAML: A Language and Code Generation Framework for Digital Twin Based Monitoring of Mobile Cyber-Physical Systems;Model to Model Transformation;CPSAML;structural model;architecture;;Software;SysML (partial model);structural model;architecture;;Software;Validation Research;Design;Individual Systems;As-Designed;Accommodation;Roomba floor cleaning robot
12;CPSAML: A Language and Code Generation Framework for Digital Twin Based Monitoring of Mobile Cyber-Physical Systems;Code Generation;SysML (complete model);structural model;data;;Software;CPS software code (ROS Packages, DT, Monitoring Cockpit). Sprachen: Java, Typescript, Python, Docker;Software;visualization software;;;;Implement;;;;
13;DataTime: a Framework to smoothly Integrate Past, Present and Future into Models;Model Interpretation;DataTime DSL;structural model;data;;PT;DATA Time Framework;Software;machine learning;;;Evaluation Research;Operate;Systems of Systems;As-Operated;Transportation and Storage;Intelligent Public Transportation Systems of the city of Rennes (France)
14;Digital Behavioral Twins for Safe Connected Cars;Model Interpretation;"discrete markov decision process for modeling driving context; behavioral AI model";behavior model;discrete behavior;;PT;"Risk Analyzer; linear ML methods";Software;machine learning;;;Evaluation Research;Design;Systems of Systems;As-Designed;Transportation and Storage;Connected Vehicles Behaviour prediction
15;Digital Twin as Risk-Free Experimentation Aid for Techno-Socio-Economic Systems;Model Interpretation;System DT (Metamodel proposed by authors in Figure 5);structural model;data;;PT;Learning Agent (Reinforcement Learning Algorithm);Software;machine learning;;;Validation Research;Operate;Systems of Systems;As-Designed;Transportation and Storage;Parcel Sorting Terminal
16;Digital Twin of an Electrical Motor Based on Empirical Performance Model;Model Interpretation;Unity Model;behavior model;continuous behavior;;PT;ROS Bridge;Software;simulation software;;;Solution Proposal;Operate;Individual Systems;As-Designed;Transportation and Storage;
16;Digital Twin of an Electrical Motor Based on Empirical Performance Model;Model Interpretation;Unity Model;behavior model;continuous behavior;;PT;Simulation Controller;Software;simulation software;;;;Operate;;;;
17;Digital Twins Driving Model Based on Petri Net in Industrial Pipeline;Model Interpretation;Petrinet;behavior model;discrete behavior;;;real time simulation of state;Software;simulation software;;;Validation Research;Operate;Processes;As-Operated;Manufacturing;Suit tailoring
18;Enabling Semantic Interoperability of Asset Administration Shells through an Ontology-Based Modeling Method;Model to Model Transformation;OML Vocabulary;behavior + structure model;ontology;;PT;UML Profile;structural model;data;;PT;Solution Proposal;Design;Systems of Systems;As-Designed;Manufacturing;robotic cell (niryo ned for gripping + turtlebot for transportation)
19;Ensuring consistency in scalable-detail models for DT-based control;Model Interpretation;Modelica model;behavior model;continuous behavior;;PT;Modelica Simulator;Software;simulation software;;;Solution Proposal;Implement;Individual Systems;As-Designed;Accommodation;electric heater system
20;Generating customized low-code development platforms for digital twins;Code Generation;MontiArc model;structural model;architecture;;Software;Digital Twin Implementation: Java code, Software Architecture Components + Glue Code;Software;other software;;;Evaluation Research;Implement;Individual Systems;As-Operated;Manufacturing;injection molding machine
20;Generating customized low-code development platforms for digital twins;Model Interpretation;ECA;behavior model;discrete behavior;;Software;Evaluator Component of DT Archtiecture;Software;control;;;;Operate;;;;
20;Generating customized low-code development platforms for digital twins;Code Generation;CD;structural model;data;;PT;Digital Twin Implementation: Java code (Backend);Software;data processing;;;;Implement;;;;
20;Generating customized low-code development platforms for digital twins;Model Interpretation;CBR;behavior model;discrete behavior;;PT;Reasoner Component of DT Architecture;Software;control;;;;Operate;;;;
20;Generating customized low-code development platforms for digital twins;Model Interpretation;Communication specification;structural model;data;;Software;Java Code for communication between CPS and DT;Software;data processing;;;;Implement;;;;
20;Generating customized low-code development platforms for digital twins;Model Interpretation;DSL component + GUI models for editor and viewer + DT components;structural model;architecture;;Software;Digital Twin Implementation: Low-code editor for DT configuration;Software;visualization software;;;;Implement;;;;
20;Generating customized low-code development platforms for digital twins;Code Generation;GUI Model;structural model;ui configuration;;Software;Digital Twin Implementation: DT Cockpit;Software;visualization software;;;;Implement;;;;
21;Automated Model Transformation in modeling Digital Twins of Industrial Internet-of-Things Applications utilizing AutomationML;Model to Model Transformation;AutomationML models;structural model;data;;PT;AutomationML model;structural model;data;;PT;Validation Research;Design;Individual Systems;As-Designed;Manufacturing;Fischertechnik
22;Generating Digital Twin Cockpits for Parameter Management in the Engineering of Wind Turbines;Model to Model Transformation;UML Class Diagram;structural model;data;;Software;UI Model;structural model;ui configuration;;Software;Solution Proposal;Implement;Individual Systems;As-Designed;Electricity;cooling system of a wind turbine
22;Generating Digital Twin Cockpits for Parameter Management in the Engineering of Wind Turbines;Code Generation;GUI Model;structural model;ui configuration;;Software;Part of DT UI Cockpit (Typescript);Software;visualization software;;;;Implement;;;;
22;Generating Digital Twin Cockpits for Parameter Management in the Engineering of Wind Turbines;Code Generation;UML Class Diagram;structural model;data;;Software;Part of DT UI Cockpit (Python + Typescript);Software;visualization software;;;;Implement;;;;
23;Generative and Model-driven SDK development for the Industrie 4.0 Digital Twin;Code Generation;AAS model;structural model;data;;Software;GPL (shown for C#/Java) Stubs + Contracts;Software;other software;;;Validation Research;Implement;;As-Designed;;
24;Integration of SysML Models in a 3D Environment for Virtual Testing and Validation;Model to Model Transformation;SysML models;structural model;data;;PT;Unity Model;structural model;data;;PT;Solution Proposal;Design;Systems of Systems;As-Designed;Electricity;
25;Interface Development for Digital Twin of an Electric Motor Based on Empirical Performance Model;Code Generation;Unity Model;behavior model;continuous behavior;;PT;Simulation Controller;Software;simulation software;;;Solution Proposal;Operate;Individual Systems;As-Designed;Transportation and Storage;
25;Interface Development for Digital Twin of an Electric Motor Based on Empirical Performance Model;Code Generation;Unity Model;behavior model;continuous behavior;;PT;ROS Bridge;Software;simulation software;;;;Operate;;;;
26;Knowledge driven rapid development of white box digital twins for industrial plant systems;Model to Model Transformation;M&CML;structural model;data;;PT;fininte state machine;behavior model;discrete behavior;;PT;Validation Research;Implement;Individual Systems;As-Designed;Electricity;
26;Knowledge driven rapid development of white box digital twins for industrial plant systems;Model to Model Transformation;SADL ontology;behavior + structure model;ontology;;PT;M&CML control systems model;structural model;data;;PT;;Implement;;;;power plant
27;Meta-model-based shop-floor digital twin architecture, modeling and application;Model to Model Transformation;raw data (conforming to data model);structural model;data;;PT;SysML BDD;structural model;data;;PT;Evaluation Research;Operate;Systems of Systems;As-Operated;Manufacturing;shopfloor
28;Model-Driven Development of a Digital Twin for Injection Molding;Code Generation;MontiArc;structural model;architecture;;Software;Java;Software;other software;;;Evaluation Research;Implement;Individual Systems;As-Designed;Manufacturing;
28;Model-Driven Development of a Digital Twin for Injection Molding;Code Generation;Classdiagrams;structural model;data;;Software;Java;Software;data processing;;;;Operate;;;;
29;Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;Code Generation;MontiArc model;structural model;architecture;;Software;GPL code for CPS;Software;other software;;;Validation Research;Implement;Individual Systems;As-Designed;Accommodation;automatic fire extinguishing system
29;Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;Model to Model Transformation;MontiArc ADL + Tagging applied on ports of adl model;structural model;architecture;;Software;new MontiArc ADL with components receiving tagged ports;structural model;architecture;;Software;;Implement;;;;
29;Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;Model to Model Transformation;tagging model, Class Diagram, MontiArc Model;structural model;data;;Software;extended MontiArc Model;structural model;architecture;;Software;;Design;;;;
29;Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;Code Generation;UML Class Diagram;structural model;data;;Software;digital twin information system;Software;visualization software;;;;Implement;;;;
29;Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;Code Generation;GUI Model;structural model;ui configuration;;Software;Webpage;Software;visualization software;;;;Implement;;;;
30;Model-driven engineering city spaces via bidirectional model transformations;Model to Model Transformation;CityGML model;structural model;data;;Software;cyber-physical spaces (3D topology) model;structural model;data;;PT;Validation Research;Plan;Systems of Systems;As-Designed;Construction;smart city
31;Model-Driven Engineering in Digital Thread Platforms: A Practical Use Case and Future Challenges;Code Generation;GUI Model;structural model;ui configuration;;Software;Web app;Software;visualization software;;;Solution Proposal;Implement;;As-Operated;;
31;Model-Driven Engineering in Digital Thread Platforms: A Practical Use Case and Future Challenges;Code Generation;Process Model;behavior model;discrete behavior;;PT;Web app;Software;visualization software;;;;Implement;;;;
31;Model-Driven Engineering in Digital Thread Platforms: A Practical Use Case and Future Challenges;Code Generation;Data model;structural model;data;;PT;Web app;Software;visualization software;;;;Implement;;;;
32;On the Engineering of IoT-Intensive Digital Twin Software Systems;Model Interpretation;structural model of the PT;structural model;;data;PT;Model Synchronizer + Model Manager component;Software;other software;;;Solution Proposal;Design;;As-Designed;;
32;On the Engineering of IoT-Intensive Digital Twin Software Systems;Model Interpretation;behavioral model of the PT;behavior model;data;;PT;Model Synchronizer + Model Manager component;Software;other software;;;;Design;;;;
33;Proof of Concept for a Roundtrip Engineering IS for the New Enterprise in the Industry 4.0 Era;Code Generation;BPMN;behavior model;discrete behavior;;PT;Python Drone control code;Software;control;;;Solution Proposal;Implement;Individual Systems;As-Designed;Transportation and Storage;Drone fleet
34;Reliable Counterparts: Efficiently Testing Causal Relationships in Digital Twins;Model Interpretation;Causal Directed Acyclic Graphs (DAG);behavior model;discrete behavior;;PT;Inference Engine;Software;simulation software;;PT;Validation Research;Test;Individual Systems;As-Designed;Manufacturing;Robotic arm
35;Semantic Interoperability of Digital Twins: Ontology-based Capability Checking in AAS Modeling Framework;Model to Model Transformation;AAS;structural model;data;;PT;OWL Individuals (MaRCO);behavior + structure model;ontology;;;Validation Research;Design;Individual Systems;As-Designed;Manufacturing;robotic cell (niryo ned for gripping + turtlebot for transportation)
35;Semantic Interoperability of Digital Twins: Ontology-based Capability Checking in AAS Modeling Framework;Model Interpretation;OWL Ontology + OWL Individuals;behavior + structure model;ontology;;PT;capability matchmaker;Software;other software;;;;Design;;;;
35;Semantic Interoperability of Digital Twins: Ontology-based Capability Checking in AAS Modeling Framework;Model Interpretation;AAS Model;structural model;data;;PT;user interface created by the authors (cf. Section 4.C);Software;visualization software;;;;Design;;;;
35;Semantic Interoperability of Digital Twins: Ontology-based Capability Checking in AAS Modeling Framework;Model to Model Transformation;OML;behavior + structure model;ontology;;PT;UML Stereotypes;structural model;data;;PT;;Design;;;;
36;Supporting Digital Twins for the Retrofit in Aviation by a Model-Driven Data Handling;Code Generation;SysML (csv representation);structural model;data;;PT;SysML (Graph Database entries);Software;database;;;Solution Proposal;Maintain;Individual Systems;As-Operated;Transportation and Storage;Aircraft cabine refitting
37;Supporting the Implementation of Digital Twins for IoT-Enhanced BPs;Code Generation;BPMN Model;behavior model;discrete behavior;;PT;java template code for microservices;Software;other software;;;Solution Proposal;Design;Systems of Systems;As-Designed;Accommodation;CO2 Measurement
37;Supporting the Implementation of Digital Twins for IoT-Enhanced BPs;Model to Model Transformation;BPMN Model;behavior model;discrete behavior;;PT;DTDL Model;structural model;data;;PT;;Design;;;;
38;The Framework for Designing Autonomous Cyber-Physical Multi-agent Systems for Adaptive Resource Management;Model Interpretation;Knowledge Base Model;behavior + structure model;ontology;;PT;Scheduling Engine;Software;control;;;Solution Proposal;Design;;As-Designed;;
38;The Framework for Designing Autonomous Cyber-Physical Multi-agent Systems for Adaptive Resource Management;Model Interpretation;Knowledge Base Model;behavior + structure model;ontology;;PT;Simulator;Software;simulation software;;;;Design;;;;
38;The Framework for Designing Autonomous Cyber-Physical Multi-agent Systems for Adaptive Resource Management;Model to Model Transformation;Knowledge Base Model;behavior + structure model;ontology;;PT;Knowledge Base Model (updated with runtime data);behavior + structure model;ontology;;PT;;Design;;;;
39;The OMiLAB Digital Innovation environment: Agile conceptual models to bridge business value with Digital and Physical Twins for Product-Service Systems development;Model Interpretation;BPMN;behavior model;discrete behavior;;PT;OLIVE platform;Software;data processing;control;;Evaluation Research;Design;Individual Systems;As-Designed;Education;
40;Towards a Digital Twin for Cyber-Physical Production Systems: A Multi-Paradigm Modeling Approach in the Postal Industry;Model to Model Transformation;BPMN;behavior model;discrete behavior;;PT;Activity Diagram;behavior model;discrete behavior;;PT;Solution Proposal;Design;Processes;As-Designed;Administrative;sorting robot of a postal center
40;Towards a Digital Twin for Cyber-Physical Production Systems: A Multi-Paradigm Modeling Approach in the Postal Industry;Model to Model Transformation;Activity Diagram;behavior model;discrete behavior;;PT;Class Diagram;structural model;data;;PT;;Design;;;;
41;Towards a Model-Driven Architecture for Interactive Digital Twin Cockpits;Code Generation;CD;structural model;data;;Software;Java Code;Software;data processing;;;Validation Research;Implement;Individual Systems;As-Designed;Manufacturing;
41;Towards a Model-Driven Architecture for Interactive Digital Twin Cockpits;Code Generation;MontiArc model;structural model;architecture;;Software;system architecture;Software;other software;;;;Implement;;;;
41;Towards a Model-Driven Architecture for Interactive Digital Twin Cockpits;Code Generation;GUI Model;structural model;ui configuration;;Software;DT cockpits;Software;visualization software;;;;Implement;;;;
42;Towards Reactive Planning with Digital Twins and Model-Driven Optimization;Model Interpretation;Henshin model;behavior model;discrete behavior;;PT;Digital Twin;Software;simulation software;;;Evaluation Research;Operate;Individual Systems;As-Designed;;
43;Twin Process Model Driven Machining Quality Optimization for Complex Parts;Code Generation;Twin Process Model;behavior model;discrete behavior;;PT;Numeric Control (NC)Code;Software;simulation software;;;Solution Proposal;Operate;Individual Systems;As-Designed;Manufacturing;
44;TwinOps - DevOps Meets Model-Based Engineering and Digital Twins for the Engineering of CPS;Model to Model Transformation;AADL;structural model;architecture;;Software;LNT model (used for model checking);behavior model;continuous behavior;;PT;Solution Proposal;Implement;Systems of Systems;As-Designed;Accommodation;hypothetical monitoring system for a building
44;TwinOps - DevOps Meets Model-Based Engineering and Digital Twins for the Engineering of CPS;Code Generation;AADL;structural model;architecture;;Software;FMI device mock-ups;Software;simulation software;;;;Implement;;;;
44;TwinOps - DevOps Meets Model-Based Engineering and Digital Twins for the Engineering of CPS;Code Generation;AADL;structural model;architecture;;Software;Azure code that is used to execute the system and perform monitoring (I think that both aspects are the same);Software;control;;;;Implement;;;;
44;TwinOps - DevOps Meets Model-Based Engineering and Digital Twins for the Engineering of CPS;Model to Model Transformation;SysML;behavior model;discrete behavior;;Software;AADL;structural model;architecture;;Software;;Design;;;;
45;Understanding and Improving Model-Driven IoT Systems through Accompanying Digital Twins;Code Generation;MontiThings;structural model;architecture;;Software;IoT controller code in C++;Software;control;;;Validation Research;Implement;Individual Systems;As-Operated;Accommodation;"smart lawn watering system; heating, ventilation, and air conditioning of a
smart home"
45;Understanding and Improving Model-Driven IoT Systems through Accompanying Digital Twins;Model to Model Transformation;MontiThings model or real system;structural model;architecture;;Software;MontiThings model or reproduced system;structural model;architecture;;Software;;Operate;;;;
46;Using Trace Alignments for Measuring the Similarity between a Physical and Its Digital Twin;Model Interpretation;OD (Snapshot of PT and DT);structural model;data;;PT + software;Trace Alignment Algorithm;Software;data processing;;;Solution Proposal;Operate;Individual Systems;As-Operated;Manufacturing;Robotic arm
46;Using Trace Alignments for Measuring the Similarity between a Physical and Its Digital Twin;Model Interpretation;"OD (Snapshot); CD (snapshot metamodel)";structural model;data;;PT + software;Type Checking Algorithm;Software;other software;;;;Operate;;;;
47;Using UML and OCL Models to Realize High-Level Digital Twins;Model Interpretation;UML class diagram;structural model;data;;Software;uml cd adapter that interprets CD and adapts a data lake accordingly (data lake stores data from the PT);Software;database;;;Solution Proposal;Operate;;As-Designed;Transportation and Storage;lego mindstorms car
48;Workshop Management and Control System Based on Digital Twin;Model Interpretation;dt physical model;structural model;data;;PT;DT Simulation;Software;simulation software;;;Validation Research;Implement;Individual Systems;As-Designed;Manufacturing;
48;Workshop Management and Control System Based on Digital Twin;Model Interpretation;behavior model;behavior model;discrete behavior;;PT;DT Simulation;Software;simulation software;;;;Implement;;;;
48;Workshop Management and Control System Based on Digital Twin;Model Interpretation;geometric model;structural model;data;;PT;DT Simulation;Software;simulation software;;;;Implement;;;;
49;A Model Based Framework for IoT-Aware Business Process Management;Model to Model Transformation;BPMN;behavior model;discrete behavior;;PT;IoTBPMN;behavior model;discrete behavior;;PT;Validation Research;Design;Processes;As-Designed;Water Supply;Water Monitoring System
49;A Model Based Framework for IoT-Aware Business Process Management;Code Generation;IoTBPMN;behavior model;discrete behavior;;PT;eBPMN (java-based implementation of a BP digital twin);behavior model;control;;PT;;Implement;;;;
49;A Model Based Framework for IoT-Aware Business Process Management;Code Generation;SysML;structural model;architecture;;Software;application-specific sensor driver code;software;data processing;;;;Implement;;;;
50;A Model-Driven Digital Twin for Manufacturing Process Adaptation;Model Interpretation;Application-Specific Behavior Model;behavior model;discrete behavior;;PT;Digital Twin (I assume the information system);software;control;;;Validation Research;Implement;Individual Systems;As-Designed;Manufacturing;adaptive condition mapping
50;A Model-Driven Digital Twin for Manufacturing Process Adaptation;Code Generation;Class Diagrams;structural model;data;;PT;DT information system;software;data processing;;;;Implement;;;;
50;A Model-Driven Digital Twin for Manufacturing Process Adaptation;Code Generation;MontiArc models;structural model;architecture;;Software;DT architecture;software;data processing;;;;Implement;;;;
50;A Model-Driven Digital Twin for Manufacturing Process Adaptation;Code Generation;OPCUA adress space model, machine interface model, mapping between opcua and machine interface;structural model;data;;PT;Kafka/OPCUA client implementation;software;data processing;;;;Design;;;;
51;A Modeling Approach Supporting Digital Twin Engineering: Optimizing the Energy Consumption of Air Conditioning Facilities;Model Interpretation;ADOxx-based DSL for air conditioning facilities;structural model;ontology;;PT;API Gateway;software;data processing;;;Evaluation Research;Operate;Individual Systems;As-Operated;Accommodation;Air conditioning
51;A Modeling Approach Supporting Digital Twin Engineering: Optimizing the Energy Consumption of Air Conditioning Facilities;Model to Model Transformation;DSML for air conditioning;structural model;data;;PT;JSON;structural model;data;;PT;;Design;;;;
52;AC-ROS: Assurance case driven adaptation for the robot operating system;Model to Model Transformation;Goal Structure Notation (GSN) Model;structural model;data;;PT;Figure 6: ROS Launch Files;structural model;data;;PT;Validation Research;Implement;Individual Systems;As-Operated;Transportation;Autonomously Driving Surveillance Car
52;AC-ROS: Assurance case driven adaptation for the robot operating system;Model Interpretation;GSN Model;structural model;data;;PT;Figure 7: Analysis Component of a MAPE-K System;software;data processing;;;;Operate;;;;
53;An enhanced state-aware model learning approach for security analysis in lightweight protocol implementations;Model Interpretation;Protocol State Machine;behavior model;discrete behavior;;PT;Figure 4: Vulnerability Analysis and Exploitation Component;software;simulation software;;;Solution Proposal;Operate;;As-Operated;;
54;Digital twin model-driven capacity evaluation and scheduling optimization for ship welding production line;Model to Model Transformation;data ;structural model;data;;PT;config model, process rule model base, control logic model base, simulation model base --> Digital Twin Model welding production line;structural model;data;;PT;Evaluation Research;Operate;Systems of Systems;As-Operated;Manufacturing;Ship Manufacturing Production Line
54;Digital twin model-driven capacity evaluation and scheduling optimization for ship welding production line;Model Interpretation;DTD-WPL (Digital twin data of welding production line) Model (comprising of Production line configuration model, Process rule model, Control logic model, Sub-model base and Simulation model);behavior + structure model;discrete behavior;continuous behavior;PT;Figure 8: Simulation Engine;software;simulation software;;;;Operate;;;;
55;Empowering Industry 4.0 with Generative and Model-Driven SDK Development;Model to Model Transformation;AAS Model;structural model;data;;PT;Abstract Syntax Tree (AST);structural model;data;;PT;Solution Proposal;Implement;Individual Systems;As-Designed;;
55;Empowering Industry 4.0 with Generative and Model-Driven SDK Development;Code Generation;Intermediate Representation of Abstract Syntax Tree;structural model;data;;PT;C# + Python + TypeScript SDK;software;data processing;;;;Implement;;;;
56;Explaining Cyberphysical System Behavior With Digital Twins;Code Generation;Domain Model;structural model;data;;PT;Dgital Twin Cockpit;software;visualization software;;;Solution Proposal;Implement;;As-Designed;;
56;Explaining Cyberphysical System Behavior With Digital Twins;Code Generation;Architecture Model;structural model;architecture;;Software;Dgital Twin Cockpit;software;visualization software;;;;Implement;;;;
56;Explaining Cyberphysical System Behavior With Digital Twins;Code Generation;GUI Model;structural model;ui configuration;;Software;Dgital Twin Cockpit;software;visualization software;;;;Implement;;;;
56;Explaining Cyberphysical System Behavior With Digital Twins;Code Generation;OCL Model;structural model;data;;PT;Dgital Twin Cockpit;software;visualization software;;;;Implement;;;;
56;Explaining Cyberphysical System Behavior With Digital Twins;Model Interpretation;Reasoning Model;behavior model;discrete behavior;;PT;evaluator component;software;control;;;;Operate;;;;
56;Explaining Cyberphysical System Behavior With Digital Twins;Model Interpretation;Process Model;behavior model;discrete behavior;;PT;evaluator component;software;control;;;;Operate;;;;
56;Explaining Cyberphysical System Behavior With Digital Twins;Model to Model Transformation;System Description;structural model;;;PT;Explanation Model;behavior + structure model;ontology;;;;Maintain;;;;
56;Explaining Cyberphysical System Behavior With Digital Twins;Model to Model Transformation;Process Model;behavior model;discrete behavior;;PT;Explanation Model;behavior + structure model;ontology;;;;Maintain;;;;
56;Explaining Cyberphysical System Behavior With Digital Twins;Model to Model Transformation;Reasoning Model;behavior model;discrete behavior;;PT;Explanation Model;behavior + structure model;ontology;;;;Maintain;;;;
57;Extracting Hardware Reconfiguration Models based on Knowledge Synthesis from STEP Files;Model to Model Transformation;STEP + ODP Model;behavior + structure model;ontology;;PT;OWL Model;structural model;ontology;;;Validation Research;Implement;Individual Systems;As-Designed;;
57;Extracting Hardware Reconfiguration Models based on Knowledge Synthesis from STEP Files;Model to Model Transformation;OWL Model;structural model;ontology;;PT;Feature Model in XML;structural model;ontology;;;;Implement;;;;
58;Generation of Digital Twins for Information Exchange Between Partners in the Industrie 4.0 Value Chain;Code Generation;AAS Meta-Model in Domain-Specific Language;structural model;ontology;;PT;XSD;structural model;data;;PT;Solution Proposal;Implement;;As-Designed;;
58;Generation of Digital Twins for Information Exchange Between Partners in the Industrie 4.0 Value Chain;Code Generation;AAS Meta-Model in Domain-Specific Language;structural model;ontology;;PT;JSON Schema;structural model;data;;PT;;Implement;;;;
58;Generation of Digital Twins for Information Exchange Between Partners in the Industrie 4.0 Value Chain;Code Generation;AAS Meta-Model in Domain-Specific Language;structural model;ontology;;PT;RSDF;structural model;data;;PT;;Implement;;;;
59;Model-based digital twins of medicine dispensers for healthcare IoT applications;Code Generation;Device Domain Model;structural model;ontology;;PT;API for communicating with DT/PT;software;data processing;;;Evaluation Research;Implement;Individual Systems;As-Operated;Human Health;Healthcare System of Oslo
59;Model-based digital twins of medicine dispensers for healthcare IoT applications;Model to Model Transformation;medicine dispenser structure metamodel;structural model;ontology;;PT;JSON;structural model;data;;PT;;Design;;;;
59;Model-based digital twins of medicine dispensers for healthcare IoT applications;Model to Model Transformation;JSON;structural model;data;;PT;medicine dispenser structure instance model;structural model;data;;PT;;Implement;;;;
60;Modeling Urban Digital Twins over the Cloud-to-Thing Continuum;Model Interpretation;UML models;structural model;data;;PT;Validation in USE tool;software;data processing;;PT;Validation Research;Design;Systems of Systems;As-Designed;Transportation;Urban Transportation System of Malaga
61;Supporting Digital Twins Systems Integrating the MERODE Approach;Code Generation;Object Event Table;structural model;data;;PT;Web API, Business Logic and Data Store of the digital twin ;software;data processing;database;;Validation Research;Implement;Individual Systems;As-Operated;Administrative;
61;Supporting Digital Twins Systems Integrating the MERODE Approach;Code Generation;Class Diagram;structural model;data;;PT;Web API, Business Logic and Data Store of the digital twin ;software;data processing;database;;;Implement;;;;
61;Supporting Digital Twins Systems Integrating the MERODE Approach;Code Generation;Finite State Machine;behavior model;discrete behavior;;PT;Web API, Business Logic and Data Store of the digital twin ;software;data processing;;;;Implement;;;;
62;Supporting the Development of Digital Twins in Nuclear Waste Monitoring Systems;Model to Model Transformation;building model, nuclear waste model, sensor network model;structural model;data;;PT;bayesian network model for risk analysis;behavior + structure model;ontology;;PT;Solution Proposal;Implement;Systems of Systems;As-Designed;Water Supply;Nuclear Waste
63;Survey and Practice on Architecture and Deployment Method of Digital Twin System for Intelligent Substation;Model to Model Transformation;Physics-based model;behavior model;continuous behavior;;PT;Data-driven model;software;machine learning;;PT;Solution Proposal;Design;Individual Systems;As-Designed;Electricity;Oil-immersed power transformer
64;Towards Generating Model-Driven Speech Interfaces for Digital Twins;Model Interpretation;Speech Interaction Model;structural model;data;;PT;Speech IO Framework;software;data processing;;;Validation Research;Operate;Individual Systems;As-Designed;Accommodation;Smart Home use case
