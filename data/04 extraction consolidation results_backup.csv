Title;DT Definition;virtual space;Kritzinger;DT is specific;modeling language original;note on modeling language;model type original;modeling language;language fidelity category;language content category;language content category consolidated;model type;model processing technique;model usage technique;source;source category;source sub-category 1;source model target category;target;target category;target sub-category;target model target category;purpose of MDE application;purpose of DT;DTPurposeCategory;use case domain;system lifecycle phase;twinning target;twin lifecycle phase;purpose /expected benefit of using models;open challenges;Technological Readiness Level;notes;Use Case
A digital twin-driven hybrid approach for the prediction of performance degradation in transmission unit of CNC machine tool;DT technology not only can build a virtual model takes advantage of the existing theory and knowledge, also can use the simulation technology of virtual model to explore and forecast the unknown world;;;;;;;;;;;;Model Interpretation;;hybrid model (physical, geometric, behavior, rule);data model;structure model;PT;performance degredation measurement algorithm;software;backend code;;;;;Manufacturing;Design;Individual Systems;As-Operated;;;TRL 4-6;;Transmission of CNC Machine
A digital twin-driven hybrid approach for the prediction of performance degradation in transmission unit of CNC machine tool;DT technology not only can build a virtual model takes advantage of the existing theory and knowledge, also can use the simulation technology of virtual model to explore and forecast the unknown world;;;;;;;;;;;;Model Interpretation;;runtime data;software;runtime data;;physical model;structure model;data model;PT;update model;;;Manufacturing;Design;Individual Systems;As-Operated;;;TRL 4-6;;Transmission of CNC Machine
A framework for Model-Driven Engineering of resilient software-controlled systems;"dynamic virtual model of a system, processor, or service, with data (e.g., sensor data) from physical systems or processes integrated into it.; ""Software digital twins representations provide a key abstraction, providing an agile interface on hardware components, capturing operational behaviours of physical assets and processes, also providing refined and interpreted data, to enable diagnoses, predictive maintenance tasks, process plannings, process optimizations, virtual prototyping, and simulation.""";Model of PT;;;SysML;;structure;SysML;;ontology;logical or physical;Structure;Model to Model Transformation;;SysML: BDD;behavior model;state-based;;Knowledge Base of software digital twins (Metamodel proposed in Figure 5 of the paper) -> in fact, this is the class diagram of their knowledge base;backend code;architecture model;PT;reuse information created by reliability engineers (sysml) for concrete software implementation;mirror items for monitoring and control operations;Monitoring;Transportation and Storage;Design;Individual Systems;As-Designed;formal specification of information in the form of models allows the application of MDE techniques (model transformations);;TRL 1-3;;limited traffic zone access control
A framework for Model-Driven Engineering of resilient software-controlled systems;;;;;Knowledge base model;contribution of the paper;;Knowledge base model;;behavior;structure or behavior;??;Model to Model Transformation;;Fault Trees;structural model;data model;;FaultTreeAnalyzer (metamodel proposed in Figure 8);database;data model;PT;;;;;Design;;As-Designed;;;;;
A Methodology for Digital Twin Modeling and Deployment for Industry 4.0;"""The digital twin (DT) is a virtual representation of a physical object, which has been proposed as one of the key concepts for Industry 4.0.""";Model of PT;;;AutomationML;;structure;AutomationML;;ui configuraiton;data, architecture, ontology, UI configuration;Structure;Code Generation;;AutomationML models;structural model;ui configuraiton model;;Restful API, Html pages;visualization software;architecture model;PT;Synchronizing data from the physical system with the model;Syncronizing data from the physical system with the model;Synchronization;Manufacturing;Design;Individual Systems;As-Designed;"model the physical device, serving as the virtual representation of the device; to model the DT itself, serving as a configuration reference for the deployment phase. ; reusability of similar basic components; model the physical device; serving as the virtual representation of the device; to model the DT itsel - serving as a configuration reference for the deployment phase";;TRL 1-3;;refinery automationsystem with four valves 
A Methodology for Digital Twin Modeling and Deployment for Industry 4.0;;;;;;;structure;;;data;;;Model Interpretation;;AutomationML models;structural model;data model;;DT runtime memory;runtime data;architecture model;Software;;;;;Operate;Systems of Systems;As-Operated;;;;;
A Model-Driven Approach for Situational Intelligence & Operational Awareness;Predictive models of electrical power networks serve as a â€œdigital twinâ€ of the system including network topology, engineering parameters, and other pertinent information with real-time data acquired for depicting the actual operation of the system ;;;;real-time power flow analysis;;E/E Architecture;;;architecture;data, architecture, ontology, UI configuration;E/E Architecture;Model Interpretation;;electrical system model;structural model;data model;PT;;;;;A model-driven approach codifies the engineering design teamâ€™s intent to ensure that facilities operate precisely as they were intended to, or better;;;Electricity;Operate;Individual Systems;As-Designed;"predictive model; As the facility evolves over time, the model can be easily updated to serve as a digital asset repository i.e. digital twin";;TRL 1-3;;
A Novel Methodology to Construct Digital Twin Models for Spacecraft Operations Using Fault and Behaviour Trees;"""a digital twin of a system consists of a set of models of the system, a set of digital shadows, and provides a set of services to use the data and models purposefully with respect to the original system [Da20].""";Comprehensive;DS;;Fault Tree;;behavior;Fault Tree;;architecture;data, architecture, ontology, UI configuration;Behavior;Model to Model Transformation;;Fault Trees;structural model;data model;software;Operations-Dedicated Models (ODMs);visualization software;architecture model;Software;;;;Professional, Scientific;Operate;Individual Systems;As-Operated;;;TRL 1-3;;ground station of a spacecraft
A Novel Methodology to Construct Digital Twin Models for Spacecraft Operations Using Fault and Behaviour Trees;;;;;ODM Models;ODM = DT, but no dedicated language mentioned;structure;ODM Models;;;;??;Model Interpretation;;DT model (=ODM model);structural model;data model;software;UI-based monitoring tools;backend code;architecture model;;;;;;Operate;;As-Operated;;;;;
A Novel Methodology to Construct Digital Twin Models for Spacecraft Operations Using Fault and Behaviour Trees;;;;;;;;;;behavior;logical or physical;;;;;behavior model;state-based;;;structural model;;;;;;;;;;;;;;
"A pattern catalog for augmenting Digital Twin models with behavior; [Ein Musterkatalog zur Erweiterung von digitalen Zwillingsmodellen um Verhaltenssichten]"; DT provides a virtual representation of the physical system that enables bi-directional synchronization between it and its physical counterpart. DTs promise to support a multitude of tasks of the whole system life-cycle ;;;;;;structure;DT Modeling Language (DTML);;architecture;data, architecture, ontology, UI configuration;structure;Model to Model Transformation;;structure model;structural model;data model;PT;structure + behavior model (DTML);structure model;data model;PT;;;;Manufacturing;Design;Individual Systems;As-Designed;;;TRL 1-3;;3D Printer
"A pattern catalog for augmenting Digital Twin models with behavior; [Ein Musterkatalog zur Erweiterung von digitalen Zwillingsmodellen um Verhaltenssichten]"; DT provides a virtual representation of the physical system that enables bi-directional synchronization between it and its physical counterpart. DTs promise to support a multitude of tasks of the whole system life-cycle ;;;;;;behavior;DT Modeling Language (DTML);;behavior;structure & behavior;behavior;Model to Model Transformation;;behavior model;behavior model;state-based;PT;structure + behavior model (DTML);behavior model;state-based;PT;;;;Manufacturing;Design;Individual Systems;As-Designed;;;TRL 1-3;;3D Printer
AML4DT: A Model-Driven Framework for Developing and Maintaining Digital Twins with AutomationML;;;;;AutomationML;;structure;AutomationML;;data;data, architecture, ontology, UI configuration;Structure;Model to Model Transformation;;AML;structural model;data model;PT;DT-MM;structural model;;;;"""By integrating the digital and physical worlds, the DT enables real-time monitoring of systems and processes and helps, for example, to reduce downtimes and detect errors at an early stage""; interface to running system";"Monitoring; Interface";Administrative;Implement;Individual Systems;As-Designed;"reduces complexity through abstraction, enables automation through model-driven engineering; represent information across asset lifecycle, reuse information based on machine-readable format of models";;TRL 1-3;;Air Quality Opitmization System
AML4DT: A Model-Driven Framework for Developing and Maintaining Digital Twins with AutomationML;;;;;Azure DTDL;focus on CAEX;structure;Azure DTDL;;architecture;data, architecture, ontology, UI configuration;Structure;Code Generation;;DT-MM;structural model;data model;;Json Files;structural model;;;;;;;Maintain;;As-Designed;;;;;
AML4DT: A Model-Driven Framework for Developing and Maintaining Digital Twins with AutomationML;a virtual model of a city;;;specific;DT-MM: platform-neutral DT metamodel;contribution of the paper;structure;DT-MM: platform-neutral DT metamodel;;ontology;data, architecture, ontology, UI configuration;Structure;;;;;;;;;;;;;;;;;;;;;;
An EV-Traction Inverter Data-Driven Modelling for Digital Twin Development;DT comprises three main components: a physical model, a virtual model, and a communication link between the two.;;;;;;;;;;;;;;;-;;;;;;;;;;;;;;;;;;
Case Study on Automated and Continuous Reliability Assessment of Software-Defined Manufacturing Based on Digital Twins;"""A digital twin is a software system consisting of models, data, and services to interact with a cyber-physical system for a particular purpose [3, 21, 22]. """;Comprehensive;DT;;SysML v2;;structure;SysML;;behavior;;Structure;Model to Model Transformation;;SysML v2 structure models;behavior model;state-based;;Fault Trees;behavior model;;;optimization;They serve to monitor, better understand and optimize the behavior of their respective counterparts.;Monitoring;Manufacturing;Operate;Individual Systems;As-Operated;;;TRL 1-3;;
Case Study on Automated and Continuous Reliability Assessment of Software-Defined Manufacturing Based on Digital Twins;;;;;;;behavior;;;architecture;structure or behavior;;Model to Model Transformation;;SysML v2 action sequences;structural model;data model;software;Markov chains;behavior model;;;;;;;Operate;;As-Operated;;;;;
Closed-Loop Systems Engineering (CLOSE): Integrating Experimentable Digital Twins with the Model-Driven Engineering Process; A DT isâ€”from a structural, functional, and behavioural point-of-viewâ€”a oneto-one virtual representation of a real world artefact (such as a machine, a component, or objects from the environment) and comprises models of their â€œdataâ€ (geometry, structure, etc.), functionality (data processing, behaviour, etc.), and communication interfaces [35]. EDTs combine the DT idea with modelling and simulation techniques to â€œbring DTs to lifeâ€, they become â€œexperimentableâ€ [36]. VTBs provide an interactive run-time environment for EDTs that allow for the simulation of networks of interacting EDTs [5].;;;;;;;;;;;;;;Semantic Reference Model  (physical product parts);structural model;data model;PT;;;;;re-using high-quality information across the models without coupling their life-cycle states and control.;;;Transportation and Storage;Design;Individual Systems;As-Designed;;;TRL 1-3;;Autonomous Underwater Vehicle (Torpedo)
Combining Low-Code Programming and SDL-Based Modeling with Snap! in the Industry 4.0 Context;"""a Digital Twin is a virtual reproduction of a system based on simulations, real-time and historical data that allows representing, understanding, and predicting scenarios of the past, present, and future, with verified and validated models, and synchronized at a specified frequency and fidelity with the system""";Comprehensive;DT;;SDL;;behavior;SDL;;;;??;Model to Model Transformation;;SDL model;behavior model;state-based;;Discrete Event System Specification (formal model for simulation engines);backend code;;;execute/simulate modeled behavior;;;Education;Design;Processes;As-Designed;"low-code programming; enable industrial users to test and/or build their own Digital Twin models at a suitable abstraction level and with low entry barriers ; create an open-source and web-based tool that facilitates the implementation and validation of Digital Twin prototypes";;TRL 4-6;;
Combining Low-Code Programming and SDL-Based Modeling with Snap! in the Industry 4.0 Context;;;;;;;behavior;;;behavior;logical or physical;;Model Interpretation;;SDL model;behavior model;state-based;;Snap!;behavior model;;;;;;;Design;;As-Designed;;;;;
Concept of a Modular and System Model Driven Digital Twin for Engineering Education;"It is generally defined as a concept in which operational data from a physical counterpart is processed within models to give recommendations towards a user or the system itself. Other components include its bidirectional orientation [9] as well as its 
real time capabilities [15].";;;;SysML;;data model;SysML;;behavior;structure or behavior;Structure;Model to Model Transformation;;SysML models (BDD, Sequence Diagram, Parametric Diagram, State Machines);behavior model;state-based;;Simulink Model;behavior model;;;"""MBSE seems a promising approach to grasp the increasing complexity of modern systems"", ""Hence, a model driven concept, which directly utilizes these models seems to be a promising approach e.g., by directly deriving executable code for the Twin. """;"""Digital Twins must be utilized to solve problems 
and generate benefits.""";;Education;Design;Individual Systems;As-Designed;"""System models can help to 
visualize this complexity and at the same time being utilized to 
define this behaviour in a machine-readable context, such as 
shown in [26]. """;;TRL 1-3;;education platform
Concept of a Modular and System Model Driven Digital Twin for Engineering Education;;;;;SysML;;;SysML;;;;Behavior;;;;structural model;data model;PT;;behavior model;;;;;;;;;;;;;;
Concept of a Modular and System Model Driven Digital Twin for Engineering Education;;;;;Simulink;;behaviour;Simulink;;behavior;structure or behavior;Behavior;;;;;;;;;;;;;;;;;;;;;;
Concept of a Modular and System Model Driven Digital Twin for Engineering Education;;;;;;;;;;behavior;structure or behavior;;;;;;;;;;;;;;;;;;;;;;;
CPSAML: A Language and Code Generation Framework for Digital Twin Based Monitoring of Mobile Cyber-Physical Systems;"middleware between CPS and a monitoring cockpit; ""A digital twin of a system consists of a set of models of the system, a set of digital shadows and their aggregation and abstraction collected from a system, and a set of services that allow using the data and models purposefully with respect to the original system""";Model with purpose;DS;;SysML v2;;structure;SysML;;architecture;structure or behavior;Structure;Model to Model Transformation;Multi Paradigm Approach;CPSAML;structural model;architecture model;software;SysML (partial model);structural model;;;"Integration of CPS and Information Systems; transform System Architect vision (CPSAML) into starting point for System Engineer (partial SysML model); ""better support both the system architect and the operator for the development of a mobile CPS. The system architect only keeps the focus on her interests through the introduced DSL, while the operator is supported by the generated cockpit application. In addition, the used code generation should save a lot of implementation effort for developers""";"aggregates data from CPS into a ""single system snapchot""";Data Collection?;Accommodation;Design;Individual Systems;As-Designed;"""Model engineering abstracts real world concepts in a way, such that only the relevant properties are left. A model therefore is a simplified representation of reality. This helps planning and designing complex systems, as a model should give a common sense of the underlying system.""";;TRL 4-6;github repository: https://github.com/me-big-tuwien-ac-at/cpsaml;Roomba floor cleaning robot
CPSAML: A Language and Code Generation Framework for Digital Twin Based Monitoring of Mobile Cyber-Physical Systems;;;;;CPSAML;contribution of the paper;structure;CPSAML;;architecture;structure or behavior;??;Code Generation;;SysML (complete model);structural model;architecture model;software;CPS software code (ROS Packages, DT, Monitoring Cockpit). Sprachen: Java, Typescript, Python, Docker;backend code;;;;;;;Implement;;As-Designed;;;;;
DataTime: a Framework to smoothly Integrate Past, Present and Future into Models;;;;;;;directed graph;DataTime Graph;;data;data, architecture, ontology, UI configuration;directed graph;Model Interpretation;Models at runtime;"graph representation; current road situation; data;";structural model;data model;PT;DATA Time Framework;software;;;;Digital Twin is used by the end-user to explore data in time and space.;;Transportation and Storage;Operate;Systems of Systems;As-Operated;makes it possible for domain experts to integrate past, present and future within a  traditional information system containing a priori models;;TRL 4-6;;Intelligent Public Transportation Systems of the city of Rennes (France)
Digital Behavioral Twins for Safe Connected Cars;Digital Behavioral Twin = Behavioral Model of the PT + software for connecting model with PT and performing risk analysis;;;;;;behavior;;;behavior;structure & behavior;behavior;Model Interpretation;;"discrete markov decision process for modeling driving context; behavioral AI model";behavior model;state-based;PT;"Risk Analyzer; linear ML methods";software;machine learning model;;;;;Transportation and Storage;;Systems of Systems;As-Designed;;;TRL 1-3;In the future, we may design multiple test cases, in addition to 3 cars on a highway, to evaluate our framework;Connected Vehicles Behaviour prediction
Digital Twin as Risk-Free Experimentation Aid for Techno-Socio-Economic Systems;;;;;;;;;;;;;Model Interpretation;;System DT (Metamodel proposed by authors in Figure 5);structural model;data model;PT;Learning Agent (Reinforcement Learning Algorithm);software;machine learning model;;;"A SDT serves as an â€œin silicoâ€ experimentation aid to: (i)
understand system behavior, (ii) evaluate behavioral modifications,
and (iii) explore possible better states for the system
reducing the gap between expectation and reality";;Transportation and Storage;Operate;Systems of Systems;As-Designed;;;TRL 1-3;;Parcel Sorting Terminal
Digital Twin as Risk-Free Experimentation Aid for Techno-Socio-Economic Systems;;;;;;;;;;;;;;;;;;;;;;;;;;Information and Communication;Operate;Systems of Systems;As-Designed;;;TRL 1-3;;Telecommunication Network
Digital Twin as Risk-Free Experimentation Aid for Techno-Socio-Economic Systems;;;;;;;;;;;;;;;;;;;;;;;;;;Information and Communication;Operate;Systems of Systems;As-Designed;;;TRL 1-3;;Households of an Economy in the context of COVID-19
Digital Twin of an Electrical Motor Based on Empirical Performance Model;"""The concept of Digital Twin (DT) is creating and maintaining a digital representation of the real physical entity and supporting its performance through simulation and optimization tools, which are fed with real and updated data""; ""A perfect DT will be identical to the real physical entity in terms of appearance and behavior with the extra advantage of making future predictions.""";Comprehensive;DS;;Unity 3D simulation model;describing detailed physics of twinned asset;behavior, physics;Unity 3D simulation model;;;;3D;Model Interpretation;;Unity Model;structural model;data model;;Simulation Controller;backend code;;;;3D simulation model that is updated with live data from the twinned asset;"Simulation; Reasoning";Transportation and Storage;Operate;Individual Systems;As-Designed;;;TRL 1-3;;
Digital Twin of an Electrical Motor Based on Empirical Performance Model;;;;;;;structure;;3d;behavior;logical or physical;;Model Interpretation;;Unity Model;structural model;data model;;ROS Bridge;backend code;;;;;;;Operate;;As-Designed;;;;;
Digital Twins Driving Model Based on Petri Net in Industrial Pipeline;"""the digital twin, that is, real-time data synchronization and feedback control of the entity""";;DT;;Petri Net;;behavior;Petri Net;logical;ontology;logical or physical;Behavior;Model Interpretation;;Petrinet;behavior model;state-based;;real time simulation of state;simulation code;;;;online syncronization of physical and digital system;Synchronization;Manufacturing;Operate;Processes;As-Operated;single source of truth for simulation;;TRL 1-3;;Suit tailoring
Enabling Semantic Interoperability of Asset Administration Shells through an Ontology-Based Modeling Method;#NAME?;;;specific;OWL Ontology + OML Vocabulary;;rule;OWL Ontology + OML Vocabulary;;ontology;data, architecture, ontology, UI configuration;Ontology;Model to Model Transformation;;OML Vocabulary;structure + behavior;ontology model;;UML Profile;structural model;;;;""" the Asset Administration Shell (AAS), provides a syntactic interoperability interface for all assets involved in smart factories""";Interface;Manufacturing;Design;Systems of Systems;As-Designed;formal definition that allows reasoning on/interpretation of models, interoperability;;TRL 1-3;twinning target is systems-of-systems, including modeling of individual systems;robotic cell (niryo ned for gripping + turtlebot for transportation)
Enabling Semantic Interoperability of Asset Administration Shells through an Ontology-Based Modeling Method;;;;;UML Profile;;;UML Profile;;architecture;data, architecture, ontology, UI configuration;Structure;;;;;;;;;;;;;;;;;;;;;;
Enabling Semantic Interoperability of Asset Administration Shells through an Ontology-Based Modeling Method;;;;;AAS;;;AAS;;architecture;data, architecture, ontology, UI configuration;Structure;;;;;;;;;;;;;;;;;;;;;;
Ensuring consistency in scalable-detail models for DT-based control;;;;;;;ontology;Modelica;;ontology;data, architecture, ontology, UI configuration;ontology;Model Interpretation;;Modelica model;behavior model;formal;;Modelica Simulator;software;simulation code;;Simulation;validation against measured data, reconcilation of data and optimisation.;;Accommodation;Implement;Individual Systems;As-Designed;;;TRL 1-3;Future research shall continue the specification work, discuss how models not fitting the OOM approach natively can be integrated.;electric heater system
Ensuring consistency in scalable-detail models for DT-based control;;;;;;;behavior;Modelica;;behavior;structure & behavior;behavior;Model Interpretation;;Modelica model;behavior model;;;Modelica Simulator;software;simulation code;;Simulation;validation against measured data, reconcilation of data and optimisation.;;Accommodation;Implement;Individual Systems;As-Designed;;;TRL 1-3;Future research shall continue the specification work, discuss how models not fitting the OOM approach natively can be integrated.;electric heater system
Generating customized low-code development platforms for digital twins;"""A digital twin is a set of models of the system, a set of digital shadows and their aggregation and abstraction collected from a system, and a set of services that allow using the data and models purposefully with respect to the original system""";Comprehensive;DS;;DSL Component;;structure;DSL Component;;ontology;logical or physical;??;Code Generation;;DSL component + GUI models for editor and viewer + DT components;structural model;architecture model;software;Digital Twin Implementation: Low-code editor for DT configuration;backend code;;;"generation of low-code development platform;  generation of dt architecture; visualization; data modelling; adaptive behavior of DT; recognizing error states in CPS behavior; generating a communication protocol;";"realize self-adaptation loop for CPS; ""Leveraging DTs that monitor and control the system of interest can reduce configuration time, save energy, and prevent waste.""";Self-Adaptation;Manufacturing;Implement;Individual Systems;As-Operated;"Custom Low-code development for domain experts; configurability: easily configure 1 implementation for different CPSs; easily integrate different implementations (monti arc as definition of common interfaces); ""The models we use for configuration are more abstract than programming languages and allow domain experts to create powerful full digital twin applications nonetheless.""";"account for future variability; DT as part of an ecosystem";TRL 4-6;;injection molding machine
Generating customized low-code development platforms for digital twins;;;;;MontiArc;;structure;MontiArc;;architecture;data, architecture, ontology, UI configuration;Architecture;Code Generation;;MontiArc model;structural model;architecture model;software;Digital Twin Implementation: Java code, Software Architecture Components + Glue Code;backend code;;;;;;;Implement;;As-Operated;;;;;
Generating customized low-code development platforms for digital twins;;;;;GUI Language;;structure;GUI Language;;architecture;data, architecture, ontology, UI configuration;UI Configuration;Code Generation;;GUI Model;structural model;architecture model;software;Digital Twin Implementation: DT Cockpit;backend code;;;;;;;Implement;;As-Operated;;;;;
Generating customized low-code development platforms for digital twins;;;;;UML Classdiagram;;structure;UML Classdiagram;;behavior;logical or physical;Structure;Code Generation;;CD;behavior model;state-based;;Digital Twin Implementation: Java code (Backend);backend code;;;;;;;Implement;;As-Operated;;;;;
Generating customized low-code development platforms for digital twins;;;;;Case-based reasoning (CBR9);;rule;Case-based reasoning (CBR9);;behavior;logical or physical;Behavior;Model Interpretation;;CBR;behavior model;state-based;;Reasoner Component of DT Architecture;backend code;;;;;;;Operate;;As-Operated;;;;;
Generating customized low-code development platforms for digital twins;;;;;Event-Condition-Action (ECA) language;;rule;Event-Condition-Action (ECA) language;;architecture;data, architecture, ontology, UI configuration;Behavior;Model Interpretation;;ECA;structural model;data model;software;Evaluator Component of DT Archtiecture;backend code;;;;;;;Operate;;As-Operated;;;;;
Generating customized low-code development platforms for digital twins;;;;;Communication specification language;;behavior;Communication specification language;;ui configuraiton;data, architecture, ontology, UI configuration;;Code Generation;;Communication specification;structural model;ui configuraiton model;software;Java Code for communication between CPS and DT;visualization software;;;;;;;Implement;;As-Operated;;;;;
Generating Digital Twin Cockpits for Parameter Management in the Engineering of Wind Turbines;;;;;UML Class Diagram;;structure;UML Class Diagram;;ui configuraiton;data, architecture, ontology, UI configuration;Structure;Model to Model Transformation;;UML Class Diagram;structural model;data model;software;UI Model;visualization software;;;"Derive UI from Cd; Data structure and DT cockpit backend and frontend api generation; UI generation";;;Electricity;Implement;Individual Systems;As-Designed;"reduce complexity in system design by bridging the gap between high-level requirements and high-detail implementations; ""Suitable models in the early phase are engineering models and models to describe behavior-to-be that can be simulated and analyzed""";;TRL 1-3;;cooling system of a wind turbine
Generating Digital Twin Cockpits for Parameter Management in the Engineering of Wind Turbines;;;;;UI Model;;structure;UI Model;;;;UI Configuration;Code Generation;;UML Class Diagram;structural model;ui configuraiton model;;Part of DT UI Cockpit (Python + Typescript);visualization software;;;;;;;Implement;;As-Designed;;;;;
Generating Digital Twin Cockpits for Parameter Management in the Engineering of Wind Turbines;;;;;;;structure;;;architecture;data, architecture, ontology, UI configuration;;Code Generation;;UI Model;structural model;data model;software;Part of DT UI Cockpit (Typescript);structural model;;;;;;;Implement;;As-Designed;;;;;
Generative and Model-driven SDK development for the Industrie 4.0 Digital Twin;" ""A digital twin allows us to reason about a physical and/or ideal assets in the virtual (i.e. cyber) space thus providing a necessary foundation for complex and large cyber-physical systems.""";Model of PT;;;AAS model;;structure;AAS model;;architecture;data, architecture, ontology, UI configuration;Structure;Code Generation;;AAS model;structural model;data model;software;GPL (shown for C#/Java) Stubs + Contracts;backend code;;;;reasoning in the virtual space;Reasoning;None;Implement;;As-Designed;;further GPLs, build parser for OWL ontologies;TRL 1-3;no demonstration or evaluation provided, only description of the prototypical implementation of the proposed concept;
Integration of SysML Models in a 3D Environment for Virtual Testing and Validation;"""A Digital Twin is a digital 3D - CAD replica of a living or non-living physical entity, allowing to replicate the same behavior as that of the actual
component""";;;specific;SysML;Block Definition Diagram, Internal Block Diagram, Requirements Diagram and a State Machine Diagram;structure;SysML;;behavior;structure or behavior;3D;Model to Model Transformation;;SysML Modelle;behavior model;state-based;;Unity Model;behavior model;;;"3D Visualization of SYSML model; ""comprehend and understand the complexity of the models.""";;;Electricity;Design;Systems of Systems;As-Designed;;"However, more research and development are needed to improve the 3D representation of the SysML
model. In future work, the steps presented in the aforementioned
timeline will be implemented.";TRL 1-3;;
Integration of SysML Models in a 3D Environment for Virtual Testing and Validation;;;;;Unity 3D Model;;;Unity 3D Model;3d;data;logical or physical;3D;;;;;;;;;;;;;;;;;;;;;;
Interface Development for Digital Twin of an Electric Motor Based on Empirical Performance Model;"""The concept of Digital Twin (DT) is creating and maintaining a digital representation of the real physical entity and supporting its performance through simulation and optimization tools, which are fed with real and updated data""; ""A perfect DT will be identical to the real physical entity in terms of appearance and behavior with the extra advantage of making future predictions.""";Comprehensive;DT;;Unity 3D simulation model; describing detailed physics of twinned asset;behavior, physics;Unity 3D simulation model;;;;3D;Code Generation;;Unity Model;behavior model;state-based;;Simulation Controller;backend code;;;;3D simulation model that is updated with live data from the twinned asset;Synchronization;Transportation and Storage;Operate;Individual Systems;As-Designed;;;TRL 1-3;;
Interface Development for Digital Twin of an Electric Motor Based on Empirical Performance Model;;;;;; describing detailed physics of twinned asset;behavior, physics;;3d;behavior;logical or physical;;Code Generation;;Unity Model;behavior model;state-based;;ROS Bridge;backend code;;;;;;;Operate;;As-Designed;;;;;
Knowledge driven rapid development of white box digital twins for industrial plant systems;;;;;SADL ontology;;structure;SADL ontology;;ontology;logical or physical;Ontology;Model to Model Transformation;;SADL ontology;structure + behavior;ontology model;;M&CML control systems model;structural model;;;;enable a virtual sand-box environment simulating the behaviour of a plant to perform analyses and predictions.;"Simulation; Reasoning";Electricity;Implement;Individual Systems;As-Designed;;;TRL 1-3;;power plant
Knowledge driven rapid development of white box digital twins for industrial plant systems;;;;;Control Systems Model (M&CML);;behavior;Control Systems Model (M&CML);;architecture;structure or behavior;;Model to Model Transformation;;M&CML;structural model;data model;software;fininte state machine;behavior model;;;;;;;Implement;;As-Designed;;;;;
Knowledge driven rapid development of white box digital twins for industrial plant systems;;;;;finite state machines (FSM);represented in SCXML;;finite state machines (FSM);;behavior;structure or behavior;Behavior;;;;;;;;;;;;;;;;;;;;;;
Meta-model-based shop-floor digital twin architecture, modeling and application;"""DT is considered a new paradigm of modeling and simulationtechnology, extending the use of models to all stages of the product""; the Shop-floor Digital Twin (SDT), as the digital counterpart of physical entities including the humans, machines, material, methods and environments in the existing shop-floor, mirrors the physical shop-floor behavior and performance in the virtual space. The digital counterpart is comprised of a series of semantic digital models and simulation models of the physical shop-floor and has the automatic data synchronization between the physical and virtual space. By establishing the automatic data flow between the physical shop-floor and digital counterpart, the semantic digital models and simulation 
models could be converted to digital shadow and further evolved into SDT.";;;specific;SysML BDD;;;SysML;;behavior;structure or behavior;Structure;Model Interpretation;;raw data (conforming to data model);software;runtime data;;SysML BDD;structural model;;;;"Provide Self-Adapation/Optimization based on (i) data from PT, (ii) operations offered by the PT; ""DT has a strong vitality in the whole product lifecycle and could provide strong support for the digital and intelligent transformation of manufacturing industry in the aspects of virtual model construction and cyber-physical information fusion.""";Self-Adaptation;Manufacturing;Operate;Systems of Systems;As-Operated;;;TRL 4-6;;shopfloor
Meta-model-based shop-floor digital twin architecture, modeling and application;;;;;Data Model;contribution of the paper;;Data Model;;data;data, architecture, ontology, UI configuration;Structure;;;;;;;;;formal;PT;;;;;;;;;;;;
Model-Driven Development of a Digital Twin for Injection Molding;"""A digital twin of a system consists of a set of models of the system, a set of digital shadows, and provides a set of services to use the data and models purposefully with respect to the original system.""";Comprehensive;DS;;MontiArc;;structure;MontiArc;;architecture;data, architecture, ontology, UI configuration;Architecture;Code Generation;;MontiArc;structural model;architecture model;software;Java;backend code;state-based;;"DT software architecture; domain description; specifying the behavior of the DT based on Event, condition action; Setting up an experiment for optimization; communication;";realizes self-adaptation loop based on MAPE (cf. Figure 2);Self-Adaptation;Manufacturing;Implement;Individual Systems;As-Designed;"domain experts can easily optimize their injection modling machine with domain expressions; optimization of injection molding process through repeated execution of DOE; describing the DT?s situations (events) and reactions.";;TRL 1-3;;
Model-Driven Development of a Digital Twin for Injection Molding;;;;;UML Class Diagram;;structure;UML Class Diagram;;architecture;data, architecture, ontology, UI configuration;Structure;Code Generation;;Classdiagrams;structural model;data model;software;Java;backend code;;;;;;;Operate;;As-Designed;;;;;
Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;"""A digital twin (DT) of a system consists of a set of models  of the system, a set of contextual data traces and/or their aggregation and abstraction collected from a system, and a set of services that allow using the data and models purposefully  with respects to the original system.""";Comprehensive;DS;;UML Class Diagram;;structure;UML Class Diagram;;architecture;data, architecture, ontology, UI configuration;Structure;Model to Model Transformation;;tagging model, Class Diagram, MontiArc Model;structural model;data model;software;extended MontiArc Model;structural model;formal;PT;;;;Accommodation;Design;;As-Designed;"""Reducing the effort for engineering the communication interfaces between CPS and DT implemented as information systems""";Although model-driven software engineering (MDSE) provides the necessary methods to generate these connections, these methods have not yet been applied to integrated development and connection of DTs to CPSs.;TRL 1-3;;automatic fire extinguishing system
Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;;;;;MontiArc ADL;;structure;MontiArc;;ontology;logical or physical;Architecture;Code Generation;;MontiArc model;structural model;architecture model;;GPL code for CPS;structural model;formal;PT;;;;;Implement;Individual Systems;As-Designed;;;;;
Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;;;;;tagging language;;structure;tagging language;;architecture;data, architecture, ontology, UI configuration;??;Code Generation;;UML Class Diagram;structural model;architecture model;software;digital twin information system;backend code;formal;;;;;;Implement;;As-Designed;;;;;
Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;;;;;GUI DSL;;structure;GUI DSL;;architecture;logical or physical;UI Configuration;Code Generation;;GUI Model;structural model;data model;software;Webpage;backend code;state-based;;;;;;Implement;;As-Designed;;;;;
Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;;;;;OCL;;rule;OCL;;ui configuraiton;data, architecture, ontology, UI configuration;??;Code Generation;;MontiArc ADL + Tagging applied on ports of adl model;structural model;ui configuraiton model;;new MontiArc ADL with components receiving tagged ports;visualization software;state-based;;;;;;Implement;;As-Designed;;;;;
Model-driven engineering city spaces via bidirectional model transformations;""" In the realm of smart cities, a digital twin is a virtual model of a cityÃ¯Â¿Â½?a model representation of the physical world""; a virtual model of a city";;;specific;City GML 3D city model;;structure;City GML 3D city model;3d;data;logical or physical;3D;Model to Model Transformation;;CityGML model;structural model;data model;software;cyber-physical spaces (3D topology) model;structural model;data model;;;cyber-physical spaces model upon which formal reasoning can be performed;Reasoning;Construction;Plan;Systems of Systems;As-Designed;;"investigate pluggable custom application policies and support arbitrary CityGML features. generalization of synchronization to a many-to-one model; being able to support multi-model sources might enable support of a wider range of applications dealing with wide area services.";;;smart city
Model-Driven Engineering in Digital Thread Platforms: A Practical Use Case and Future Challenges;;;;;;;;;;;;;Code Generation;;Process Model;behavior model;state-based;PT;Web app;software;backend code;;;;;;;;;;;;;
Model-Driven Engineering in Digital Thread Platforms: A Practical Use Case and Future Challenges;;;;;;;;;;;;;;;UI Model;ui configuration;ui configuration;software;Web app;software;backend code;;;;;;;;;;;;;
Model-Driven Engineering in Digital Thread Platforms: A Practical Use Case and Future Challenges;;;;;;;;;;;;;;;Data model;structural model;structure + behavior;PT;Web app;software;backend code;;;;;;;;;;;;;
On the Engineering of IoT-Intensive Digital Twin Software Systems;;;;;undefined;"only ""structural and behavioral models"" mentioned";structure;undefined;;;;Structure;Model Interpretation;;structural model of the PT;behavior model;not defined;PT;Model Synchronizer + Model Manager component;backend code;data model;;;"""Coping with the dynamic and uncertain characteristics of the physical world (i.e., faced by the real-twin)""";"Simulation; Reasoning";None;Design;Individual Systems;As-Designed;;;TRL 1-3;very high-level concept, no application to a particular example/domain, no example models given;
On the Engineering of IoT-Intensive Digital Twin Software Systems;;;;;;;behavior;;;;;;Model Interpretation;;behavioral model of the PT;structural model;data model;PT;Model Synchronizer + Model Manager component;backend code;;;;;;;Design;;As-Designed;;;;;
Proof of Concept for a Roundtrip Engineering IS for the New Enterprise in the Industry 4.0 Era;"""The concept of Digital Twin is reserved for denoting a digital representation which is fully integrated with its Physical Twin (i.e. data flow between the physical object and the digital object in both directions) [4]. Likewise, we understand the Digital Twin as a software component that is i) model and data driven (it gets inputs from both cyber and physical objects; i.e., it can be a model that gets input from another model or from a physical object) and ii) can control physical devices (can operate on them). """;Comprehensive;DT;;BPMN;;behavior;BPMN;;behavior;structure or behavior;Behavior;Code Generation;;BPMN;behavior model;process;;Python Drone control code;backend code;data model;;;;;Transportation and Storage;Implement;Individual Systems;As-Designed;;;TRL 1-3;;Drone fleet
Reliable Counterparts: Efficiently Testing Causal Relationships in Digital Twins;"""Digital twins rely on models to accurately represent their physical counterpart, accepting real-time data from the coupled physical system and relaying feedback to provide more informed functionality""; ""Digital twins are an emerging technology. They use data-driven and physics-based simulation to model, communicate with and provide additional functionality to their coupled physical system""";;;;;;;;;;;;Model Interpretation;;Causal Directed Acyclic Graphs (DAG);behavior model;state-based;;Inference Engine;backend code;data model;;perform causal inference based on DAG and runtime data;;;Manufacturing;Test;Individual Systems;As-Designed;"DTs use ""models to accurately represent their physical counterpart""";;TRL 1-3;;Robotic arm
Semantic Interoperability of Digital Twins: Ontology-based Capability Checking in AAS Modeling Framework;;;;;OWL Ontology;;rule;OWL Ontology;;data;structure or behavior;Ontology;Model to Model Transformation;;OML;structural model;data model;;UML Stereotypes;visualization software;database;;;AAS model, enriched with semantic annotations based on OWL ontology;Specific;Manufacturing;Design;;As-Designed;;;TRL 1-3;;robotic cell (niryo ned for gripping + turtlebot for transportation)
Semantic Interoperability of Digital Twins: Ontology-based Capability Checking in AAS Modeling Framework;;;;;OML Vocabulary;;structure;OML Vocabulary;;data;data, architecture, ontology, UI configuration;Ontology;Model to Model Transformation;;AAS;structure + behavior;ontology model;;OWL Individuals (MaRCO);backend code;ontology model;;;;;;Design;;As-Designed;;;;;
Semantic Interoperability of Digital Twins: Ontology-based Capability Checking in AAS Modeling Framework;;;;;AAS;;structure;AAS;;ontology;logical or physical;Structure;Model Interpretation;;OWL Ontology + OWL Individuals;structural model;data model;;capability matchmaker;structural model;ontology model;;;;;;Design;;As-Designed;;;;;
Semantic Interoperability of Digital Twins: Ontology-based Capability Checking in AAS Modeling Framework;;;;;OWL Individuals;instantiated OWL ontology;structure;OWL Individuals;;ontology;logical or physical;Ontology;Model Interpretation;;AAS Model;structure + behavior;ontology model;;user interface created by the authors (cf. Section 4.C);structural model;;;;;;;Design;;As-Designed;;;;;
Supporting Digital Twins for the Retrofit in Aviation by a Model-Driven Data Handling;"""the digital twin is described more generally as a concept, which describes the linkage between (aspects of) a physical product or object and its virtual representation""";;;;SysML;;data model;SysML;;behavior;structure or behavior;Structure;Model to Model Transformation;;SysML (csv representation);structural model;data model;;SysML (Graph Database entries);database;data;;"""model-driven approach to support data handling in aviation""";"""digital twins of specific aircraft focusing on the information needed for the retrofit""";;Transportation and Storage;Maintain;Individual Systems;As-Operated;"single-source-of-truth aspect of system models; creation of these models can be performed by engineers with no expertise in programming; "" digitized single source of truth"", ""This makes the previously mostly analog information digitally available during the retrofit.""";"""implementation of graph algorithms to source information from the complete set of information"" (similarities between related aircraft could be automatically identified)";TRL 1-3;;Aircraft cabine refitting
Supporting the Implementation of Digital Twins for IoT-Enhanced BPs;"""This work considers two main features of a digital twin system: (1) the representation and storage of the characteristics of real-world entities in a structured form, and (2) the runtime synchronisation between digital and real-world entities.""; ""A Digital Twin (DT) is a virtual representation of real-world entities (physical objects and systems, or immaterial things that exist over a significant time span) and processes (events or activities that occur in time), synchronised at a specified frequency and fidelity
[1]. It connects with the physical part allowing data transfer from the physical to the digital part and vice versa, in such a way that it can represent, simulate, or predict changes in the physical system.""";;;;BPMN;;behavior;BPMN;;behavior;structure or behavior;Behavior;Model to Model Transformation;;BPMN Model;behavior model;process;;DTDL Model;structural model;data;;"we propose a Model-Driven approach to support the creation
of the software artefacts required to represent, store and synchronise at runtime the
characteristics of real-world entities in IoT-enhanced BPs DTs.";"""This work considers two main features of a digital twin system: (1) the representation and storage of the characteristics of real-world entities in a structured form, and (2) the runtime synchronisation between digital and real-world entities.""";;Accommodation;Design;Systems of Systems;As-Designed;;;TRL 1-3;;CO2 Measurement
Supporting the Implementation of Digital Twins for IoT-Enhanced BPs;;;;;DTDL;;data model;DTDL;;architecture;data, architecture, ontology, UI configuration;Structure;Code Generation;;BPMN Model;behavior model;process;;java template code for microservices;backend code;;;;;;;Implement;;As-Designed;;;;;
The Framework for Designing Autonomous Cyber-Physical Multi-agent Systems for Adaptive Resource Management;A â€œDigital Twin-based Cyber-Physical Production System (DT-CPPS)â€ is introduced as a configuring mechanism, operating mechanism and real-time data-driven operation control.;;;;;;ontology;;;ontology;data, architecture, ontology, UI configuration;ontology;Model Interpretation;;Knowledge Base Model;structure + behavior;ontology model;PT;Simulator;software;simulation code;;;management of resources as well as what-if simulations ;;;Design;;As-Designed;;;;;
The Framework for Designing Autonomous Cyber-Physical Multi-agent Systems for Adaptive Resource Management;;;;;;;;;;;;;Model Interpretation;;Knowledge Base Model;structure + behavior;ontology model;PT;Scheduling Engine;software;backend code;;;management of resources as well as what-if simulations ;;;Design;;As-Designed;;;;;
The Framework for Designing Autonomous Cyber-Physical Multi-agent Systems for Adaptive Resource Management;;;;;;;;;;;;;Model to Model Transformation;;Knowledge Base Model;structure + behavior;ontology model;PT;Knowledge Base Model (updated with runtime data);structure + behavior;ontology model;PT;;management of resources as well as what-if simulations ;;;Design;;As-Designed;;;;;
The OMiLAB Digital Innovation environment: Agile conceptual models to bridge business value with Digital and Physical Twins for Product-Service Systems development;Digital and Physical Twins, with a lifecycle and interfacing needed to transfer data between them in the context of Product Lifecycle Management (Grieves, 2019);;;;;;structure;BPMN, ER, UML;;behavior;structure & behavior;structure;Model Interpretation;;BPMN;behavior model;state-based;PT;;PT;;;;"It can capture conceptualizations of digital servitization and can bridge them with proof-of-concept engineering in order to simulate and evaluate the smart services"" of an innovative PSS""";;Education;Design;Individual Systems;As-Designed;;;TRL 4-6;;
Towards a Digital Twin for Cyber-Physical Production Systems: A Multi-Paradigm Modeling Approach in the Postal Industry;"""However, the characteristics commonly associated to the DT are that it must be able to 1) behave like the real system during its entire life cycle, 2) allow to predict possible failures and 3) take autonomous decisions accordingly. Moreover, it appears to be fundamental to have a seamless connection and synchronization between the DT and the system.""";;DT;;BPMN;;behavior;BPMN;;behavior;structure or behavior;Behavior;Model to Model Transformation;;BPMN;behavior model;process;;Activity Diagram;behavior model;data model;;"Multi-paradigm modeling: convert BPMN Model into an executable AD; Multi-paradigm modeling: extract structural information from AD";"""emulate the sorting CPPS via Multi-Agent System""";Specific;Administrative;Design;Processes;As-Designed;;;TRL 1-3;;sorting robot of a postal center
Towards a Digital Twin for Cyber-Physical Production Systems: A Multi-Paradigm Modeling Approach in the Postal Industry;;;;;UML Activity Diagram;;behavior;UML Activity Diagram;;behavior;structure or behavior;Behavior;Model to Model Transformation;;Activity Diagram;behavior model;state-based;PT;Class Diagram;structural model;ui configuration model;;;;;;Design;;As-Designed;;;;;
Towards a Digital Twin for Cyber-Physical Production Systems: A Multi-Paradigm Modeling Approach in the Postal Industry;;;;;UML Class Diagram;;;UML Class Diagram;;architecture;data, architecture, ontology, UI configuration;Structure;;;;;;;;;;;;;;;;;;;;;;
Towards a Model-Driven Architecture for Interactive Digital Twin Cockpits;"""A digital twin of a system consists of a set of models of the system, a set of digital shadows and their aggregation and abstraction collected from a system, and a set of services that allow using the data and models purposefully with respect to the original system. """;Comprehensive;DS;;MontiArc;;structure;MontiArc;;architecture;data, architecture, ontology, UI configuration;Architecture;Code Generation;;CD;structural model;architecture model;software;Java Code;backend code;;;;;;Manufacturing;Implement;Individual Systems;As-Designed;no manual writing of code needed, because code generation can be applied;;TRL 1-3;;
Towards a Model-Driven Architecture for Interactive Digital Twin Cockpits;;;;;MontiGem GUI Model;;structure;MontiGem GUI Model;;architecture;data, architecture, ontology, UI configuration;UI Configuration;Code Generation;;GUI Model;structural model;data model;software;DT cockpits;backend code;;;;;;;Implement;;As-Designed;;;;;
Towards a Model-Driven Architecture for Interactive Digital Twin Cockpits;;;;;Class Diagram;;structure;UML Class Diagram;;ui configuraiton;data, architecture, ontology, UI configuration;Structure;Code Generation;;MontiArc model;structural model;ui configuraiton model;;system architecture;visualization software;;;;;;;Implement;;As-Designed;;;;;
Towards Reactive Planning with Digital Twins and Model-Driven Optimization;"""DTs enable a bi-directional data flow between a physical system and its virtual representation, requiring different software components to enable this communication""";;DT;;EMF Meta-Models; + according Models;structure;EMF Meta-Models;;ontology;data, architecture, ontology, UI configuration;Structure;Model Interpretation;;Henshin model;behavior model;state-based;;Digital Twin;backend code;;;;provide an interface to both simulation and PT;Interface;None;Operate;Individual Systems;"As-Designed;As-Operated";;;TRL 1-3;application to generic optimization problem - no specific domain;
Twin Process Model Driven Machining Quality Optimization for Complex Parts;"""Digital twin is an efficient method to realize simulation, monitoring and control of multi scale and physical quantity.""";;DS;;Twin Process Model;Twin Process Model = model containing structural and behavioral (process) information, stored as XML, but no language/metamodel described;structure;Twin Process Model;;ontology;structure or behavior;Behavior;Code Generation;;Twin Process Model;behavior model;process;;Numeric Control (NC)Code;simulation code;;;;"efficiently realizes ""simulation, monitoring and control of multi scale and physical quantity""";"Simulation; Reasoning";Manufacturing;Operate;Individual Systems;As-Designed;;;TRL 1-3;;
TwinOps - DevOps Meets Model-Based Engineering and Digital Twins for the Engineering of CPS;"""Digital Twins. consist of three components, a physical product, a virtual representation of that product, and the bi-directional data connections that feed data from the physical to the virtual representation, and information and processes from the virtual representation to the physical"" ";;;;SysML;;;SysML;;behavior;structure or behavior;Structure;Model to Model Transformation;;SysML;behavior model;state-based;;AADL;structural model;;;"""critical impacts of automated code generation on the engineering of embedded software in both increased confidence in produced software and fast delivery. """;support system continuous improvement and maintenance through the analysis of runtime logs and their comparison to system optimal performance.;;Accommodation;Design;Systems of Systems;As-Designed;"enable simulation; ""Models can address some of these concerns: systems engineering models to capture system requirements, its interface, and theirmdecomposition into subsystems; simulation models to evaluate the system general behavior; engineering models to move forward towards the realization of the system""";;TRL 1-3;;hypothetical monitoring system for a building
TwinOps - DevOps Meets Model-Based Engineering and Digital Twins for the Engineering of CPS;;;;;AADL;;;AADL;;;;Architecture;Code Generation;;AADL;structural model;architecture model;software;Azure code that is used to execute the system and perform monitoring (I think that both aspects are the same);backend code;;;;;;;Implement;;As-Designed;;;;;
TwinOps - DevOps Meets Model-Based Engineering and Digital Twins for the Engineering of CPS;;;;;;;;;;ontology;data, architecture, ontology, UI configuration;;Code Generation;;AADL;structural model;architecture model;software;LNT model (used for model checking);backend code;;;;;;;Implement;;As-Designed;;;;;
TwinOps - DevOps Meets Model-Based Engineering and Digital Twins for the Engineering of CPS;;;;;;;;;;;;;Code Generation;;AADL;structural model;architecture model;software;FMI device mock-ups;behavior model;;;;;;;Implement;;As-Designed;;;;;
Understanding and Improving Model-Driven IoT Systems through Accompanying Digital Twins;"""A digital twin (DT) of a system consists of a set of models of the system, a set of contextual data traces and/or their aggregation and abstraction collected from a system, and a set of services that allow using the data and models purposefully with respects to the original system.""; ""Digital twins (DTs) are digital representations of cyber-physical systems. They monitor systems to offer services to analyze, control, and optimize the system. Alas, there is no commonly agreed on definition of DTs""";Comprehensive;DS;;MontiThings;;structure;MontiThings;;;;Architecture;Model to Model Transformation;;MontiThings model or real system;structural model;architecture model;software;MontiThings model or reproduced system;backend code;;;"""generates a reproduction model from the original models and the system traces. Developers can use the reproduction model to retrospectively analyze the system and refine the architecture models for the next iteration""; ""One of the advantages of our model-driven approach is that there is no manual work involved when recording or replaying system traces.""; Automatically generate controller code";" collect  required data; ""The DT collects data from the generated IoT code, reproduces the data traces, adapts the input models accordingly, and re-generates the new software based on the adapted models""";Collect Data?;Accommodation;Operate;Individual Systems;As-Operated;;;TRL 1-3;;"smart lawn watering system; heating, ventilation, and air conditioning of a
smart home"
Understanding and Improving Model-Driven IoT Systems through Accompanying Digital Twins;;;;;;;structure;;;architecture;data, architecture, ontology, UI configuration;;Code Generation;;MontiThings;structural model;architecture model;software;IoT controller code in C++;architecture model;;;;;;;Implement;;As-Operated;;;;;
Using Trace Alignments for Measuring the Similarity between a Physical and Its Digital Twin;;;;;;;structure;UML CD;;architecture;data, architecture, ontology, UI configuration;structure;Model Interpretation;;"OD (Snapshot); CD (snapshot metamodel)";structural model;data model;PT, Software;Type Checking Algorithm;software;backend code;;Validate OD against CD;;;Transportation and Storage;Operate;Individual Systems;As-Operated;;;TRL 1-3;;Lego Mindstorms Car
Using Trace Alignments for Measuring the Similarity between a Physical and Its Digital Twin;;;;;;;structure;UML OD;;architecture;data, architecture, ontology, UI configuration;structure;Model Interpretation;;OD (Snapshot of PT and DT);structural model;data model;PT, Software;Trace Alignment Algorithm;algorithm;backend code;;measure fidelity of DT compared to PT;;;Manufacturing;Operate;Individual Systems;As-Operated;;;TRL 1-3;;Robotic arm
Using UML and OCL Models to Realize High-Level Digital Twins;"""A Digital Twin (DT) is a comprehensive digital representation of an actual system, service or product (the Physical Twin, PT), synchronized at a specified frequency and fidelity""";Comprehensive;DT;;UML CD + OCL constraints;;structure;UML CD + OCL constraints;;architecture;data, architecture, ontology, UI configuration;Structure;Model Interpretation;;UML class diagram;structural model;data model;software;uml cd adapter that interprets CD and adapts a data lake accordingly (data lake stores data from the PT);backend code;;;adapt a data lake according to CD;"DT = UML class diagram; configures data lake that stores data from PT, which should be used by different services";Collect Data?;Transportation and Storage;Operate;;As-Designed;;;TRL 1-3;;lego mindstorms car
Workshop Management and Control System Based on Digital Twin; Digital twin is based on physical entities, virtual entities, service, twin data and the data interaction between them. It realizes the interconnection and intercommunication of physical workshops and information workshops, and builds physical planning and design, motion monitoring and other capabilities through data and information models;;;;;;;;;;;;Model Interpretation;;dt physical model;data model;structure model;PT;DT Simulation;software;simulation code;;simulation;Debugging of PLC;;Manufacturing;Implement;Individual Systems;As-Designed;;;TRL 4-6;;
Workshop Management and Control System Based on Digital Twin; Digital twin is based on physical entities, virtual entities, service, twin data and the data interaction between them. It realizes the interconnection and intercommunication of physical workshops and information workshops, and builds physical planning and design, motion monitoring and other capabilities through data and information models;;;;;;;;;;;;Model Interpretation;;geometric model;data model;structure model;;DT Simulation;software;simulation code;;simulation;Debugging of PLC;;Manufacturing;Implement;Individual Systems;As-Designed;;;TRL 4-6;;
Workshop Management and Control System Based on Digital Twin; Digital twin is based on physical entities, virtual entities, service, twin data and the data interaction between them. It realizes the interconnection and intercommunication of physical workshops and information workshops, and builds physical planning and design, motion monitoring and other capabilities through data and information models;;;;;;;;;;;;Model Interpretation;;behavior model;behavior model;;PT;DT Simulation;software;simulation code;;simulation;Debugging of PLC;;Manufacturing;Implement;Individual Systems;As-Designed;;;TRL 4-6;;
;;;;;;;;;;;;;;;;data model;behavior model;PT;;software;backend code;;;;;;;;;;;;;
