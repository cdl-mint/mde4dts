Title;model processing technique;source;source category;source sub-category;source model target category;target;target category;target category 2;target sub-category;target model target category;use case domain;system lifecycle phase;twinning target;twin lifecycle phase;Technological Readiness Level;Use Case
<<<<<<< HEAD;;;;;;;;;;;;;;;;
A digital twin-driven hybrid approach for the prediction of performance degradation in transmission unit of CNC machine tool;Model Interpretation;hybrid model (physical, geometric, behavior, rule);behavior + structure model;data model;PT;performance degredation measurement algorithm;;;other software code;;Manufacturing;Design;Individual Systems;As-Operated;TRL 4-6;Transmission of CNC Machine
A digital twin-driven hybrid approach for the prediction of performance degradation in transmission unit of CNC machine tool;Model Interpretation;runtime data;runtime data;;;physical model;structural model;;;PT;Manufacturing;Design;Individual Systems;As-Operated;TRL 4-6;Transmission of CNC Machine
A framework for Model-Driven Engineering of resilient software-controlled systems;Model to Model Transformation;SysML: BDD;structural model;data model;PT;Knowledge Base of software digital twins (Metamodel proposed in Figure 5 of the paper) -> in fact, this is the class diagram of their knowledge base;;;other software code;;Transportation and Storage;Design;Individual Systems;As-Designed;TRL 1-3;limited traffic zone access control
A framework for Model-Driven Engineering of resilient software-controlled systems;Model to Model Transformation;Fault Trees;behavior model;state-based behavior;;FaultTreeAnalyzer (metamodel proposed in Figure 8);;;other software code;;;Design;;As-Designed;;
A Methodology for Digital Twin Modeling and Deployment for Industry 4.0;Code Generation;AutomationML models;structural model;data model;;DT runtime memory;;;runtime data;;;Operate;Systems of Systems;As-Operated;;
A Methodology for Digital Twin Modeling and Deployment for Industry 4.0;Model Interpretation;AutomationML models;structural model;ui configuration model;software;Restful API, Html pages;visualization software;;;PT;Manufacturing;Design;Individual Systems;As-Designed;TRL 1-3;refinery automationsystem with four valves 
A Model-Driven Approach for Situational Intelligence & Operational Awareness;Model Interpretation;electrical system model;structural model;data model;PT;;;;;;Electricity;Operate;Individual Systems;As-Designed;TRL 1-3;
A Novel Methodology to Construct Digital Twin Models for Spacecraft Operations Using Fault and Behaviour Trees;Model to Model Transformation;;;;;structural model;structural model;;;;;;;;;
A Novel Methodology to Construct Digital Twin Models for Spacecraft Operations Using Fault and Behaviour Trees;Model Interpretation;Fault Trees;behavior model;state-based behavior;PT;Operations-Dedicated Models (ODMs);structural model;;;Software;Professional, Scientific;Operate;Individual Systems;As-Operated;TRL 1-3;ground station of a spacecraft
A Novel Methodology to Construct Digital Twin Models for Spacecraft Operations Using Fault and Behaviour Trees;;DT model (=ODM model);structural model;data model;software;UI-based monitoring tools;visualization software;;;;;Operate;;As-Operated;;
"A pattern catalog for augmenting Digital Twin models with behavior; [Ein Musterkatalog zur Erweiterung von digitalen Zwillingsmodellen um Verhaltenssichten]";Model to Model Transformation;behavior model;behavior model;state-based behavior;PT;structure + behavior model (DTML);behavior + structure model;;state-based behavior;PT;Manufacturing;Design;Individual Systems;As-Designed;TRL 1-3;3D Printer
"A pattern catalog for augmenting Digital Twin models with behavior; [Ein Musterkatalog zur Erweiterung von digitalen Zwillingsmodellen um Verhaltenssichten]";Model to Model Transformation;structure model;structural model;data model;PT;structure + behavior model (DTML);behavior + structure model;;;PT;Manufacturing;Design;Individual Systems;As-Designed;TRL 1-3;3D Printer
AML4DT: A Model-Driven Framework for Developing and Maintaining Digital Twins with AutomationML;Model to Model Transformation;AML;structural model;data model;PT;DT-MM;structural model;;data model;PT;Administrative;Implement;Individual Systems;As-Designed;TRL 1-3;Air Quality Opitmization System
AML4DT: A Model-Driven Framework for Developing and Maintaining Digital Twins with AutomationML;Code Generation;DT-MM;structural model;data model;PT;Json Files;structural model;;;;;Maintain;;As-Designed;;
AML4DT: A Model-Driven Framework for Developing and Maintaining Digital Twins with AutomationML;;;;;;;;;;;;;;;;
Case Study on Automated and Continuous Reliability Assessment of Software-Defined Manufacturing Based on Digital Twins;Model to Model Transformation;SysML v2 action sequences;behavior model;state-based behavior;;Markov chains;behavior model;;state-based behavior;PT;;Operate;;As-Operated;;
Case Study on Automated and Continuous Reliability Assessment of Software-Defined Manufacturing Based on Digital Twins;Model to Model Transformation;SysML v2 structure models;structural model;;;Fault Trees;behavior model;;state-based behavior;PT;Manufacturing;Operate;Individual Systems;As-Operated;TRL 1-3;
Closed-Loop Systems Engineering (CLOSE): Integrating Experimentable Digital Twins with the Model-Driven Engineering Process;;Semantic Reference Model  (physical product parts);structural model;data model;PT;;;;;;Transportation and Storage;Design;Individual Systems;As-Designed;TRL 1-3;Autonomous Underwater Vehicle (Torpedo)
Combining Low-Code Programming and SDL-Based Modeling with Snap! in the Industry 4.0 Context;Model to Model Transformation;SDL model;behavior model;state-based behavior;PT;Discrete Event System Specification (formal model for simulation engines);behavior model;;continuous behavior;;Education;Design;Processes;As-Designed;TRL 4-6;
Combining Low-Code Programming and SDL-Based Modeling with Snap! in the Industry 4.0 Context;Model Interpretation;SDL model;behavior model;state-based behavior;;Snap!;behavior model;;;PT;;Design;;As-Designed;;
Concept of a Modular and System Model Driven Digital Twin for Engineering Education;Model to Model Transformation;SysML models (BDD, Sequence Diagram, Parametric Diagram, State Machines);behavior + structure model;;;Simulink Model;behavior model;;continuous behavior;PT;Education;Design;Individual Systems;As-Designed;TRL 1-3;education platform
Concept of a Modular and System Model Driven Digital Twin for Engineering Education;;;structural model;data model;PT;;;;;;;;;;;
Concept of a Modular and System Model Driven Digital Twin for Engineering Education;;;;;;;;;;;;;;;;
Concept of a Modular and System Model Driven Digital Twin for Engineering Education;;;;;;;;;;;;;;;;
CPSAML: A Language and Code Generation Framework for Digital Twin Based Monitoring of Mobile Cyber-Physical Systems;Model to Model Transformation;CPSAML;structural model;architecture model;software;SysML (partial model);structural model;;architecture model;;Accommodation;Design;Individual Systems;As-Designed;TRL 4-6;Roomba floor cleaning robot
CPSAML: A Language and Code Generation Framework for Digital Twin Based Monitoring of Mobile Cyber-Physical Systems;Code Generation;SysML (complete model);structural model;architecture model;software;CPS software code (ROS Packages, DT, Monitoring Cockpit). Sprachen: Java, Typescript, Python, Docker;visualization software;other software code;;;;Implement;;As-Designed;;
DataTime: a Framework to smoothly Integrate Past, Present and Future into Models;Model Interpretation;"graph representation; current road situation; data;";structural model;data model;PT;DATA Time Framework;;;other software code;;Transportation and Storage;Operate;Systems of Systems;As-Operated;TRL 4-6;Intelligent Public Transportation Systems of the city of Rennes (France)
Digital Behavioral Twins for Safe Connected Cars;Model Interpretation;"discrete markov decision process for modeling driving context; behavioral AI model";behavior model;state-based behavior;PT;"Risk Analyzer; linear ML methods";;;machine learning model;;Transportation and Storage;;Systems of Systems;As-Designed;TRL 1-3;Connected Vehicles Behaviour prediction
Digital Twin as Risk-Free Experimentation Aid for Techno-Socio-Economic Systems;Model Interpretation;System DT (Metamodel proposed by authors in Figure 5);structural model;data model;PT;Learning Agent (Reinforcement Learning Algorithm);;;machine learning model;;Transportation and Storage;Operate;Systems of Systems;As-Designed;TRL 1-3;Parcel Sorting Terminal
Digital Twin as Risk-Free Experimentation Aid for Techno-Socio-Economic Systems;;;;;;;;;;;Information and Communication;Operate;Systems of Systems;As-Designed;TRL 1-3;Telecommunication Network
Digital Twin as Risk-Free Experimentation Aid for Techno-Socio-Economic Systems;;;;;;;;;;;Information and Communication;Operate;Systems of Systems;As-Designed;TRL 1-3;Households of an Economy in the context of COVID-19
Digital Twin of an Electrical Motor Based on Empirical Performance Model;Model Interpretation;Unity Model;behavior model;continuous behavior;PT;ROS Bridge;;;other software code;;;Operate;;As-Designed;;
Digital Twin of an Electrical Motor Based on Empirical Performance Model;Model Interpretation;Unity Model;behavior model;continuous behavior;PT;Simulation Controller;;;simulation code;;Transportation and Storage;Operate;Individual Systems;As-Designed;TRL 1-3;
Digital Twins Driving Model Based on Petri Net in Industrial Pipeline;Model Interpretation;Petrinet;behavior model;state-based behavior;;real time simulation of state;;;simulation code;;Manufacturing;Operate;Processes;As-Operated;TRL 1-3;Suit tailoring
Enabling Semantic Interoperability of Asset Administration Shells through an Ontology-Based Modeling Method;Model to Model Transformation;OML Vocabulary;behavior + structure model;ontology;PT;UML Profile;structural model;;data model;;Manufacturing;Design;Systems of Systems;As-Designed;TRL 1-3;robotic cell (niryo ned for gripping + turtlebot for transportation)
Enabling Semantic Interoperability of Asset Administration Shells through an Ontology-Based Modeling Method;;;;;;;;;;;;;;;;
Enabling Semantic Interoperability of Asset Administration Shells through an Ontology-Based Modeling Method;;;;;;;;;;;;;;;;
Ensuring consistency in scalable-detail models for DT-based control;Model Interpretation;Modelica model;behavior model;continuous behavior;PT;Modelica Simulator;;;simulation code;;Accommodation;Implement;Individual Systems;As-Designed;TRL 1-3;electric heater system
Ensuring consistency in scalable-detail models for DT-based control;Model Interpretation;Modelica model;behavior model;continuous behavior;PT;Modelica Simulator;;;simulation code;;Accommodation;Implement;Individual Systems;As-Designed;TRL 1-3;electric heater system
Generating customized low-code development platforms for digital twins;Code Generation;MontiArc model;structural model;architecture model;software;Digital Twin Implementation: Java code, Software Architecture Components + Glue Code;;;other software code;;;Implement;;As-Operated;;
Generating customized low-code development platforms for digital twins;Code Generation;ECA;behavior model;state-based behavior;software;Evaluator Component of DT Archtiecture;;;other software code;;;Operate;;As-Operated;;
Generating customized low-code development platforms for digital twins;Code Generation;CD;structural model;data model;PT;Digital Twin Implementation: Java code (Backend);;;other software code;;;Implement;;As-Operated;;
Generating customized low-code development platforms for digital twins;Code Generation;CBR;behavior model;state-based behavior;PT;Reasoner Component of DT Architecture;;;other software code;;;Operate;;As-Operated;;
Generating customized low-code development platforms for digital twins;Model Interpretation;Communication specification;structural model;ui configuration model;software;Java Code for communication between CPS and DT;;;other software code;;;Implement;;As-Operated;;
Generating customized low-code development platforms for digital twins;Model Interpretation;DSL component + GUI models for editor and viewer + DT components;structural model;architecture model;software;Digital Twin Implementation: Low-code editor for DT configuration;visualization software;;;;Manufacturing;Implement;Individual Systems;As-Operated;TRL 4-6;injection molding machine
Generating customized low-code development platforms for digital twins;Code Generation;GUI Model;structural model;ui configuration model;software;Digital Twin Implementation: DT Cockpit;visualization software;;;;;Implement;;As-Operated;;
Generating Digital Twin Cockpits for Parameter Management in the Engineering of Wind Turbines;Model to Model Transformation;UML Class Diagram;structural model;data model;software;UI Model;structural model;;ui configuration model;;Electricity;Implement;Individual Systems;As-Designed;TRL 1-3;cooling system of a wind turbine
Generating Digital Twin Cockpits for Parameter Management in the Engineering of Wind Turbines;Code Generation;UI Model;structural model;ui configuration model;software;Part of DT UI Cockpit (Typescript);visualization software;;;;;Implement;;As-Designed;;
Generating Digital Twin Cockpits for Parameter Management in the Engineering of Wind Turbines;Code Generation;UML Class Diagram;structural model;ui configuration model;software;Part of DT UI Cockpit (Python + Typescript);visualization software;;;;;Implement;;As-Designed;;
Generative and Model-driven SDK development for the Industrie 4.0 Digital Twin;Code Generation;AAS model;structural model;data model;software;GPL (shown for C#/Java) Stubs + Contracts;;;other software code;;None;Implement;;As-Designed;TRL 1-3;
Integration of SysML Models in a 3D Environment for Virtual Testing and Validation;Model to Model Transformation;SysML models;;;;Unity Model;behavior model;;continuous behavior;PT;Electricity;Design;Systems of Systems;As-Designed;TRL 1-3;
Integration of SysML Models in a 3D Environment for Virtual Testing and Validation;;;;;;;;;;;;;;;;
Interface Development for Digital Twin of an Electric Motor Based on Empirical Performance Model;Code Generation;Unity Model;behavior model;continuous behavior;PT;Simulation Controller;;;simulation code;;Transportation and Storage;Operate;Individual Systems;As-Designed;TRL 1-3;
Interface Development for Digital Twin of an Electric Motor Based on Empirical Performance Model;Code Generation;Unity Model;behavior model;continuous behavior;PT;ROS Bridge;;;simulation code;;;Operate;;As-Designed;;
Knowledge driven rapid development of white box digital twins for industrial plant systems;Model to Model Transformation;M&CML;structural model;data model;;fininte state machine;behavior model;;state-based behavior;PT;;Implement;;As-Designed;;
Knowledge driven rapid development of white box digital twins for industrial plant systems;Model to Model Transformation;SADL ontology;behavior + structure model;ontology;PT;M&CML control systems model;structural model;;;;Electricity;Implement;Individual Systems;As-Designed;TRL 1-3;power plant
Knowledge driven rapid development of white box digital twins for industrial plant systems;;;;;;;;;;;;;;;;
Meta-model-based shop-floor digital twin architecture, modeling and application;Model Interpretation;raw data (conforming to data model);runtime data;;;SysML BDD;structural model;;data model;;Manufacturing;Operate;Systems of Systems;As-Operated;TRL 4-6;shopfloor
Meta-model-based shop-floor digital twin architecture, modeling and application;;;;;;;;;;;;;;;;
Model-Driven Development of a Digital Twin for Injection Molding;Code Generation;MontiArc;structural model;architecture model;software;Java;;;other software code;;Manufacturing;Implement;Individual Systems;As-Designed;TRL 1-3;
Model-Driven Development of a Digital Twin for Injection Molding;Code Generation;Classdiagrams;structural model;data model;software;Java;;;other software code;;;Operate;;As-Designed;;
Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;Model to Model Transformation;MontiArc model;structural model;architecture model;software;GPL code for CPS;;;other software code;PT;;Implement;Individual Systems;As-Designed;;
Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;Code Generation;MontiArc ADL + Tagging applied on ports of adl model;structural model;ui configuration model;software;new MontiArc ADL with components receiving tagged ports;;;other software code;;;Implement;;As-Designed;;
Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;Code Generation;tagging model, Class Diagram, MontiArc Model;structural model;data model;software;extended MontiArc Model;structural model;;architecture model;PT;Accommodation;Design;;As-Designed;TRL 1-3;automatic fire extinguishing system
Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;Code Generation;UML Class Diagram;structural model;data model;software;digital twin information system;visualization software;other software code;;;;Implement;;As-Designed;;
Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;Code Generation;GUI Model;structural model;ui configuration model;software;Webpage;visualization software;;;;;Implement;;As-Designed;;
Model-driven engineering city spaces via bidirectional model transformations;Model to Model Transformation;CityGML model;structural model;data model;software;cyber-physical spaces (3D topology) model;structural model;;data model;;Construction;Plan;Systems of Systems;As-Designed;;smart city
Model-Driven Engineering in Digital Thread Platforms: A Practical Use Case and Future Challenges;Code Generation;UI Model;structural model;ui configuration model;software;Web app;;;other software code;;;;;;;
Model-Driven Engineering in Digital Thread Platforms: A Practical Use Case and Future Challenges;;Process Model;behavior model;state-based behavior;PT;Web app;visualization software;;;;;;;;;
Model-Driven Engineering in Digital Thread Platforms: A Practical Use Case and Future Challenges;;Data model;structural model;data model;PT;Web app;visualization software;;;;;;;;;
On the Engineering of IoT-Intensive Digital Twin Software Systems;Model Interpretation;structural model of the PT;structural model;;PT;Model Synchronizer + Model Manager component;;;other software code;;None;Design;Individual Systems;As-Designed;TRL 1-3;
On the Engineering of IoT-Intensive Digital Twin Software Systems;Model Interpretation;behavioral model of the PT;behavior model;data model;PT;Model Synchronizer + Model Manager component;;;other software code;;;Design;;As-Designed;;
Proof of Concept for a Roundtrip Engineering IS for the New Enterprise in the Industry 4.0 Era;Code Generation;BPMN;behavior model;state-based behavior;PT;Python Drone control code;;;other software code;;Transportation and Storage;Implement;Individual Systems;As-Designed;TRL 1-3;Drone fleet
Reliable Counterparts: Efficiently Testing Causal Relationships in Digital Twins;Model Interpretation;Causal Directed Acyclic Graphs (DAG);behavior model;state-based behavior;PT;Inference Engine;;;other software code;;Manufacturing;Test;Individual Systems;As-Designed;TRL 1-3;Robotic arm
Semantic Interoperability of Digital Twins: Ontology-based Capability Checking in AAS Modeling Framework;Model to Model Transformation;AAS;structural model;data model;PT;OWL Individuals (MaRCO);behavior + structure model;;ontology;;;Design;;As-Designed;;
Semantic Interoperability of Digital Twins: Ontology-based Capability Checking in AAS Modeling Framework;Model to Model Transformation;OWL Ontology + OWL Individuals;behavior + structure model;ontology;PT;capability matchmaker;;;other software code;;;Design;;As-Designed;;
Semantic Interoperability of Digital Twins: Ontology-based Capability Checking in AAS Modeling Framework;Model Interpretation;AAS Model;structural model;data model;PT;user interface created by the authors (cf. Section 4.C);structural model;;;;;Design;;As-Designed;;
Semantic Interoperability of Digital Twins: Ontology-based Capability Checking in AAS Modeling Framework;Model Interpretation;OML;behavior + structure model;ontology;;UML Stereotypes;structural model;;;;Manufacturing;Design;;As-Designed;TRL 1-3;robotic cell (niryo ned for gripping + turtlebot for transportation)
Supporting Digital Twins for the Retrofit in Aviation by a Model-Driven Data Handling;Model to Model Transformation;SysML (csv representation);structural model;data model;;SysML (Graph Database entries);;;other software code;;Transportation and Storage;Maintain;Individual Systems;As-Operated;TRL 1-3;Aircraft cabine refitting
Supporting the Implementation of Digital Twins for IoT-Enhanced BPs;Model to Model Transformation;BPMN Model;behavior model;state-based behavior;PT;java template code for microservices;;;other software code;;;Implement;;As-Designed;;
Supporting the Implementation of Digital Twins for IoT-Enhanced BPs;Code Generation;BPMN Model;behavior model;state-based behavior;PT;DTDL Model;structural model;;data model;;Accommodation;Design;Systems of Systems;As-Designed;TRL 1-3;CO2 Measurement
The Framework for Designing Autonomous Cyber-Physical Multi-agent Systems for Adaptive Resource Management;Model Interpretation;Knowledge Base Model;behavior + structure model;ontology;PT;Scheduling Engine;;;other software code;;;Design;;As-Designed;;
The Framework for Designing Autonomous Cyber-Physical Multi-agent Systems for Adaptive Resource Management;Model Interpretation;Knowledge Base Model;behavior + structure model;ontology;PT;Simulator;;;simulation code;;;Design;;As-Designed;;
The Framework for Designing Autonomous Cyber-Physical Multi-agent Systems for Adaptive Resource Management;Model to Model Transformation;Knowledge Base Model;behavior + structure model;ontology;PT;Knowledge Base Model (updated with runtime data);structure + behavior;;ontology;PT;;Design;;As-Designed;;
The OMiLAB Digital Innovation environment: Agile conceptual models to bridge business value with Digital and Physical Twins for Product-Service Systems development;Model Interpretation;BPMN;behavior model;state-based behavior;PT;;;;;;Education;Design;Individual Systems;As-Designed;TRL 4-6;
Towards a Digital Twin for Cyber-Physical Production Systems: A Multi-Paradigm Modeling Approach in the Postal Industry;Model to Model Transformation;BPMN;behavior model;state-based behavior;;Activity Diagram;behavior model;;state-based behavior;PT;Administrative;Design;Processes;As-Designed;TRL 1-3;sorting robot of a postal center
Towards a Digital Twin for Cyber-Physical Production Systems: A Multi-Paradigm Modeling Approach in the Postal Industry;Model to Model Transformation;Activity Diagram;behavior model;state-based behavior;PT;Class Diagram;structural model;;ui configuration model;;;Design;;As-Designed;;
Towards a Digital Twin for Cyber-Physical Production Systems: A Multi-Paradigm Modeling Approach in the Postal Industry;;;;;;;;;;;;;;;;
Towards a Model-Driven Architecture for Interactive Digital Twin Cockpits;Code Generation;CD;structural model;data model;software;Java Code;;;other software code;;Manufacturing;Implement;Individual Systems;As-Designed;TRL 1-3;
Towards a Model-Driven Architecture for Interactive Digital Twin Cockpits;Code Generation;MontiArc model;structural model;architecture model;software;system architecture;;;other software code;;;Implement;;As-Designed;;
Towards a Model-Driven Architecture for Interactive Digital Twin Cockpits;Code Generation;GUI Model;structural model;ui configuration model;software;DT cockpits;visualization software;;;;;Implement;;As-Designed;;
Towards Reactive Planning with Digital Twins and Model-Driven Optimization;Model Interpretation;Henshin model;behavior model;state-based behavior;PT;Digital Twin;;;other software code;;None;Operate;Individual Systems;"As-Designed;As-Operated";TRL 1-3;
Twin Process Model Driven Machining Quality Optimization for Complex Parts;Code Generation;Twin Process Model;behavior model;state-based behavior;;Numeric Control (NC)Code;;;simulation code;;Manufacturing;Operate;Individual Systems;As-Designed;TRL 1-3;
TwinOps - DevOps Meets Model-Based Engineering and Digital Twins for the Engineering of CPS;Model to Model Transformation;AADL;structural model;architecture model;software;LNT model (used for model checking);behavior model;;continuous behavior;PT;;Implement;;As-Designed;;
TwinOps - DevOps Meets Model-Based Engineering and Digital Twins for the Engineering of CPS;Code Generation;AADL;structural model;architecture model;software;FMI device mock-ups;behavior model;;;PT;;Implement;;As-Designed;;
TwinOps - DevOps Meets Model-Based Engineering and Digital Twins for the Engineering of CPS;Code Generation;AADL;structural model;architecture model;software;Azure code that is used to execute the system and perform monitoring (I think that both aspects are the same);;;other software code;;;Implement;;As-Designed;;
TwinOps - DevOps Meets Model-Based Engineering and Digital Twins for the Engineering of CPS;Code Generation;SysML;behavior model;state-based behavior;;AADL;structural model;;architecture model;;Accommodation;Design;Systems of Systems;As-Designed;TRL 1-3;hypothetical monitoring system for a building
Understanding and Improving Model-Driven IoT Systems through Accompanying Digital Twins;Model to Model Transformation;MontiThings;structural model;architecture model;software;IoT controller code in C++;;;other software code;;;Implement;;As-Operated;;
Understanding and Improving Model-Driven IoT Systems through Accompanying Digital Twins;Code Generation;MontiThings model or real system;structural model;architecture model;software;MontiThings model or reproduced system;structural model;other software code;architecture model;software;Accommodation;Operate;Individual Systems;As-Operated;TRL 1-3;"smart lawn watering system; heating, ventilation, and air conditioning of a
smart home"
Using Trace Alignments for Measuring the Similarity between a Physical and Its Digital Twin;Model Interpretation;OD (Snapshot of PT and DT);structural model;data model;PT + software;Trace Alignment Algorithm;;;other software code;;Manufacturing;Operate;Individual Systems;As-Operated;TRL 1-3;Robotic arm
Using Trace Alignments for Measuring the Similarity between a Physical and Its Digital Twin;Model Interpretation;"OD (Snapshot); CD (snapshot metamodel)";structural model;data model;PT + software;Type Checking Algorithm;;;other software code;;Transportation and Storage;Operate;Individual Systems;As-Operated;TRL 1-3;Lego Mindstorms Car
Using UML and OCL Models to Realize High-Level Digital Twins;Model Interpretation;UML class diagram;structural model;data model;software;uml cd adapter that interprets CD and adapts a data lake accordingly (data lake stores data from the PT);;;other software code;;Transportation and Storage;Operate;;As-Designed;TRL 1-3;lego mindstorms car
Workshop Management and Control System Based on Digital Twin;Model Interpretation;dt physical model;structural model;data model;PT;DT Simulation;;;simulation code;;Manufacturing;Implement;Individual Systems;As-Designed;TRL 4-6;
Workshop Management and Control System Based on Digital Twin;Model Interpretation;behavior model;behavior model;;PT;DT Simulation;;;simulation code;;Manufacturing;Implement;Individual Systems;As-Designed;TRL 4-6;
Workshop Management and Control System Based on Digital Twin;Model Interpretation;geometric model;structural model;data model;PT;DT Simulation;;;simulation code;;Manufacturing;Implement;Individual Systems;As-Designed;TRL 4-6;
