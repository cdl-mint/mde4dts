"Item type","Authors","Title","Journal","Publication year","Volume","Issue","Pages","Publisher","Address","Proceedings title","Conference location","Date published","ISBN","ISSN","URLs","DOI","Abstract","Keywords","Series"
"Conference Paper","Kirchhof JC,Michael J,Rumpe B,Varga S,Wortmann A","Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems","","2020","","","90–101","Association for Computing Machinery","New York, NY, USA","Proceedings of the 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems","Virtual Event, Canada","2020","9781450370196","","https://doi.org/10.1145/3365438.3410941;http://dx.doi.org/10.1145/3365438.3410941","10.1145/3365438.3410941","Digital twins emerge in many disciplines to support engineering, monitoring, controlling, and optimizing cyber-physical systems, such as airplanes, cars, factories, medical devices, or ships. There is an increasing demand to create digital twins as representation of cyber-physical systems and their related models, data traces, aggregated data, and services. Despite a plethora of digital twin applications, there are very few systematic methods to facilitate the modeling of digital twins for a given cyber-physical system. Existing methods focus only on the construction of specific digital twin models and do not consider the integration of these models with the observed cyber-physical system. To mitigate this, we present a fully model-driven method to describe the software of the cyber-physical system, its digital twin information system, and their integration. The integration method relies on MontiArc models of the cyber-physical system's architecture and on UML/P class diagrams from which the digital twin information system is generated. We show the practical application and feasibility of our method on an IoT case study. Explicitly modeling the integration of digital twins and cyber-physical systems eliminates repetitive programming activities and can foster the systematic engineering of digital twins.","software architecture, information systems, cyber-physical systems, model-driven software engineering, digital twins","MODELS '20"
"Conference Paper","Kirchhof JC,Malcher L,Rumpe B","Understanding and Improving Model-Driven IoT Systems through Accompanying Digital Twins","","2021","","","197–209","Association for Computing Machinery","New York, NY, USA","Proceedings of the 20th ACM SIGPLAN International Conference on Generative Programming: Concepts and Experiences","Chicago, IL, USA","2021","9781450391122","","https://doi.org/10.1145/3486609.3487210;http://dx.doi.org/10.1145/3486609.3487210","10.1145/3486609.3487210","Developers questioning why their system behaves differently than expected often have to rely on time-consuming and error-prone manual analysis of log files. Understanding the behavior of Internet of Things (IoT) applications is a challenging task because they are not only inherently hard-to-trace distributed systems, but their integration with the environment via sensors adds another layer of complexity. Related work proposes to record data during the execution of the system, which can later be replayed to analyze the system. We apply the model-driven development approach to this idea and leverage digital twins to collect the required data. We enable developers to replay and analyze the system’s executions by applying model-to-model transformations. These transformations instrument component and connector (C&C) architecture models with components that reproduce the system’s environment based on the data recorded by the system’s digital twin. We validate and evaluate the feasibility of our approach using a heating, ventilation, and air conditioning (HVAC) case study. By facilitating the reproduction of the system’s behavior, our method lowers the barrier to understanding the behavior of model-driven IoT systems.","Architecture Description Languages, Internet of Things, Model-Driven Development, Debugging","GPCE 2021"
"Conference Paper","Muñoz P","How Alike Are My Physical and Digital Twins?","","2022","","","201–204","Association for Computing Machinery","New York, NY, USA","Proceedings of the 25th International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings","Montreal, Quebec, Canada","2022","9781450394673","","https://doi.org/10.1145/3550356.3552393;http://dx.doi.org/10.1145/3550356.3552393","10.1145/3550356.3552393","A digital twin is a virtual replica of a system defined at a certain level of fidelity, and synchronized at a specific frequency. Digital twins are often used to replicate physical systems whose simulations are usually computationally costly. One of the solutions proposed in the literature to this problem is to define a hierarchy of multi-fidelity digital twins, where we use one twin or another depending on the specific purpose. However, one of the challenges of this proposal is the need to determine whether these twins are equivalent to each other and the physical system according to their purpose. In this work, we explore different methods to measure this equivalence by analyzing the state and behavior of the twins using high-level software models.","fidelity, multi-fidelity, digital twins, conformance testing, simulation","MODELS '22"
"Conference Paper","Muñoz P","Measuring the Fidelity of Digital Twin Systems","","2022","","","182–188","Association for Computing Machinery","New York, NY, USA","Proceedings of the 25th International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings","Montreal, Quebec, Canada","2022","9781450394673","","https://doi.org/10.1145/3550356.3558516;http://dx.doi.org/10.1145/3550356.3558516","10.1145/3550356.3558516","A digital twin is a virtual replica of a system at a certain level of fidelity, synchronized at a specific frequency. Digital twins often replicate physical systems whose simulations are usually computationally costly. One of the solutions to this problem proposed in the literature is to define a hierarchy of multi-fidelity digital twins, where we use one twin or another depending on the specific purpose. However, one of the challenges of this proposal is the need to determine whether the different twins are equivalent to each other and the physical system. In this thesis, we explore different methods to measure this equivalence by analyzing the state and behavior of the twins with the aid of high-level software models.","conformance testing, fidelity, multi-fidelity, simulation, digital twins","MODELS '22"
"Conference Paper","Cleophas L,Godfrey T,Khelladi DE,Lehner D,Combemale B,van den Brand M,Vierhauser M,Wimmer M,Zschaler S","A Community-Sourced View on Engineering Digital Twins: A Report from the EDT.Community","","2022","","","481–485","Association for Computing Machinery","New York, NY, USA","Proceedings of the 25th International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings","Montreal, Quebec, Canada","2022","9781450394673","","https://doi.org/10.1145/3550356.3561549;http://dx.doi.org/10.1145/3550356.3561549","10.1145/3550356.3561549","Digital Twins are an important concept, enabling what-if scenario exploration, predictive maintenance, and other approaches. They help in saving time and physical resources when developing and evolving systems, whether natural or engineered. However, constructing and maintaining digital twins is a challenging engineering task - and, to date, there is a lack of understanding of the engineering techniques and methodologies required. To address these challenges, we created EDT.Community, a programme of seminars on the engineering of digital twins hosting digital twins experts from academia and industry. In this paper, we report on the main topics of discussion from the first year of the programme. We contribute by providing (1) a common understanding of open challenges in research and practice of the engineering of digital twins, and (2) an entry point to researchers who aim to close gaps in the current state of the art.","digital twin, digital engineering, systems engineering","MODELS '22"
"Conference Paper","Barat S,Kulkarni V,Clark T,Barn B","Digital Twin as Risk-Free Experimentation Aid for Techno-Socio-Economic Systems","","2022","","","66–75","Association for Computing Machinery","New York, NY, USA","Proceedings of the 25th International Conference on Model Driven Engineering Languages and Systems","Montreal, Quebec, Canada","2022","9781450394666","","https://doi.org/10.1145/3550355.3552409;http://dx.doi.org/10.1145/3550355.3552409","10.1145/3550355.3552409","Environmental uncertainties and hyperconnectivity force technosocio-economic systems to introspect and adapt to succeed and survive. Current practices in decision-making are predominantly intuition-driven with attendant challenges for precision and rigor. We propose to use the concept of digital twins by combining results from Modelling & Simulation, Artificial Intelligence, and Control Theory to create a risk free 'in silico' experimentation aid to help: (i) understand why a system is the way it is, (ii) be prepared for possible outlier conditions, and (iii) identify plausible solutions for mitigating the outlier conditions in an evidence-backed manner. We use reinforcement learning to systematically explore the digital twin solution space. Our proposal is significant because it advances the effective use of digital twins to new problem domains that have new potential for impact. Our approach contributes an original meta model for simulatable digital twin of industry scale techno-socioeconomic systems, agent-based implementation of the digital twin, and an architecture that serves as a risk-free experimentation aid to support simulation-based evidence-backed decision-making. We also discuss the rigor of our validation of the proposed approach and associated technology infrastructure through a representative sample of industry-scale real-world use cases.","decision making, agent model, digital twin, simulatable model","MODELS '22"
"Conference Paper","Grimmeisen P,Wortmann A,Morozov A","Case Study on Automated and Continuous Reliability Assessment of Software-Defined Manufacturing Based on Digital Twins","","2022","","","511–518","Association for Computing Machinery","New York, NY, USA","Proceedings of the 25th International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings","Montreal, Quebec, Canada","2022","9781450394673","","https://doi.org/10.1145/3550356.3561601;http://dx.doi.org/10.1145/3550356.3561601","10.1145/3550356.3561601","Traditional production systems are characterized by rare software updates and fixed production lines. Each production unit is designed and programmed for a specific task. Therefore, the reliability assessment is conducted once before the operation, mostly manually, and is based on traditional reliability models, such as event trees, fault trees, or reliability block diagrams. In comparison to traditional production systems, the focus of modern, complex production systems is shifted towards the software part. This is emphasized by the concepts of digital twins and Software-Defined Manufacturing (SDM). These software-intensive and safety-critical systems have more frequent software updates to address higher system flexibility and adjustable production processes. Therefore, SDM systems require a new approach to reliability assessment. Each software update can change the system behavior significantly. This leads to the necessity to reconduct the reliability assessment automatically before each software update. Advanced and hybrid reliability models are the key enabling technology. These models must be automatically generated and synchronized with the available system models and digital twins. Model-to-Model (M2M) transformation methods are another enabling technology.In this paper, we present a case study on automated and continuous reliability assessment of SDM. It shows, that our new method is a suitable candidate to enable the reliability assessment of SDM based on digital twins. The method includes (i) the extension of SysML v2 for reliability assessment, (ii) the automatic generation of hybrid reliability models from the digital twin, and (iii) their reliability assessment with new solvers developed for our OpenPRA framework.","case study, reliability assessment, software-defined manufacturing, digital twin, model-to-model (M2M) transformation, SysML v2","MODELS '22"
"Conference Paper","Hugues J,Hristosov A,Hudak JJ,Yankel J","TwinOps - DevOps Meets Model-Based Engineering and Digital Twins for the Engineering of CPS","","2020","","","","Association for Computing Machinery","New York, NY, USA","Proceedings of the 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings","Virtual Event, Canada","2020","9781450381352","","https://doi.org/10.1145/3417990.3421446;http://dx.doi.org/10.1145/3417990.3421446","10.1145/3417990.3421446","The engineering of Cyber-Physical Systems (CPS) requires a large set of expertise to capture the system requirements and to derive a correct solution. Model-based Engineering and DevOps aim to efficiently deliver software with increased quality. Model-based Engineering relies on models as first-class artifacts to analyze, simulate, and ultimately generate parts of a system. DevOps focuses on software engineering activities, from early development to integration, and then improvement through the monitoring of the system at run-time. We claim these can be efficiently combined to improve the engineering process of CPS.In this paper, we present TwinOps, a process that unifies Model-based Engineering, Digital Twins, and DevOps practice in a uniform workflow. TwinOps illustrates how to leverage several best practices in MBE and DevOps for the engineering Cyber-Physical systems. We illustrate our contribution using a Digital Twins case study to illustrate TwinOps benefits, combining AADL and Modelica models, and an IoT platform.","","MODELS '20"
"Conference Paper","Muñoz P,Wimmer M,Troya J,Vallecillo A","Using Trace Alignments for Measuring the Similarity between a Physical and Its Digital Twin","","2022","","","503–510","Association for Computing Machinery","New York, NY, USA","Proceedings of the 25th International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings","Montreal, Quebec, Canada","2022","9781450394673","","https://doi.org/10.1145/3550356.3563135;http://dx.doi.org/10.1145/3550356.3563135","10.1145/3550356.3563135","A common problem in the development of digital twin systems is the validation that the behavior of both twins, the physical and the digital, is the same, or at least similar enough given the requirements of the digital twin system. In this paper, we propose a method for the alignment of the traces of both twins. Traces are sequences of snapshots that capture the progressive states of each entity. Our approach is based on a bioinformatic algorithm that we adapt and use for the alignment of snapshots. Additionally, we include a set of measures to evaluate the quality of these alignments and reason about the level of fidelity of the digital twin system. Two case studies are used to demonstrate our proposal and evaluate its accuracy and effectiveness.","trace analysis, digital twins, conformance testing, trace alignment","MODELS '22"
"Conference Paper","Niati A,Selma C,Tamzalit D,Bruneliere H,Mebarki N,Cardin O","Towards a Digital Twin for Cyber-Physical Production Systems: A Multi-Paradigm Modeling Approach in the Postal Industry","","2020","","","","Association for Computing Machinery","New York, NY, USA","Proceedings of the 23rd ACM/IEEE International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings","Virtual Event, Canada","2020","9781450381352","","https://doi.org/10.1145/3417990.3421438;http://dx.doi.org/10.1145/3417990.3421438","10.1145/3417990.3421438","This paper presents our early-stage research on a Multi-Paradigm Modeling (MPM) approach as an initial step towards the definition of a Digital Twin (DT) for Cyber-Physical Production Systems (CPPSs). This work takes place in the context of the digitalization of the mail sorting process at La Poste, the French national postal service company. Indeed, La Poste is currently investing on robotics modules for automatically loading mail containers. The main objective is to reduce the painful work for human operators while optimizing the robots usage. We already worked on targeting such a balance in a past effort that resulted in the production of different kinds of models of the La Poste CPPS. However, these models were defined separately and are not directly related to the underlying business process in particular. Thus, we propose an MPM approach starting from this business process as now modeled explicitly in a BPMN model. Then, we refine the high-level business activities into finer-grained activities represented in a UML Activity model. From these latest, we derive the specification of a Multi-Agent System (MAS) developed with the JADE framework and emulating the behavior of the La Poste CPPS. Our longer term objective is to pave the way for supporting the definition of a DT for this CPPS, and potentially for other CPPSs in different contexts in the future.","activity modeling, digital twin, cyber-physical production systems, multi-paradigm modeling, business process modeling, agent-based modeling","MODELS '20"
"Conference Paper","Christofi N,Pucel X","A Novel Methodology to Construct Digital Twin Models for Spacecraft Operations Using Fault and Behaviour Trees","","2022","","","473–480","Association for Computing Machinery","New York, NY, USA","Proceedings of the 25th International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings","Montreal, Quebec, Canada","2022","9781450394673","","https://doi.org/10.1145/3550356.3561550;http://dx.doi.org/10.1145/3550356.3561550","10.1145/3550356.3561550","Successful satellite data reception requires the nominal operation of the ground stations in charge of their health monitoring as much as the spacecrafts themselves. Although the concept of Model-Based Diagnosis (MBD) in the field of autonomous systems -such as satellites, has long been researched and developed, that is not the case for their ground systems. Both satellites and ground stations operate autonomously. The latter however, are not equipped with the advanced Fault Detection, Isolation and Recovery (FDIR) capabilities one finds today on-board all orbiting spacecrafts. The aim of the study presented in this paper is the improvement of ground stations' operational diagnostics by providing the operators with ad-hock, Operations-Dedicated Models (ODMs). The latter serve as a basis for the construction of the system's Digital Twin (DT) models. These models allow the operators react more quickly and more precisely to alarms raised by the station. By helping the operators identify the malfunction and correct it in the quickest delays, they can avoid loosing the next satellite telemetry (TM) data, thus saving precious time and costs. This would increase both the availability and maintainability of the system. In a larger framework, ODMs are ideally concurrently built and connected with the engineering and safety models of the system, in a sort of virtual continuous improvement loop. While the utter purpose of ODMs is their usage as the system's DTs during operations, they also contribute to the stations' architecture and robustness continuous improvement, through increasing its fault detection and mitigation capabilities.","fault trees (FTs), MBSE, model-based operations (MBO), behaviour trees (BTs), ground systems operations, operational diagnosis, model-based diagnosis (MBD), digital twins (DTs), MBSA","MODELS '22"
"Conference Paper","Somers RJ,Clark AG,Walkinshaw N,Hierons RM","Reliable Counterparts: Efficiently Testing Causal Relationships in Digital Twins","","2022","","","468–472","Association for Computing Machinery","New York, NY, USA","Proceedings of the 25th International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings","Montreal, Quebec, Canada","2022","9781450394673","","https://doi.org/10.1145/3550356.3561589;http://dx.doi.org/10.1145/3550356.3561589","10.1145/3550356.3561589","The lack of testability of digital twins poses several difficulties when developing reliable systems. Intricate models complicate the definition of comprehensive testing criteria, and physical couplings make obtaining test data an arduous task. To alleviate these challenges, we explore the use of causal inference based testing and propose a technique to allow for correct behaviour of digital twins to be captured in causal diagrams, which are then tested with an efficient data set through the use of counterfactuals. We explore a motivating example of a robotic arm to show how this technique can confirm known causal relationships in a system, and even uncover a fault in the system which caused dangerous behaviour. Our technique localised this erroneous behaviour to a single causal relationship between two variables. Having shown this technique works with a case study, we explore its limitations and the challenges when approaching other industrial applications.","testing, causal inference, cyber-physical system, fault localisation, digital twin","MODELS '22"
"Conference Paper","Rivera LF,Müller HA,Villegas NM,Tamura G,Jiménez M","On the Engineering of IoT-Intensive Digital Twin Software Systems","","2020","","","631–638","Association for Computing Machinery","New York, NY, USA","Proceedings of the IEEE/ACM 42nd International Conference on Software Engineering Workshops","Seoul, Republic of Korea","2020","9781450379632","","https://doi.org/10.1145/3387940.3392195;http://dx.doi.org/10.1145/3387940.3392195","10.1145/3387940.3392195","Digital Twins (DT) are software systems representing different aspects of a physical or conceptual counterpart---the real twin, which is instrumented with several sensors or computing devices that generate, consume and transfer data to its DT with different purposes. In other words, DT systems are, to a large extent, IoT-intensive systems. Indeed, by exploiting and managing IoT data, artificial intelligence, and big data and simulation capabilities, DTs have emerged as a promising approach to manage the virtual manifestation of real-world entities throughout their entire lifecycle. Their proliferation will contribute to realizing the long-craved convergence of virtual and physical spaces to augment things and human capabilities. In this context, despite the proposal of noteworthy contributions, we argue that DTs have not been sufficiently investigated from a software engineering perspective. To address this, in this paper we propose GEMINIS, an architectural reference model that adopts self-adaptation, control, and model-driven engineering techniques to specify the structural and behavioural aspects of DTs and enable the evolution of their internal models. Moreover, we introduce an approach for engineering IoT-intensive Digital Twin Software Systems (DTSS) using GEMINIS' capabilities to deal with uncertain conditions that are inherent to the nature of mirrored physical environments and that might compromise the fidelity of a DT. With GEMINIS and the proposed approach, we aim to advance the engineering of DTSS as well as IoT and cyber-physical systems by providing practitioners with guidelines to model and specify inherent structural and behavioural characteristics of DTs, addressing common design concerns.","IoT, dynamic context management, DTSS, MIAC, megamodel, Digital twin, models at runtime, reference model, self-adaptive, MRAC, GEMINIS, adaptive control","ICSEW'20"
"Conference Paper","Fend A,Bork D","CPSAML: A Language and Code Generation Framework for Digital Twin Based Monitoring of Mobile Cyber-Physical Systems","","2022","","","649–658","Association for Computing Machinery","New York, NY, USA","Proceedings of the 25th International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings","Montreal, Quebec, Canada","2022","9781450394673","","https://doi.org/10.1145/3550356.3563134;http://dx.doi.org/10.1145/3550356.3563134","10.1145/3550356.3563134","Cyber-physical systems (CPS) are finding increasing use, whether in factories, autonomous vehicles, or smart buildings. Monitoring the execution of CPSs is crucial since CPSs directly influence their physical environment. Like the actual system, the monitoring application must be designed, developed, and tested. Mobile CPSs, in contrast to stationary CPSs, bring the additional requirement that instances can dynamically join, leave, or fail during execution time. This dynamic behavior must also be considered in the monitoring application. This paper presents CPSAML, a language and code generation framework for the model-driven development of mobile CPS systems, including a cockpit application for monitoring and interacting with such a system. The pipeline starts with the formulation of the system and the CPSs it contains at an abstract level by the system architect using a domain-specific modeling language. Next, this model is transformed into SysML 2 for further extension and richer specificity by system engineers on a more technical level. In the last step of the pipeline, the SysML 2 model is used to generate code for the CPS devices, a system-wide digital twin, and the cockpit application mentioned above. This cockpit enables the operator to configure and apply the monitoring and interaction with the system during runtime. We evaluate our CPSAML language and code generation framework on an Indoor Transport System case study with Roomba vacuum cleaner robots.","multi-paradigm modeling, cyber-physical systems, model-driven engineering, digital twin","MODELS '22"
"Conference Paper","Walravens G,Muctadir HM,Cleophas L","Virtual Soccer Champions: A Case Study on Artifact Reuse in Soccer Robot Digital Twin Construction","","2022","","","463–467","Association for Computing Machinery","New York, NY, USA","Proceedings of the 25th International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings","Montreal, Quebec, Canada","2022","9781450394673","","https://doi.org/10.1145/3550356.3561586;http://dx.doi.org/10.1145/3550356.3561586","10.1145/3550356.3561586","A Digital Twin (DT) can be described as a pairing of a physical and virtual entity, in which the latter 'mimicks' the former in some sense, using data from its physical counterpart---whether real-time or historical---, for various purposes including better understanding of the physical entity's behaviour, predictive maintenance, and whatif scenario exploration. Here, we focus on the development of the virtual part of the DT in a context where the physical entity already exists, offering the potential for design and engineering artifacts from the physical entity to be reused. We performed a case study on the Turtle soccer robots developed by Eindhoven University of Technology's Tech United [6] team, to explore the possibilities of reusing artifacts for the development of the corresponding virtual entity. In this paper, we present our experiences from this case study and discuss the benefits, drawbacks, and challenges we faced.","digital twin development, artifact reuse, turtle soccer robot","MODELS '22"
"Journal Article","Picone M,Mamei M,Zambonelli F","A Flexible and Modular Architecture for Edge Digital Twin: Implementation and Evaluation","ACM Trans. Internet Things","2023","4","1","","Association for Computing Machinery","New York, NY, USA","","","2023-02","","2691-1914","https://doi.org/10.1145/3573206;http://dx.doi.org/10.1145/3573206","10.1145/3573206","IoT systems based on Digital Twins (DTs) — virtual copies of physical objects and systems — can be very effective to enable data-driven services and promote better control and decisions, in particular by exploiting distributed approaches where cloud and edge computing cooperate effectively. In this context, digital twins deployed on the edge represents a new strategic element to design a new wave of distributed cyber-physical applications. Existing approaches are generally focused on fragmented and domain-specific monolithic solutions and are mainly associated to model-driven, simulative or descriptive visions. The idea of extending the DTs role to support last-mile digitalization and interoperability through a set of general purpose and well-defined properties and capabilities is still underinvestigated. In this paper, we present the novel Edge Digital Twins (EDT) architectural model and its implementation, enabling the lightweight replication of physical devices providing an efficient digital abstraction layer to support the autonomous and standard collaboration of things and services. We model the core capabilities with respect to the recent definition of the state of the art, present the software architecture and a prototype implementation. Extensive experimental analysis shows the obtained performance in multiple IoT application contexts and compares them with that of state-of-the-art approaches.","Digital Twin, edge computing, Internet of Things",""
"Conference Paper","Huang Y,Dhouib S,Medinacelli LP,Malenfant J","Enabling Semantic Interoperability of Asset Administration Shells through an Ontology-Based Modeling Method","","2022","","","497–502","Association for Computing Machinery","New York, NY, USA","Proceedings of the 25th International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings","Montreal, Quebec, Canada","2022","9781450394673","","https://doi.org/10.1145/3550356.3561606;http://dx.doi.org/10.1145/3550356.3561606","10.1145/3550356.3561606","Digital twin technology establishes the future development vision for Industry 4.0, and is also an important exploration direction for the Model-Driven Engineering (MDE) paradigm. Because it builds a more flexible and communicative production system through models that spans life cycle, hierarchy and architecture. The standard proposed under the concept of Industry 4.0, the Asset Administration Shell (AAS), provides a syntactic interoperability interface for all assets involved in smart factories. However, there is still a need to fill the gap regarding semantic interoperability, in order to allow efficient interactions between Industry 4.0 components. Ontologies are a good candidate because they provide formal semantics expressed using a knowledge representation language, and in addition, there are many associated mature tools for reasoning and inference. Therefore, we propose a modeling approach that provides semantic interoperability for AAS-based digital twins using ontologies.","digital twins, asset administration shell, industry 4.0, model-driven engineering, ontology, semantic interoperability, smart manufacturing","MODELS '22"
"Conference Paper","Bellis S,Denil J","Challenges and Possible Approaches for Sustainable Digital Twinning","","2022","","","643–648","Association for Computing Machinery","New York, NY, USA","Proceedings of the 25th International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings","Montreal, Quebec, Canada","2022","9781450394673","","https://doi.org/10.1145/3550356.3561551;http://dx.doi.org/10.1145/3550356.3561551","10.1145/3550356.3561551","The advance in digital twin technology is creating value for lots of companies. We look at the digital twin design and operation from a sustainability perspective. We identify some challenges related to a digital twin's sustainable design and operation. Finally, we look at some possible approaches, grounded in multi-paradigm modelling to help us create and deploy more sustainable twins.","neural networks, gaze detection, text tagging, datasets","MODELS '22"
"Conference Paper","Stieß S,Becker S,Ege F,Höppner S,Tichy M","Coordination and Explanation of Reconfigurations in Self-Adaptive High-Performance Systems","","2022","","","486–490","Association for Computing Machinery","New York, NY, USA","Proceedings of the 25th International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings","Montreal, Quebec, Canada","2022","9781450394673","","https://doi.org/10.1145/3550356.3561555;http://dx.doi.org/10.1145/3550356.3561555","10.1145/3550356.3561555","Self-adaptive systems that modify their architecture to achieve different Service Level Objectives (SLOs) are becoming well-established parts of a company's portfolio. Current systems however do a poor job of coordinating the underlying rules and explaining the system's behavior to developers. This negatively impacts a system's performance due to behaving in unintended and hard-to-comprehend ways.In this vision paper, we introduce an approach that intends to alleviate these problems, for the use-case of high-performance cloud clusters, through the use of a cyber-cyber digital twin based on the Palladio ecosystem. The conceived digital twin allows for several functions that are unexplored in literature so far: the combination of design time analysis with explainability, use of state-space prediction bounded by likelihood, and explanation of non-applicability. This is achieved through a digital twin performing three main activities:1) The predicting activity predicts system performance along several potential paths.2) The planning activity analyzes reconfiguration rules and predicted system behavior to produce reconfiguration plans that try to optimally utilize available resources and achieve all SLOs without unintended interactions between the execution of rules.3) The explaining activity processes all artifacts produced during system simulation time or runtime to provide comprehensive visualizations to developers.We explain how each activity is performed and what models it processes and produces based on a running example.","cyber-cyber digital twin, reconfiguration coordination, palladio, digital twin, explainability, self-adaptive system","MODELS '22"
"Conference Paper","Chen X,Kang E,Shiraishi S,Preciado VM,Jiang Z","Digital Behavioral Twins for Safe Connected Cars","","2018","","","144–153","Association for Computing Machinery","New York, NY, USA","Proceedings of the 21th ACM/IEEE International Conference on Model Driven Engineering Languages and Systems","Copenhagen, Denmark","2018","9781450349499","","https://doi.org/10.1145/3239372.3239401;http://dx.doi.org/10.1145/3239372.3239401","10.1145/3239372.3239401","Driving is a social activity which involves endless interactions with other agents on the road. Failing to locate these agents and predict their possible future actions may result in serious safety hazards. Traditionally, the responsibility for avoiding these safety hazards is solely on the drivers. With improved sensor quantity and quality, modern ADAS systems are able to accurately perceive the location and speed of other nearby vehicles and warn the driver about potential safety hazards. However, accurately predicting the behavior of a driver remains a challenging problem. In this paper, we propose a framework in which behavioral models of drivers (Digital Behavioral Twins) are shared among connected cars to predict potential future actions of neighboring vehicles, therefore improving the safety of driving. We provide mathematical formulations of models of driver behavior and the environment, and discuss challenging problems during model construction and risk analysis. We also demonstrate that our digital twins framework can accurately predict driver behaviors and effectively prevent collisions using a case study in a virtual driving simulation environment.","Modeling methodologies, Connected cars, Classification, Markov decision processes","MODELS '18"
"Conference Paper","Wrobel G,Scheffler R","Classification and Mapping of Layout Algorithms for Usage in Graph-like Modeling Languages","","2022","","","728–736","Association for Computing Machinery","New York, NY, USA","Proceedings of the 25th International Conference on Model Driven Engineering Languages and Systems: Companion Proceedings","Montreal, Quebec, Canada","2022","9781450394673","","https://doi.org/10.1145/3550356.3561559;http://dx.doi.org/10.1145/3550356.3561559","10.1145/3550356.3561559","Graph-lik>modeling languages (GLML) are important modeling artifacts for software tools that are used in the environment of software and systems engineering, digital twins, and domain-specific modeling. Just as with textual languages, the concrete syntax is the representation of the language elements intended for humans and thus has a decisive influence on the comprehensibility and usability of the language.The concrete syntax of GLML is often defined less precisely or in less detail when designing metamodels. While metamodels can be designed independently or even without concrete syntax, the latter is required for the actual usage of a graphical language. The layout and the interaction support for editing the language elements are commonly delegated to tool development. However, the development of modeling tools focuses on functionality such as model transformation and model execution, disregarding usability and handling. Low user acceptance then leads to niche applications and a limited number of users. The main reason for the lack of support for laying out and editing the language elements are complex integration challenges mainly concerning the development or adaptation of suitable layout procedures for GLML.Some frameworks offer a remedy by providing layout procedures for GLML. However, GLML differ from each other concerning their concrete syntax. Even minor differences in the concrete syntax of two languages can make the desirransferable or only transferable through complex adaptations. Formal methods for matching the concrete syntax of a GLML with existing layout procedures as early as during the development of the language are missing.In this paper, we present a classification scheme for layout procedures for GLML. The classification scheme is based on a classification scheme we developed for the concrete syntax of GLML, and it contains significant features. We define a mapping procedure between the two classifiers. As a result, the mapping decides whether a layout procedure can be used for a GLML. Both the classification scheme and the process of mapping are demonstrated in a real-world example of a technical graphical domain-specific modeling language.The presented approach supports the design of GLML and the tool development for GLML. It can be an important step towards automated tool development.","graph-like modeling languages, concrete syntax of modeling languages, designing and implementing modeling languages, layout-algorithm reuse","MODELS '22"
"Conference Paper","Barosan I,van der Heijden J","Integration of SysML Models in a 3D Environment for Virtual Testing and Validation","","2022","","","39–45","Association for Computing Machinery","New York, NY, USA","Proceedings of the Federated Africa and Middle East Conference on Software Engineering","Cairo-Kampala, Egypt","2022","9781450396639","","https://doi.org/10.1145/3531056.3542784;http://dx.doi.org/10.1145/3531056.3542784","10.1145/3531056.3542784","Model–Driven Systems Engineering has been presented as a promising approach for developing complex systems. To address the complexity of systems, it is necessary to ensure that knowledge is transferred properly between projects, teams, and engineers. To avoid specification omissions and misinterpretations to surface in projects, clear communication is needed during the system’s development. The introduction of SysML and systems modeling was intended to improve the communication of design intent among stakeholders and engineers. System models have multiple diagrams that are all interconnected and interrelated, such that they represent a consistent view of a system. To comprehend the structure and the behavior of a complex system, proper visualization of the SysML models is needed. There are mature commercial tools that offers support to SysML modeling, and forming the major platforms for developing the SysML models. However, the current SysML modeling tools use 2-dimensional views to visualize the models, which limits the comprehension of a complex system. To overcome this limitation, the SysML models have to integrate into a 3D virtual environment. In this paper, we present the first step towards this solution by introducing the architecture and the implementation of a conversion layer, that converts a SysML model to a 3D representation. To validate the conversion layer a prototype is presented, which converts a SysML model developed with IBM Rhapsody into a 3D representation in the Unity Game Engine. The performed test showed that the complexity of the models can be comprehended more efficiently in 3D than in a 2D environment. Moreover, visualizing the SysML models in 3D offers a better understanding and insight into the structure and the behavior of a system. Coupling the 3D representation of the SysML models with the 3D CAD representation of the modeled system, as in the Digital Twin case, offers new ways of capturing the design of a complex system.","3D modeling, model validation, Model–Driven System Engineering, Virtual Environment, Digital Twin, SysML, model execution, model conversion","FAMECSE '22"
