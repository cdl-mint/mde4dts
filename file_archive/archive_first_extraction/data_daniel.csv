Title;Reason;Notes;modeling language;model type;model processing technique;Spalte3;model usage technique;Modeling Tool;Notes;notation;source;target;purpose of MDE application;purpose of DT;DT definition;domain;Spalte1;system lifecycle phase;Spalte4;twinning target;twin lifecycle phase;purpose /expected benefit of using models;open challenges;TEchnological REadiness Level;Spalte2;notes3
Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;;;class diagram;structure;Model to Model Transformation;;;;;;tagging model, Class Diagram, MontiArc Model;extended MontiArc Model;extend CPS and DTIS by the necessary communication and synchronization infrastructure;;DTs are digital representations of cyber-physical assets or processes that enable advanced control, decision making, and optimization. They are used in a variety of domains, including avionics, automotive, and smart manufacturing;I ó Accommodation and Food Service Activities;UTOMATIC FIRE EXTINGUISHING SYSTEM;Implement;;Individual Systems, such as automated cars (Atorf and Roﬂmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;;;;;
Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;;;montiarc;;code generation;;;;;;MontiArc model;GPL code for CPS;generate CPS code;;;;;;;;;;;;;
Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;;;tagging model;NOTE-DL: hier brauchen wir noch eine klare Abtrennung;code generation;;;;;;class diagram;digital twin information system;generate DT;;;;;;;;;;;;;
Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;;;GUI DSL;structure;;;;;;;;;;;;;;;;;;;;;;
Measuring the Fidelity of Digital Twin Systems;Challenge/Position Paper;;;;;;;;;;;;;;;;;;;;;;;;;
Digital Twin as Risk-Free Experimentation Aid for Techno-Socio-Economic Systems;No MDE technique used;only the data generated by the simulation (which uses a model) is further used by the RL algorithm;;;model interpretation;;;;cf. Figure 6;;;;;;;;;;;;;;;;;
Using Trace Alignments for Measuring the Similarity between a Physical and Its Digital Twin;;;snapshot model;;model interpretation;;;;;;snapshot model;trace alignment algorithm;perform trace alignment on snapshots of DT and PT;;A Digital Twin (DT) is a digital representation of an actual system, service or product (the Physical Twin (PT)), synchronized at a specified frequency and fidelity;;lego mindstorms car;Operate;;Individual Systems, such as automated cars (Atorf and Roﬂmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Operated;;;;;
Towards a Digital Twin for Cyber-Physical Production Systems: A Multi-Paradigm Modeling Approach in the Postal Industry;No MDE technique used;different behavioral models are described for a particular use case, but no MDE technique is applied on these models;;;;;;;;;;;;;;;;;;;;;;;;
A Novel Methodology to Construct Digital Twin Models for Spacecraft Operations Using Fault and Behaviour Trees;;;n.d,;;model interpretation;;;;;;DT model;UI-based monitoring tools;visualize DT model (data from the running system) for human decision making;;"A Digital Twin (DT) is a virtual representation of a physical
product, asset, process, system, or service that allows us to understand, predict, and optimise their performance for better business
outcomes";H ó Transportation and Storage;ground station of a spacecraft;Operate;;Individual Systems, such as automated cars (Atorf and Roﬂmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Operated;;;;;
Understanding and Improving Model-Driven IoT Systems through Accompanying Digital Twins;;;MontiThings;;code generation;;;;;;MontiThings model;IoT controller code in C++;generate code that runs on an IoT system;;Digital twins (DTs) are digital representations of cyber-physical systems. They monitor systems to offer services to analyze, control, and optimize the system. Alas, there is no commonly agreed on definition of DTs;;smart lawn watering system;Operate;;Individual Systems, such as automated cars (Atorf and Roﬂmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Operated;;;;;The DT collects data from the generated IoT code, reproduces the data traces, adapts the input models accordingly, and re-generates the new software based on the adapted models
CPSAML: A Language and Code Generation Framework for Digital Twin Based Monitoring of Mobile Cyber-Physical Systems;;;CPSAML (paper contribution);;code generation;;;;used xtend script, but actually, it's model to model;textual;CPSAML;SysML (partial model);transform System Architect vision (CPSAML) into starting point for System Engineer (partial SysML model);"aggregates data from CPS into a ""single system snapchot""";middleware between CPS and a monitoring cockpit;I ó Accommodation and Food Service Activities;Roomba floor cleaning robot;Design;;Individual Systems, such as automated cars (Atorf and Roﬂmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;basis for code generation, allows different levels of abstractions for different users (system architect/system engineer, VS software developer that works on the generated code);;"4-5: das Ding l‰uft ""im Labor""";;github repository: https://github.com/me-big-tuwien-ac-at/cpsaml
CPSAML: A Language and Code Generation Framework for Digital Twin Based Monitoring of Mobile Cyber-Physical Systems;;;SysML v2;;code generation;;;;;textual;SysML (complete model);CPS software code (ROS Packages, DT, Monitoring Cockpit);generate software infrastructure from sysml models (structural and behavioral);;;;;Implement;;;As-Designed;;;;;
On the Engineering of IoT-Intensive Digital Twin Software Systems;;No Implementation, only high-level proposal;n.d.;structure;model interpretation;;;;;;structural model of the PT;Model Synchronizer + Model Manager component;;;;;;;;;;;;;;very high-level concept, no application to a particular example/domain, no example models given
On the Engineering of IoT-Intensive Digital Twin Software Systems;;No Implementation, only high-level proposal;n.d.;behavior;model interpretation;;;;;;behavioral model of the PT;Model Synchronizer + Model Manager component;;;;;;Design;;;As-Designed;;;;;very high-level concept, no application to a particular example/domain, no example models given
A Flexible and Modular Architecture for Edge Digital Twin: Implementation and Evaluation;No Model used;;;;;;;;;;;;;;;;;;;;;;;;;
Semantic digital twins for organizational development;No implementation (e.g. Challenge/Position Paper);;;;;;;;;;;;;;;;;;;;;;;;;
"A pattern catalog for augmenting Digital Twin models with behavior; [Ein Musterkatalog zur Erweiterung von digitalen Zwillingsmodellen um Verhaltenssichten]";;;;;;;;;;;;;;;;;;;;;;;;;;
Ensuring consistency in scalable-detail models for DT-based control;No MDE technique used;focus is on consistency between different models (structural and behavioral);;;;;;;;;;;;;;;;;;;;;;;;
The OMiLAB Digital Innovation environment: Agile conceptual models to bridge business value with Digital and Physical Twins for Product-Service Systems development;;;;;;;;;;;;;;;;;;;;;;;;;;
Digital twin enhanced human-machine interaction in product lifecycle;No MDE technique used;;;;;;;;;;;;;;;;;;;;;;;;;
Modular Fault Ascription and Corrective Maintenance Using a Digital Twin;No MDE technique used;;;;;;;;;;;;;;;;;;;;;;;;;
Generating customized low-code development platforms for digital twins;;;MontiArc;;code generation;;Model-Driven Architecture?;;;textual;MontiArc-Model describing Software + Monti-Arc Model describing DSLs;Digital Twin Implementation;Generate DT architecture implementation from DT plugins (combine software + language components);realize self-adaptation loop for CPS;"a digital twin is ""a set of models of the system, a set of digital shadows and their aggregation and abstraction collected from a system, and a set of services that allow using the data and models purposefully with respect to the original system""";C ó Manufacturing;injection molding machine;Implement;;Individual Systems, such as automated cars (Atorf and Roﬂmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;easily integrate different implementations (monti arc as definition of common interfaces);account for future variability;"4-5: das Ding l‰uft ""im Labor""";;
Generating customized low-code development platforms for digital twins;;;;;model interpretation;;;;;low-code interface;Service configuration models (written in DSLs specified together with the service definition in montiarc);Digital Twin Implementation;configure existing DT architecture;;;;;Operate;;;As-Operated;configurability: easily configure 1 implementation for different CPSs;"LCDP should also support ""collaborative development""";;;
A data-model fusion dispatch strategy for the building energy flexibility based on the digital twin;No MDE technique used;;;;;;;;;;;;;;;;;;;;;;;;;
Meta-model-based shop-floor digital twin architecture, modeling and application;;;SysML (meta-model, I assume they mean BDD/structural representation);;model interpretation;;traceability;;;;raw data;SysML;align data from CPS with SysML model;Provide Self-Adapation/Optimization based on (i) data from PT, (ii) operations offered by the PT;"the Shop-floor Digital Twin (SDT), as the digital counterpart of physical entities including the humans, machines, material, methods and environments in the existing shop-floor, mirrors the physical shop-floor behavior and performance in the virtual space. The digital counterpart is comprised of a series of semantic digital models and simulation models of the physical shop-floor and has the automatic data synchronization between the physical and virtual space. By establishing the automatic data flow between the physical shop-floor and digital counterpart, the semantic digital models and simulation 
models could be converted to digital shadow and further evolved into SDT.";C ó Manufacturing;shopfloor;Design;;Systems of Systems, such as complete factories (Biesinger et al., 2018), oil wells (Kosenkov et al., 2018), or railway systems (Vatn, 2018).;As-Designed;;;"4-5: das Ding l‰uft ""im Labor""";;Das Papier gehˆrt imho gepunished daf¸r, dass sie behaupten, dass sie ihre Meta-Modelle in SysML erstellt haben
Meta-model-based shop-floor digital twin architecture, modeling and application;;;;;;;;;;;;;;;;;;Operate;;;;;;;;
3D crowdsourced parametric cadastral mapping: Pathways integrating BIM/IFC, crowdsourced data and LADM;No MDE technique used;;;;;;;;;;;;;;;;;;;;;;;;;
Generating Digital Twin Cockpits for Parameter Management in the Engineering of Wind Turbines;;;UML Class Diagram;;Model to Model Transformation;cf. Figure 3;;;;textual;UML Class Diagram;UI Model;;???virtual representation of data from the physical system?? Very generic, no explicit purpose stated;a digital twin of a system consists of a set of models of the system, a set of digital shadows, and provides a set of services to use the data and models purposefully with respect to the original system [Da20].;D ó Electricity, Gas, Steam and Air Conditioning Supply;cooling system of a wind turbine;Implement;;Individual Systems, such as automated cars (Atorf and Roﬂmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;reduce complexity in system design by bridging the gap between high-level requirements and high-detail implementations;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;
Generating Digital Twin Cockpits for Parameter Management in the Engineering of Wind Turbines;;;UI Model;;code generation;cf. Figure 3;;;;;UML Class Diagram;Part of DT UI Cockpit;;;;;;;;;;;;;;
Generating Digital Twin Cockpits for Parameter Management in the Engineering of Wind Turbines;;;;;;;;;;;UI Model;Part of DT UI Cockpit;;;;;;;;;;;;;;
Digital Twin Enables Rational Design of Ultrahigh-Power Lithium-Ion Batteries;No MDE technique used;;;;;;;;;;;;;;;;;;;;;;;;;
A framework for Model-Driven Engineering of resilient software-controlled systems;;;SysML BDD;;Model to Model Transformation;;;;;;SysML BDD;Knowledge Base of software digital twins (Metamodel proposed in Figure 5 of the paper);reuse information created by reliability engineers (sysml) for concrete software implementation;;;;;;;;;;;;;
A framework for Model-Driven Engineering of resilient software-controlled systems;;;Knowledge base model (contribution of the paper;;;;;;;;reliability requirements;executable models of failure modes (as fault trees);reuse information created by reliability engineers (sysml) for concrete software implementation;not specified;not specified;H ó Transportation and Storage;limited traffic zone access control;Plan;mde bridges gap between plan (reliability requirements engineering) and design of the system (definition of software architecture before actual implementation);;As-Designed;formal specification of information in the form of models allows the application of MDE techniques (model transformations);;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;
A framework for Model-Driven Engineering of resilient software-controlled systems;;;fault trees;;;;;;;;;;;;;;;Design;;;;;;;;
Model-Driven Development of a Digital Twin for Injection Molding;;;;;;;;;;;;;;realizes self-adaptation loop based on MAPE (cf. Figure 2);A digital twin of a system consists of a set of models of the system, a set of digital shadows, and provides a set of services to use the data and models purposefully with respect to the original system.;;;;;;;;;;;
The Framework for Designing Autonomous Cyber-Physical Multi-agent Systems for Adaptive Resource Management;;;montiarc, class diagrams, event language, DoE;;code generation;;;;;notation;DT MontiArc architecture, domain, data processor;"Java code for the DTís
logic for data retrieval, communication with the CPPS, evaluation of DSs, and
reaction to these";generate software implementation from textual description/configure predefined architecture using textual description;;;C ó Manufacturing;injection molding machine;Implement;;Individual Systems, such as automated cars (Atorf and Roﬂmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;textual notation that helps domain experts cope with software;All DSLs that we introduced are tailored to support the specification of DTs, but in other domains, different notations might be standard, and therefore, modeling relevant data elements and behaviors might be challenging. So far, no human interaction with the DT is considered. Since domain experts usually have domain knowledge that can help the DT to react appropriately to events, integrating such knowledge at runtime will be future work;"4-5: das Ding l‰uft ""im Labor""";;
The Research of Aero-engine Digital Twin Model Based on Model-driven and Data-driven Fusion Method;No MDE technique used;;;;;;;;;;;;;;;;;;;;;;;;;
Generative and Model-driven SDK development for the Industrie 4.0 Digital Twin;;;AAS, AAS Domain-specific language;;code generation;;;;;;AAS Domain-Specific Model;C#/Java Stubs + Contracts;Generate SDK from AAS specification. SDK can be used to implement DT;reasoning in the virtual space;A digital twin allows us to reason about a physical and/or ideal assets in the virtual (i.e. cyber) space thus providing a necessary foundation for complex and large cyber-physical systems.;;;Implement;;;As-Designed;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;no demonstration or evaluation provided, only description of the prototypical implementation of the proposed concept
Towards a Reference Architecture for Leveraging Model Repositories for Digital Twins;;;UML CD/AD;;model interpretation;;;;;textual;UML model;services that interact with the PT based on the UML models;model as common knowledge base;;a Digital Twin (DT) can be build to act as virtual representation for control, regulation, and adaption, ideally across the entire life-cycle of CPS;;;Operate;;Individual Systems, such as automated cars (Atorf and Roﬂmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Operated;common knowledge base;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;
Digital Twin Operational Platform for Connectivity and Accessibility using Flask Python;No MDE technique used;;;;;;;;;;;;;;;;;;;;;;;;;
Data- and model-driven digital twins for design and logistics control of product distribution;No MDE technique used;;;;;Tool: RobotStudio (ABB proprietary);;;;;;;;;;;;;;;;;;;;
A software engineering point of view on digital twin architecture;No MDE technique used;;;;;;;;;;;;;;;;;;;;;;;;;
Process Prediction with Digital Twins;;;Domain Language, OCL, Tagging Language, Data language, GUI language, Process Language, MontiArc, DS + Process Structure Language;;code generation;;Model-Driven Architecture: ASM: Domain, OCL, Tagging, Data, GUI, Process Model. AIM: MontiArc, Basic DS structure, Basic Process Structure Model;;;;All beforementioned models;DT implementation;automatically derive DT implementation from DSLs;realize self-adaptation based on MAPE pattern;software systems that can actively represent, control, and/or optimize the behavior of an observed (cyber-physical) system. Such a DT of a system consists of a set of models of the system, a set of Digital Shadows (DSs), and provides a set of services to use the data and models purposefully with respect to the original system;C ó Manufacturing;;Implement;injection molding machine;Individual Systems, such as automated cars (Atorf and Roﬂmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Operated;high-level access to software configuraiton for domain experts;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;
AML4DT: A Model-Driven Framework for Developing and Maintaining Digital Twins with AutomationML;;;AML;;Model to Model Transformation;;;;;textual;AML;platform-neutral DT metamodel;reuse information from existing engineering model (AML) for setting up/evolving DTs;;;;;;;;;represent information across asset lifecycle, reuse information based on machine-readable format of models;;;;
AML4DT: A Model-Driven Framework for Developing and Maintaining Digital Twins with AutomationML;;;platform-neutral DT metamodel (contribution of the paper);;Model to Model Transformation;;;;;textual;platform-neutral DT metamodel;DTDL;generate proprietary DTDL model from platform-neutral DT model;;;;;;;;;;;;;
AML4DT: A Model-Driven Framework for Developing and Maintaining Digital Twins with AutomationML;;;DTDL;;model interpretation;;;;this part is not an actual contribution of the paper, but already provided by the Azure DT platform;textual;DTDL;Microsoft Azure DT Service;setup twins in DT service based on DTDL model;interface to running system;dynamic virtual model of a system, processor, or service, with data (e.g., sensor data) from physical systems or processes integrated into it.;N ó Administrative and Support Service Activities;Air Quality Opitmization System;Implement;;Individual Systems, such as automated cars (Atorf and Roﬂmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;reduces complexity through abstraction, enables automation through model-driven engineering;"Further Model-Driven Software Engineering (MDSE) research for DTs. From the MDSE perspective, the realization of such an approach requires (1) the adaption of existing generators such as MontiGem to be able to handle the additional models in different Domain-Specific Languages (DSLs), (2) the integration of further generation steps, (3) to extend the runtime environment of the DT to be able to handle process models at runtime, and (4) to extend the runtime environment of the DT or provide APIs to include process mining services.

Derive DTs from engineering models

Automatically exploiting DT insights. Where digital twins
are in place, they can provide tremendous insights about the
operation of the particular observed system instance. Often,
these insights can be applied to other instances of the same
system type, similar systems, and future versions of these systems. Yet, we are lacking means to automatically exploit these
insights sustainably. Automatically improving the engineering
models of the observed system based on insights produced
by its digital twins could be valuable angle to improve this.

Models at runtime in DTs. From
a computer science perspective, the long-term operation of
digital twins poses further challenges such as how to handle
DS and DS-type evolvement,";1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;
Twin Process Model Driven Machining Quality Optimization for Complex Parts;;;not specified;;model interpretation;;;;;;model containing structural and behavioral (process) information;;;efficiently realizes simulation, monitoring and control of multi scale and physical quantity;an intelligent method to link machining process and process design, which is benefit to the scientific control of machining quality.;C ó Manufacturing;;Operate;integral impeller cutting;Individual Systems, such as automated cars (Atorf and Roﬂmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;represent structural/behavioral information in a machine-readable format;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;
Multisource Model-Driven Digital Twin System of Robotic Assembly;No MDE technique used;;;;;;;;;;;;;;;;;;;;;;;;;
Semantic Interoperability of Digital Twins: Ontology-based Capability Checking in AAS Modeling Framework;;;OWL Ontology + OML Vocabulary;;Model to Model Transformation;;;EMF;additionally, OML is defined according to the OWL Ontology (conformsTo), and AAS models are annotated using the UML Profile;;OML Vocabulary;UML Profile;convert OML Vocabulary into UML Profile that can be applied to AAS models;AAS model, enriched with semantic annotations based on OWL ontology;;C ó Manufacturing;robotic cell (niryo ned for gripping + turtlebot for transportation);Design;;Systems of Systems, such as complete factories (Biesinger et al., 2018), oil wells (Kosenkov et al., 2018), or railway systems (Vatn, 2018).;As-Designed;formal definition that allows reasoning on/interpretation of models, interoperability;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;
Semantic Interoperability of Digital Twins: Ontology-based Capability Checking in AAS Modeling Framework;;;UML Profile;;Model to Model Transformation;;;EMF;;;AAS Model (annotated with UML stereotypes);OWL individuals;;;;;;;;;;;;;;
Semantic Interoperability of Digital Twins: Ontology-based Capability Checking in AAS Modeling Framework;;;AAS;;model interpretation;;;EMF;;;OWL Ontology + OWL Individuals;capability matchmaker;apply SPARQL Queries on Ontology Models, and assess the results within the capability matchmaker (cf. Section 4.B);;;;;;;;;;;;;
Semantic Interoperability of Digital Twins: Ontology-based Capability Checking in AAS Modeling Framework;;;OWL Individuals (instantiated OWL ontology);;model interpretation;;;EMF;;;AAS Model;user interface created by the authors (cf. Section 4.C);integrate AAS models into the overall proces (also involving the two model transformations described above), which is handled by the developed user interface;;;;;;;;;;;;;
A Lightweight Model-driven MES Simulation Framework Based On Probabilistic Finite Automata;No MDE technique used;theroetisch reden sie davon, dass die simulationen konfiguriert werden, bzw. die simulationsdaten interpretiert werden kˆnnenÖaber von einer konkreten Implementierung beschreiben sie nichts;;;;;;;;;;;;;;;;;;;;;;;;
Digital Twin of an Electrical Motor Based on Empirical Performance Model;;;Unity 3D simulation model describing detailed physics of twinned asset;;;;;;;;Unity Model;Simulation Controller;use feedback from simulation in simulation controller;3D simulation model that is updated with live data from the twinned asset;The concept of Digital Twin (DT) is creating and maintaining a digital representation of the real physical entity and supporting its performance through simulation and optimization tools, which are fed with real and updated data.;H ó Transportation and Storage;;Operate;Electrical Motor (phase = operate, because simulation is fed with live data by the simulation controller);Individual Systems, such as automated cars (Atorf and Roﬂmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;simulation;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;
Closed-Loop Systems Engineering (CLOSE): Integrating Experimentable Digital Twins with the Model-Driven Engineering Process;No MDE technique used;paper proposes a process how humans develop systems based on experimental DTs;;;;;;;;;;;;;;;;;;;;;;;;
Research on Modeling Method of System Reliability Digital Twin;No MDE technique used;architecture figure would imply model interpretation by an optimization service, but there is no further information on this in the paper;;;;;;;;;;;;;;;;;;;;;;;;
Improved Electric Vehicle Digital Twin Performance Incorporating Detailed Lithium-ion Battery Model;No MDE technique used;this paper is a 5-pager, consisting of 80 % figures;;;;;;;;;;;;;;;;;;;;;;;;
Workshop Management and Control System Based on Digital Twin;No MDE technique used;;;;;;;;;;;;;;;;;;;;;;;;;
Using UML and OCL Models to Realize High-Level Digital Twins;;;UML (class diagrams);;model interpretation;;;USE;;textual;UML class diagram;uml cd adapter that interprets CD and adapts a data lake accordingly (data lake stores data from the PT);configure data lake that stores PT data based on UML CD;"DT = UML class diagram; configures data lake that stores data from PT, which should be used by different services";comprehensive digital representation of an actual system, service or product (the Physical Twin, PT), synchronized at a specified frequency and fidelity;H ó Transportation and Storage;lego mindstorms car;Operate;;Individual Systems, such as automated cars (Atorf and Roﬂmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;
Interface Development for Digital Twin of an Electric Motor Based on Empirical Performance Model;;this is the jornal extension of Digital Twin of an Electrical Motor Based on Empirical Performance Model, extracted data is for me the same than in the conference paper. Also: shall we count IEEE Access as non-peer-reviewed/predatory?;;;;;;;;;;;;;;;;;;;;;;;;
A Model-Driven Approach for Situational Intelligence & Operational Awareness;No MDE technique used;it is described that power models should be interpreted by data management/scada solutions, but no specifics of how this is done are given, so it seems that there is no actual implementation, but the existing implementation rather relies on hard-coded services that are tied to the specific model used;;;;;;;;;;;;;;;;;;;;;;;;
Knowledge driven rapid development of white box digital twins for industrial plant systems;;;SADL ontology;;Model to Model Transformation;;;;;textual;SADL ontology;M&CML control systems model;Translating knowledge to a control system model enables a validation mechanism for the captured domain knowledge against the control systems domain and vocabulary. Any gap or inconsistency in the translated control system model implies gaps in the knowledge source that needs to get updated accordingly;Ts enable a virtual sand-box environment simulating the behaviour of a plant to perform analyses and predictions.;the stated purpose could also be seen as a definition;;;;;;;;;;;
Knowledge driven rapid development of white box digital twins for industrial plant systems;;;M&CML control systems model;;Model to Model Transformation;;;;;;M&CML;fininte state machine;make control systems model executable;;;D ó Electricity, Gas, Steam and Air Conditioning Supply;power plant;Operate;;Individual Systems, such as automated cars (Atorf and Roﬂmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;
Knowledge driven rapid development of white box digital twins for industrial plant systems;;;finite state machines, represented in SCXML;;;;;;;graphical;;;;;;;;;;;;;;;;
Interface Management with Closed-Loop Systems Engineering (CLOSE);No MDE technique used;;;;;;;;;;;;;;;;;;;;;;;;;
Towards a Digital Twin for Cyber-Physical Production Systems: A Multi-Paradigm Modeling Approach in the Postal Industry;;;BPMN;;Model to Model Transformation;;;;;graphical;BPMN Model;Activity Diagram;convert BPMN Model into an executable AD;;;Transportation;;Design;sorting robot of a postal center;;As-Designed;;;1-3;;
Towards a Digital Twin for Cyber-Physical Production Systems: A Multi-Paradigm Modeling Approach in the Postal Industry;;;UML Activity Diagrams;;Model to Model Transformation;;;;;graphical;Activity Diagram;Class Diagram;extract structural information from AD;;;;;;;;;;;;;
Towards a Digital Twin for Cyber-Physical Production Systems: A Multi-Paradigm Modeling Approach in the Postal Industry;;;UML Class Diagrams;;Model to Model Transformation;;;;;graphical;;;;;;;;;;;;;;;;
Towards a Digital Twin for Cyber-Physical Production Systems: A Multi-Paradigm Modeling Approach in the Postal Industry;;;FlexSim 3D model;;;;;;;;;;;;;;;;;;;;;;;
Model-driven engineering city spaces via bidirectional model transformations;;;City GML 3D city model;;bi-directional Model to Model Transformation;;;;;textual;CityGML model;Cyber-Physical Spaces model;synchronization between DT (CP Spaces model) and the information from the actual city (CityGML model);cyber-physical spaces model upon which formal reasoning can be performed;a virtual model of a city;;smart city;operate;;system-of-systems;as-designed/as-operated;;;1-3;;
Model-driven engineering city spaces via bidirectional model transformations;;;cyber-physical spaces;;;;;;;;;;;;;;;;;;;;;;;
Towards Reactive Planning with Digital Twins and Model-Driven Optimization;;;Henshin Models;;Model interpretation;;;EMF;;graphical;Henshin model;Digital Twin;;provide an interface to both simulation and PT;Kritzinger;manufacturing;;operation;;system-of-systems;as-designed, as-operated;;;1-3;;
Towards a Model-Driven Architecture for Interactive Digital Twin Cockpits;;;MontiGem;;code generation;;;MontiCore;;;MontiGem;Data Lake;automation;;A digital twin of a system consists of a set of models of the system, a set of digital shadows and their aggregation and abstraction collected from a system, and a set of services that allow using the data and models purposefully with respect to the original system;manufacturing;injection molding machine;implement;;individual system;as-designed;;;1-3;;
Towards a Model-Driven Architecture for Interactive Digital Twin Cockpits;;;;class diagrams, gui models;;;;;;;class diagrams + gui models;DT cockpits;automation;;;;;;;;;;;;;
Towards a Model-Driven Architecture for Interactive Digital Twin Cockpits;;;;montiarc models;;;;;;;montiarc models;system architecture;automation;;;;;;;;;;;;;
Enabling Semantic Interoperability of Asset Administration Shells through an Ontology-Based Modeling Method;;;"same data as ""Semantic Interoperability of Digital Twins: Ontology-based Capability Checking in AAS Modeling Framework"" - just more implementation details??";;;;;;;;;;;;;;;;;;;;;;;
Integration of SysML Models in a 3D Environment for Virtual Testing and Validation;;;"SysML (Block Definition
Diagram, Internal Block Diagram, Requirements Diagram and a
State Machine Diagram)";;Model to Model Transformation;;;;;;sysml model;unity model;""" comprehend and understand the complexity of the models.""";;a digital 3D - CAD replica of a living or non-living physical entity, allowing to replicate the same behavior as that of the actual component.;;;design;;system-of-systems;as-designed;;;1-3;;
;;;3D Model Unity;;;;;;;;;;;;;;;;;;;;;;;
