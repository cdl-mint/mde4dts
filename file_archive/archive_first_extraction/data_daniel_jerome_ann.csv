;Title;DT Definition;modeling language;model type;notation;MDE technique;direction;source;target;purpose;domain;system lifecycle phase;twinning target;twin lifecycle phase;purpose /expected benefit of using models;open challenges;TEchnological REadiness Level;notes;Reviewer;Reason;Notes;model processing technique;Spalte3;model usage technique;Modeling Tool;Notes.1;purpose of MDE application;purpose of DT;DT definition;Spalte1;Spalte4;Spalte2;notes3;purpose of MDE technique;Unnamed: 18
0;Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;"A digital twin (DT) of a system consists of a set of models
 of the system, a set of contextual data traces and/or their aggregation and abstraction collected from a system, and a set
 of services that allow using the data and models purposefully
 with respects to the original system.";CD;structure;;Model to Model Transformation;unidirectional;CD/MontiArc;CPS/DTIS;Integration of CPS and Information Systems;J  Information and Communication;Design;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;;;;;Jingxi;;;;;;;;;;;;;;;;
1;Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;;MontiArc;structure;;code generation;;CD/MontiArc;CPS/DTIS;Integration of CPS and Information Systems;J  Information and Communication;Implement;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;;;;;Jingxi;;;;;;;;;;;;;;;;
2;Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;;UML/P;structure;;;;;;;J  Information and Communication;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Operated;;;;;Jingxi;;;;;;;;;;;;;;;;
3;Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;;OCL;structure;;;;;;;J  Information and Communication;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Operated;;;;;Jingxi;;;;;;;;;;;;;;;;
4;Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;;MontiGem;structure;;;;;;;J  Information and Communication;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Operated;;;;;Jingxi;;;;;;;;;;;;;;;;
5;A Novel Methodology to Construct Digital Twin Models for Spacecraft Operations Using Fault and Behaviour Trees;"A Digital Twin (DT) is a virtual representation of a physical
product, asset, process, system, or service that allows us to understand, predict, and optimise their performance for better business
outcomes [17]. ";;structure;;Model to Model Transformation;unidirectional;Fault Trees;Operationds-Dedicated Models;;M  Professional, Scientific and Technical Activities;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jingxi;;;;;;;;;;;;;;;;
6;Understanding and Improving Model-Driven IoT Systems through Accompanying Digital Twins;;MontiArc;structure;;Model to Model Transformation;unidirectional;ADL;CPS;Integration of CPS and Information Systems;J  Information and Communication;Design;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;;;;;Jingxi;;;;;;;;;;;;;;;;
7;Understanding and Improving Model-Driven IoT Systems through Accompanying Digital Twins;;MontiThings ADL;structure;;Model to Model Transformation;unidirectional;ADL;CPS;Integration of CPS and Information Systems;J  Information and Communication;Implement;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;;;;;Jingxi;;;;;;;;;;;;;;;;
8;CPSAML: A Language and Code Generation Framework for Digital Twin Based Monitoring of Mobile Cyber-Physical Systems;;SYSML 2;structure;;Model to Model Transformation;unidirectional;SYSML 2;Xtend, Java, Typescript, Python, Dockerfile;Integration of CPS and Information Systems;J  Information and Communication;Design;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;;;;;Jingxi;;;;;;;;;;;;;;;;
9;CPSAML: A Language and Code Generation Framework for Digital Twin Based Monitoring of Mobile Cyber-Physical Systems;;ROS;structure;;;;;;;;;;;;;;;Jingxi;;;;;;;;;;;;;;;;
10;On the Engineering of IoT-Intensive Digital Twin Software Systems;"DTs are complex entities whose design, development and maintenance demand the integration of diverse disciplines to ensure
the construction of precise digital representations of conceptual or
physical entities and their associated phenomena.";GEMINIS;structure;;model interpretation;;metamodels? structural graph-based DTP models;;;;;;;;;;;Jingxi;;;;;;;;;;;;;;;;
11;On the Engineering of IoT-Intensive Digital Twin Software Systems;"DTs are complex entities whose design, development and maintenance demand the integration of diverse disciplines to ensure
the construction of precise digital representations of conceptual or
physical entities and their associated phenomena.";GEMINIS;behavior;;model interpretation;;DTP and DTI behaviour models;;;;Design;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jingxi;;;;;;;;;;;;;;;;
12;A Flexible and Modular Architecture for Edge Digital Twin: Implementation and Evaluation;"Digital Twin (DT) originally introduced between 1999 and 2002 [75]. A DT
provides a virtual copy of a physical object mirroring all its sensors, actuators, data, and behaviours in real-time through an efficient bidirectional communication. DTs enable device simulation, analytic, and intelligent functionalities augmenting the features associated with the original physical
device. ";;;;;;;;;;;;;;;;DT Concept but no MDE directly extractable;Jingxi;;;;;;;;;;;;;;;;
13;Enabling Semantic Interoperability of Asset Administration Shells through an Ontology-Based Modeling Method;"The purpose of the digital twin technology [3] is to simulate the
operation of equipments with the best mathematical and behavioral models.";MaRCO, OML, AAS-UML;structure;;Model to Model Transformation;unidirectional;OML;AAS Model;;J  Information and Communication;Design;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;;;;;Jingxi;;;;;;;;;;;;;;;;
14;Challenges and Possible Approaches for Sustainable Digital Twinning;;;;;;;;;;;;;;;;;;Jingxi;;;;;;;;;;;;;;;;
15;Coordination and Explanation of Reconfigurations in Self-Adaptive High-Performance Systems;;;;;;;;;;;;;;;;;;Jingxi;;;;;;;;;;;;;;;;
16;Case Study on Automated and Continuous Reliability Assessment of Software-Defined Manufacturing Based on Digital Twins;;;;;;;;;;;;;;;;;;Jingxi;;;;;;;;;;;;;;;;
17;Integration of SysML Models in a 3D Environment for Virtual Testing and Validation;"A Digital Twin is
a digital 3D - CAD replica of a living or non-living physical entity, allowing to replicate the same behavior as that of the actual
component";SYSML;structure;;Model to Model Transformation;unidirectional;SYSML;Unity GameObject;3D Visualization of SYSML model;J  Information and Communication;Design;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;;"To address the complexity of systems, it is necessary to ensure that knowledge is
transferred properly between projects, teams, and engineers.";"However, more research and development are needed to improve the 3D representation of the SysML
model. In future work, the steps presented in the aforementioned
timeline will be implemented.";1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jingxi;;;;;;;;;;;;;;;;
18;Semantic digital twins for organizational development;"A DT is, in its common definition, the virtual replica of an asset or physical entity
[7,10,11]. However, this definition is today being extended to other new areas: from
digital representations of physical objects to digital representations of whole organizations [10] or digital replications of living and nonliving entities [11].";;;;;;;;;;;;;;;;;Jingxi;;;;;;;;;;;;;;;;
19;"A pattern catalog for augmenting Digital Twin models with behavior; [Ein Musterkatalog zur Erweiterung von digitalen Zwillingsmodellen um Verhaltenssichten]";"DTs are software systems comprising data, models, and
services to interact with physical systems for a specific
purpose [2, 14, 15].";;;;;;;;;;;;;;;;3D Printer example is it derived from a model? Is it implemented?;Jingxi;;;;;;;;;;;;;;;;
20;Ensuring consistency in scalable-detail models for DT-based control;;;;;;;;;;;;;;;;;Mentioned all possible DT definitions... Uses none;Jingxi;;;;;;;;;;;;;;;;
21;The OMiLAB Digital Innovation environment: Agile conceptual models to bridge business value with Digital and Physical Twins for Product-Service Systems development;;;;;;;;;;;;;;;;;;Jingxi;;;;;;;;;;;;;;;;
22;Digital twin enhanced human-machine interaction in product lifecycle;;;;;;;;;;;;;;;;;;Jingxi;;;;;;;;;;;;;;;;
23;A Digital Twin Model-Driven Architecture for Cyber-Physical and Human Systems;;;;;;;;;;;;;;;;;;Jingxi;;;;;;;;;;;;;;;;
24;Model-driven engineering city spaces via bidirectional model transformations;"In the
realm of smart cities, a digital twin is a virtual model of a
citya model representation of the physical world";CityGML/Application Domain Extension;structure;;Model to Model Transformation;bidirectional;CityGML;topologial 3D model;;F  Construction;Plan;Processes, e.g., business processes (Rambow-Hoeschele et al., 2018), medical processes (Karakra et al., 2018), or recycling processes (Popa et al., 2018).;As-Designed;"guarantees that synchronization between models is
consistent and well behaved";"investigate pluggable custom application policies and support arbitrary
CityGML features. generalization of synchronization to a many-to-one model; being able to support multi-model sources might
enable support of a wider range of applications dealing with
wide area services.";"4-5: das Ding läuft ""im Labor""";Topocity;Jingxi;;;;;;;;;;;;;;;;
25;A New 5S Radar Structure Design Model Driven by Digital Twin;", this paper considers that Digital
Twin is a multi-disciplinary, multi-physical-quantity, multi-time-scale, multi-probability
simulation model in combination of historical data and real-time data, and creates allelement digital reconstruction and mapping of physical entities in virtual space, which is
used to simulate, monitor, diagnose, predict and control the formation, state and behavior of physical entities in the whole lifecycle. It features bi-lateral mapping, dynamic
physical-virtual interaction, high fidelity, model scalability etc";;;;;;;;;;;;;;;;;Jingxi;;;;;;;;;;;;;;;;
26;Towards Reactive Planning with Digital Twins and Model-Driven Optimization;"As mentioned before, DTs enable a bi-directional data flow between a physical system
and its virtual representation [24], requiring different software components to enable
this communication [33].";EMF, Henshin;structure;;model interpretation;;Meta-model, Transformation Rules;;"mitigate runtime deviations
compared to naive repair; quality/execution time of replanning solutions change;  difference with respect to execution time between calculating the new
plan in parallel to running the system;  ";J  Information and Communication;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Operated;;"additional scenarios have to be explored to further validate the different replanning strategies and integration with running systems; , learning-based methods seem beneficial to
be integrated in our framework to reach predictive planning";1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;MOMoT;Jingxi;;;;;;;;;;;;;;;;
27;Model-Driven Engineering in Digital Thread Platforms: A Practical Use Case and Future Challenges;;;;;;;;;;;;;;;;;;Jingxi;;;;;;;;;;;;;;;;
28;Performance Evaluation: Model-Driven or Problem-Driven?;"a digital twin is a virtual (digital) representation that
serves as the real-time digital counterpart of a physical object or process (definition
fromWikipedia)";;;;;;;;;;;;;;;;;Jingxi;;;;;;;;;;;;;;;;
29;Towards Development Platforms for Digital Twins: A Model-Driven Low-Code Approach;"Digital Twins are software systems comprising data, models, and services to
interact with a CPPS for a specific purpose";"CDs; data models; OCL";structure;;Model to Model Transformation;unidirectional;DT Models: CDs;digital twin code;"facilitates researchers and practitioners in manufacturing in creating LCDPs
integrated with Digital Twins and domain-specific modeling languages for the
particular production challenges at hand";J  Information and Communication;Design;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jingxi;;;;;;;;;;;;;;;;
30;Applying a Healthcare Web of Things Framework for Infertility Treatments;;;;;;;;;;;;;;;;;;Jingxi;;;;;;;;;;;;;;;;
31;Towards a Model-Driven Architecture for Interactive Digital Twin Cockpits;"DTs are often described as a digital duplicate of a physical entity [9], enabling its management and control [8] or
supporting design and production decisions, and thus speeding up the development process. ";MontiArc, MontiGem, CD, OCL, tagging, GUI-DSL models;structure;;code generation;;CD, OCL, tagging, GUI-DSL models;UI;". This facilitates
creating, deploying, and monitoring interactive DTs that can provide real-time
information about machine states and the operating context, feature role-specific
views with aggregated data and adapt to changes in the underlying models";J  Information and Communication;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Operated;"This facilitates
creating, deploying, and monitoring interactive DTs that can provide real-time
information about machine states and the operating context, feature role-specific
views with aggregated data and adapt to changes in the underlying models. This
fosters their successful application in smart manufacturing to optimize processes
and making better use of production equipment.
";"we still need to evaluate our reference architecture
and the DSLs in a greater variety of contexts.";1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jingxi;;;;;;;;;;;;;;;;
32;Dynamic design method of digital twin process model driven by knowledge-evolution machining features;;;;;;;;;;;;;;;;;DT used for monitoring;Jingxi;;;;;;;;;;;;;;;;
33;The Research of Aero-engine Digital Twin Model Based on Model-driven and Data-driven Fusion Method;;;;;;;;;;;;;;;;;Math tranformations but nothing on model;Jingxi;;;;;;;;;;;;;;;;
34;Generative and Model-driven SDK development for the Industrie 4.0 Digital Twin;;AAS metamodel;structure;;code generation;;data structures, operations,contracts, de/serialization scripts, uni test scripts;GPL;SDK;J  Information and Communication;Implement;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;;further GPL, build parsers;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jingxi;;;;;;;;;;;;;;;;
35;Towards a Reference Architecture for Leveraging Model Repositories for Digital Twins;;;;;;;;;;;;;;;;;;Jingxi;;;;;;;;;;;;;;;;
36;Digital Twin Operational Platform for Connectivity and Accessibility using Flask Python;;;;;;;;;;;;;;;;;;Jingxi;;;;;;;;;;;;;;;;
37;Data- and model-driven digital twins for design and logistics control of product distribution;"The digital twin is
defined as an extended virtual model in time, space and
context of a physical asset (process, pallet, system) or nonphysical entity (control setting, schedule, assignment), that is
persistent even if its counterpart is not always connected /
online";;;;;;;;;;;;;;;;;Jingxi;;;;;;;;;;;;;;;;
38;A software engineering point of view on digital twin architecture;;;;;;;;;;;;;;;;;;Jingxi;;;;;;;;;;;;;;;;
39;Process Prediction with Digital Twins;;OCL;structure;;code generation;;CD, OCL, Tagging, Data models, GUI models, Process models;GPL;generative DT;J  Information and Communication;Implement;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;"overcome the challenges
of bi-directional synchronization between digital twins and
their actual systems";;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jingxi;;;;;;;;;;;;;;;;
40;AML4DT: A Model-Driven Framework for Developing and Maintaining Digital Twins with AutomationML;;CAEX, AML, AML-MM, DT-MM;structure;;Model to Model Transformation;;AML;DT;;J  Information and Communication;Implement;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jingxi;;;;;;;;;;;;;;;;
41;AML4DT: A Model-Driven Framework for Developing and Maintaining Digital Twins with AutomationML;;ATL;structure;;model interpretation;;DT;AzureDT;;N  Administrative and Support Service Activities;Implement;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Operated;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jingxi;;;;;;;;;;;;;;;;
42;Twin Process Model Driven Machining Quality Optimization for Complex Parts;"Digital twin is an efficient method to realize simulation,
monitoring and control of multi scale and physical quantity.";;structure;;model interpretation;;Twin Process Model;NC Code;Optimize;F  Construction;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Operated;;could supply abilities including self-updating, selfevolution for intelligent manufacturing cell;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jingxi;;;;;;;;;;;;;;;;
43;Multisource Model-Driven Digital Twin System of Robotic Assembly;;;;;;;;;;;;;;;;;;Jingxi;;;;;;;;;;;;;;;;
44;Semantic Interoperability of Digital Twins: Ontology-based Capability Checking in AAS Modeling Framework;;OWL;structure;;Model to Model Transformation;;OWL;OML;;C  Manufacturing;Design;Systems of Systems, such as complete factories (Biesinger et al., 2018), oil wells (Kosenkov et al., 2018), or railway systems (Vatn, 2018).;As-Designed;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jingxi;;;;;;;;;;;;;;;;
45;Semantic Interoperability of Digital Twins: Ontology-based Capability Checking in AAS Modeling Framework;;OML;structure;;Model to Model Transformation;;OML;UML;;C  Manufacturing;Design;Systems of Systems, such as complete factories (Biesinger et al., 2018), oil wells (Kosenkov et al., 2018), or railway systems (Vatn, 2018).;As-Designed;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jingxi;;;;;;;;;;;;;;;;
46;Semantic Interoperability of Digital Twins: Ontology-based Capability Checking in AAS Modeling Framework;;UML;structure;;model interpretation;;UML;AAS;;C  Manufacturing;Design;Systems of Systems, such as complete factories (Biesinger et al., 2018), oil wells (Kosenkov et al., 2018), or railway systems (Vatn, 2018).;As-Designed;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jingxi;;;;;;;;;;;;;;;;
47;Semantic Interoperability of Digital Twins: Ontology-based Capability Checking in AAS Modeling Framework;;AAS;structure;;model interpretation;;AAS;OWL Ontology;;C  Manufacturing;Design;Systems of Systems, such as complete factories (Biesinger et al., 2018), oil wells (Kosenkov et al., 2018), or railway systems (Vatn, 2018).;As-Designed;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jingxi;;;;;;;;;;;;;;;;
48;A Lightweight Model-driven MES Simulation Framework Based On Probabilistic Finite Automata;;XML;structure;;;;XML as PFA;?;;J  Information and Communication;Design;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;models unknown, purpose unclear;Jingxi;;;;;;;;;;;;;;;;
49;Digital Twin of an Electrical Motor Based on Empirical Performance Model;"The concept of Digital Twin (DT) is creating and
maintaining a digital representation of the real physical entity
and supporting its performance through simulation and
optimization tools, which are fed with real and updated data";Unity 3D, ROS, ;behavior;;model interpretation;;physical measurements;DT Model Update;"provide a brand-new approach
for measurement and estimation of the performance of
motor-drive systems. ";H  Transportation and Storage;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Operated;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jingxi;;;;;;;;;;;;;;;;
50;Closed-Loop Systems Engineering (CLOSE): Integrating Experimentable Digital Twins with the Model-Driven Engineering Process;;;;;;;;;;;;;;;;;;Jingxi;;;;;;;;;;;;;;;;
51;Research on Modeling Method of System Reliability Digital Twin;;;;;;;;;;;;;;;;;;Jingxi;;;;;;;;;;;;;;;;
52;Improved Electric Vehicle Digital Twin Performance Incorporating Detailed Lithium-ion Battery Model;;;;;;;;;;;;;;;;;WTF...;Jingxi;;;;;;;;;;;;;;;;
53;Workshop Management and Control System Based on Digital Twin;;;;;;;;;;;;;;;;;;Jingxi;;;;;;;;;;;;;;;;
54;Using UML and OCL Models to Realize High-Level Digital Twins;"A Digital Twin (DT) is a comprehensive digital representation of an actual system, service or product (the Physical Twin,
PT), synchronized at a specified frequency and fidelity [19].
The digital twin includes the properties, condition and behavior of the physical entity through models and data, and
is continuously updated with real-time system data about the
PT performance, maintenance, and health status throughout its
entire lifetime [4], [6], [20]. The exchange of data between
the digital and the physical twins takes place through bidirectional data connections. This is why many authors have
argued that a DT system contains three dimensions: physical,
digital, and the connections between them [1].";UML/OCL;structure;;model interpretation;;USE;DL;;H  Transportation and Storage;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jingxi;;;;;;;;;;;;;;;;
55;Using UML and OCL Models to Realize High-Level Digital Twins;;SOIL;behavior;;;;;;;;;;;;;;;Jingxi;;;;;;;;;;;;;;;;
56;Interface Development for Digital Twin of an Electric Motor Based on Empirical Performance Model;;;;;;;;;;;;;;;;;"Extension of ""Digital Twin of an Electrical Motor Based on Empirical Performance Model"", this time no models mentioned, focus on ROS and MQTT connection";Jingxi;;;;;;;;;;;;;;;;
57;A Model-Driven Approach for Situational Intelligence & Operational Awareness;;;;;;;;;;;;;;;;;transformation of electrical something to WHAT? might be something secret;Jingxi;;;;;;;;;;;;;;;;
58;Knowledge driven rapid development of white box digital twins for industrial plant systems;;"Control Natural Language (CNL); Meta-Model; M&CML; FSM";structure;;Model to Model Transformation;;Semantic Application Design Language(SADL) as frontend for OWL;control systems model then finiteState Mmachine model-based DT;;D  Electricity, Gas, Steam and Air Conditioning Supply;Operate;Systems of Systems, such as complete factories (Biesinger et al., 2018), oil wells (Kosenkov et al., 2018), or railway systems (Vatn, 2018).;As-Designed;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jingxi;;;;;;;;;;;;;;;;
0;Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;;class diagram;structure;;;;tagging model, Class Diagram, MontiArc Model;extended MontiArc Model;;I  Accommodation and Food Service Activities;Implement;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;;;;;Daniel;;;Model to Model Transformation;;;;;extend CPS and DTIS by the necessary communication and synchronization infrastructure;;DTs are digital representations of cyber-physical assets or processes that enable advanced control, decision making, and optimization. They are used in a variety of domains, including avionics, automotive, and smart manufacturing;UTOMATIC FIRE EXTINGUISHING SYSTEM;;;;;
1;Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;;montiarc;;;;;MontiArc model;GPL code for CPS;;;;;;;;;;Daniel;;;code generation;;;;;generate CPS code;;;;;;;;
2;Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;;tagging model;NOTE-DL: hier brauchen wir noch eine klare Abtrennung;;;;class diagram;digital twin information system;;;;;;;;;;Daniel;;;code generation;;;;;generate DT;;;;;;;;
3;Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;;GUI DSL;structure;;;;;;;;;;;;;;;Daniel;;;;;;;;;;;;;;;;
4;Measuring the Fidelity of Digital Twin Systems;;;;;;;;;;;;;;;;;;Daniel;Challenge/Position Paper;;;;;;;;;;;;;;;
5;Digital Twin as Risk-Free Experimentation Aid for Techno-Socio-Economic Systems;;;;;;;;;;;;;;;;;;Daniel;No MDE technique used;only the data generated by the simulation (which uses a model) is further used by the RL algorithm;model interpretation;;;;cf. Figure 6;;;;;;;;;
6;Using Trace Alignments for Measuring the Similarity between a Physical and Its Digital Twin;;snapshot model;;;;;snapshot model;trace alignment algorithm;;;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Operated;;;;;Daniel;;;model interpretation;;;;;perform trace alignment on snapshots of DT and PT;;A Digital Twin (DT) is a digital representation of an actual system, service or product (the Physical Twin (PT)), synchronized at a specified frequency and fidelity;lego mindstorms car;;;;;
7;Towards a Digital Twin for Cyber-Physical Production Systems: A Multi-Paradigm Modeling Approach in the Postal Industry;;;;;;;;;;;;;;;;;;Daniel;No MDE technique used;different behavioral models are described for a particular use case, but no MDE technique is applied on these models;;;;;;;;;;;;;;
8;A Novel Methodology to Construct Digital Twin Models for Spacecraft Operations Using Fault and Behaviour Trees;;n.d,;;;;;DT model;UI-based monitoring tools;;H  Transportation and Storage;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Operated;;;;;Daniel;;;model interpretation;;;;;visualize DT model (data from the running system) for human decision making;;"A Digital Twin (DT) is a virtual representation of a physical
product, asset, process, system, or service that allows us to understand, predict, and optimise their performance for better business
outcomes";ground station of a spacecraft;;;;;
9;Understanding and Improving Model-Driven IoT Systems through Accompanying Digital Twins;;MontiThings;;;;;MontiThings model;IoT controller code in C++;;;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Operated;;;;;Daniel;;;code generation;;;;;generate code that runs on an IoT system;;Digital twins (DTs) are digital representations of cyber-physical systems. They monitor systems to offer services to analyze, control, and optimize the system. Alas, there is no commonly agreed on definition of DTs;smart lawn watering system;;;The DT collects data from the generated IoT code, reproduces the data traces, adapts the input models accordingly, and re-generates the new software based on the adapted models;;
10;CPSAML: A Language and Code Generation Framework for Digital Twin Based Monitoring of Mobile Cyber-Physical Systems;;CPSAML (paper contribution);;textual;;;CPSAML;SysML (partial model);;I  Accommodation and Food Service Activities;Design;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;basis for code generation, allows different levels of abstractions for different users (system architect/system engineer, VS software developer that works on the generated code);;"4-5: das Ding läuft ""im Labor""";;Daniel;;;code generation;;;;used xtend script, but actually, it's model to model;transform System Architect vision (CPSAML) into starting point for System Engineer (partial SysML model);"aggregates data from CPS into a ""single system snapchot""";middleware between CPS and a monitoring cockpit;Roomba floor cleaning robot;;;github repository: https://github.com/me-big-tuwien-ac-at/cpsaml;;
11;CPSAML: A Language and Code Generation Framework for Digital Twin Based Monitoring of Mobile Cyber-Physical Systems;;SysML v2;;textual;;;SysML (complete model);CPS software code (ROS Packages, DT, Monitoring Cockpit);;;Implement;;As-Designed;;;;;Daniel;;;code generation;;;;;generate software infrastructure from sysml models (structural and behavioral);;;;;;;;
12;On the Engineering of IoT-Intensive Digital Twin Software Systems;;n.d.;structure;;;;structural model of the PT;Model Synchronizer + Model Manager component;;;;;;;;;;Daniel;;No Implementation, only high-level proposal;model interpretation;;;;;;;;;;;very high-level concept, no application to a particular example/domain, no example models given;;
13;On the Engineering of IoT-Intensive Digital Twin Software Systems;;n.d.;behavior;;;;behavioral model of the PT;Model Synchronizer + Model Manager component;;;Design;;As-Designed;;;;;Daniel;;No Implementation, only high-level proposal;model interpretation;;;;;;;;;;;very high-level concept, no application to a particular example/domain, no example models given;;
14;A Flexible and Modular Architecture for Edge Digital Twin: Implementation and Evaluation;;;;;;;;;;;;;;;;;;Daniel;No Model used;;;;;;;;;;;;;;;
15;Semantic digital twins for organizational development;;;;;;;;;;;;;;;;;;Daniel;No implementation (e.g. Challenge/Position Paper);;;;;;;;;;;;;;;
16;"A pattern catalog for augmenting Digital Twin models with behavior; [Ein Musterkatalog zur Erweiterung von digitalen Zwillingsmodellen um Verhaltenssichten]";;;;;;;;;;;;;;;;;;Daniel;;;;;;;;;;;;;;;;
17;Ensuring consistency in scalable-detail models for DT-based control;;;;;;;;;;;;;;;;;;Daniel;No MDE technique used;focus is on consistency between different models (structural and behavioral);;;;;;;;;;;;;;
18;The OMiLAB Digital Innovation environment: Agile conceptual models to bridge business value with Digital and Physical Twins for Product-Service Systems development;;;;;;;;;;;;;;;;;;Daniel;;;;;;;;;;;;;;;;
19;Digital twin enhanced human-machine interaction in product lifecycle;;;;;;;;;;;;;;;;;;Daniel;No MDE technique used;;;;;;;;;;;;;;;
20;Modular Fault Ascription and Corrective Maintenance Using a Digital Twin;;;;;;;;;;;;;;;;;;Daniel;No MDE technique used;;;;;;;;;;;;;;;
21;Generating customized low-code development platforms for digital twins;;MontiArc;;textual;;;MontiArc-Model describing Software + Monti-Arc Model describing DSLs;Digital Twin Implementation;;C  Manufacturing;Implement;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;easily integrate different implementations (monti arc as definition of common interfaces);account for future variability;"4-5: das Ding läuft ""im Labor""";;Daniel;;;code generation;;Model-Driven Architecture?;;;Generate DT architecture implementation from DT plugins (combine software + language components);realize self-adaptation loop for CPS;"a digital twin is ""a set of models of the system, a set of digital shadows and their aggregation and abstraction collected from a system, and a set of services that allow using the data and models purposefully with respect to the original system""";injection molding machine;;;;;
22;Generating customized low-code development platforms for digital twins;;;;low-code interface;;;Service configuration models (written in DSLs specified together with the service definition in montiarc);Digital Twin Implementation;;;Operate;;As-Operated;configurability: easily configure 1 implementation for different CPSs;"LCDP should also support ""collaborative development""";;;Daniel;;;model interpretation;;;;;configure existing DT architecture;;;;;;;;
23;A data-model fusion dispatch strategy for the building energy flexibility based on the digital twin;;;;;;;;;;;;;;;;;;Daniel;No MDE technique used;;;;;;;;;;;;;;;
24;Meta-model-based shop-floor digital twin architecture, modeling and application;;SysML (meta-model, I assume they mean BDD/structural representation);;;;;raw data;SysML;;C  Manufacturing;Design;Systems of Systems, such as complete factories (Biesinger et al., 2018), oil wells (Kosenkov et al., 2018), or railway systems (Vatn, 2018).;As-Designed;;;"4-5: das Ding läuft ""im Labor""";;Daniel;;;model interpretation;;traceability;;;align data from CPS with SysML model;Provide Self-Adapation/Optimization based on (i) data from PT, (ii) operations offered by the PT;"the Shop-floor Digital Twin (SDT), as the digital counterpart of physical entities including the humans, machines, material, methods and environments in the existing shop-floor, mirrors the physical shop-floor behavior and performance in the virtual space. The digital counterpart is comprised of a series of semantic digital models and simulation models of the physical shop-floor and has the automatic data synchronization between the physical and virtual space. By establishing the automatic data flow between the physical shop-floor and digital counterpart, the semantic digital models and simulation 
models could be converted to digital shadow and further evolved into SDT.";shopfloor;;;Das Papier gehört imho gepunished dafür, dass sie behaupten, dass sie ihre Meta-Modelle in SysML erstellt haben;;
25;Meta-model-based shop-floor digital twin architecture, modeling and application;;;;;;;;;;;Operate;;;;;;;Daniel;;;;;;;;;;;;;;;;
26;3D crowdsourced parametric cadastral mapping: Pathways integrating BIM/IFC, crowdsourced data and LADM;;;;;;;;;;;;;;;;;;Daniel;No MDE technique used;;;;;;;;;;;;;;;
27;Generating Digital Twin Cockpits for Parameter Management in the Engineering of Wind Turbines;;UML Class Diagram;;textual;;;UML Class Diagram;UI Model;;D  Electricity, Gas, Steam and Air Conditioning Supply;Implement;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;reduce complexity in system design by bridging the gap between high-level requirements and high-detail implementations;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Daniel;;;Model to Model Transformation;cf. Figure 3;;;;;???virtual representation of data from the physical system?? Very generic, no explicit purpose stated;a digital twin of a system consists of a set of models of the system, a set of digital shadows, and provides a set of services to use the data and models purposefully with respect to the original system [Da20].;cooling system of a wind turbine;;;;;
28;Generating Digital Twin Cockpits for Parameter Management in the Engineering of Wind Turbines;;UI Model;;;;;UML Class Diagram;Part of DT UI Cockpit;;;;;;;;;;Daniel;;;code generation;cf. Figure 3;;;;;;;;;;;;
29;Generating Digital Twin Cockpits for Parameter Management in the Engineering of Wind Turbines;;;;;;;UI Model;Part of DT UI Cockpit;;;;;;;;;;Daniel;;;;;;;;;;;;;;;;
30;Digital Twin Enables Rational Design of Ultrahigh-Power Lithium-Ion Batteries;;;;;;;;;;;;;;;;;;Daniel;No MDE technique used;;;;;;;;;;;;;;;
31;A framework for Model-Driven Engineering of resilient software-controlled systems;;SysML BDD;;;;;SysML BDD;Knowledge Base of software digital twins (Metamodel proposed in Figure 5 of the paper);;;;;;;;;;Daniel;;;Model to Model Transformation;;;;;reuse information created by reliability engineers (sysml) for concrete software implementation;;;;;;;;
32;A framework for Model-Driven Engineering of resilient software-controlled systems;;Knowledge base model (contribution of the paper;;;;;reliability requirements;executable models of failure modes (as fault trees);;H  Transportation and Storage;Plan;;As-Designed;formal specification of information in the form of models allows the application of MDE techniques (model transformations);;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Daniel;;;;;;;;reuse information created by reliability engineers (sysml) for concrete software implementation;not specified;not specified;limited traffic zone access control;mde bridges gap between plan (reliability requirements engineering) and design of the system (definition of software architecture before actual implementation);;;;
33;A framework for Model-Driven Engineering of resilient software-controlled systems;;fault trees;;;;;;;;;Design;;;;;;;Daniel;;;;;;;;;;;;;;;;
34;Model-Driven Development of a Digital Twin for Injection Molding;;;;;;;;;;;;;;;;;;Daniel;;;;;;;;;realizes self-adaptation loop based on MAPE (cf. Figure 2);A digital twin of a system consists of a set of models of the system, a set of digital shadows, and provides a set of services to use the data and models purposefully with respect to the original system.;;;;;;
35;The Framework for Designing Autonomous Cyber-Physical Multi-agent Systems for Adaptive Resource Management;;montiarc, class diagrams, event language, DoE;;notation;;;DT MontiArc architecture, domain, data processor;"Java code for the DTs
logic for data retrieval, communication with the CPPS, evaluation of DSs, and
reaction to these";;C  Manufacturing;Implement;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;textual notation that helps domain experts cope with software;All DSLs that we introduced are tailored to support the specification of DTs, but in other domains, different notations might be standard, and therefore, modeling relevant data elements and behaviors might be challenging. So far, no human interaction with the DT is considered. Since domain experts usually have domain knowledge that can help the DT to react appropriately to events, integrating such knowledge at runtime will be future work;"4-5: das Ding läuft ""im Labor""";;Daniel;;;code generation;;;;;generate software implementation from textual description/configure predefined architecture using textual description;;;injection molding machine;;;;;
36;The Research of Aero-engine Digital Twin Model Based on Model-driven and Data-driven Fusion Method;;;;;;;;;;;;;;;;;;Daniel;No MDE technique used;;;;;;;;;;;;;;;
37;Generative and Model-driven SDK development for the Industrie 4.0 Digital Twin;;AAS, AAS Domain-specific language;;;;;AAS Domain-Specific Model;C#/Java Stubs + Contracts;;;Implement;;As-Designed;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Daniel;;;code generation;;;;;Generate SDK from AAS specification. SDK can be used to implement DT;reasoning in the virtual space;A digital twin allows us to reason about a physical and/or ideal assets in the virtual (i.e. cyber) space thus providing a necessary foundation for complex and large cyber-physical systems.;;;;no demonstration or evaluation provided, only description of the prototypical implementation of the proposed concept;;
38;Towards a Reference Architecture for Leveraging Model Repositories for Digital Twins;;UML CD/AD;;textual;;;UML model;services that interact with the PT based on the UML models;;;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Operated;common knowledge base;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Daniel;;;model interpretation;;;;;model as common knowledge base;;a Digital Twin (DT) can be build to act as virtual representation for control, regulation, and adaption, ideally across the entire life-cycle of CPS;;;;;;
39;Digital Twin Operational Platform for Connectivity and Accessibility using Flask Python;;;;;;;;;;;;;;;;;;Daniel;No MDE technique used;;;;;;;;;;;;;;;
40;Data- and model-driven digital twins for design and logistics control of product distribution;;;;;;;;;;;;;;;;;;Daniel;No MDE technique used;;;Tool: RobotStudio (ABB proprietary);;;;;;;;;;;;
41;A software engineering point of view on digital twin architecture;;;;;;;;;;;;;;;;;;Daniel;No MDE technique used;;;;;;;;;;;;;;;
42;Process Prediction with Digital Twins;;Domain Language, OCL, Tagging Language, Data language, GUI language, Process Language, MontiArc, DS + Process Structure Language;;;;;All beforementioned models;DT implementation;;C  Manufacturing;Implement;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Operated;high-level access to software configuraiton for domain experts;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Daniel;;;code generation;;Model-Driven Architecture: ASM: Domain, OCL, Tagging, Data, GUI, Process Model. AIM: MontiArc, Basic DS structure, Basic Process Structure Model;;;automatically derive DT implementation from DSLs;realize self-adaptation based on MAPE pattern;software systems that can actively represent, control, and/or optimize the behavior of an observed (cyber-physical) system. Such a DT of a system consists of a set of models of the system, a set of Digital Shadows (DSs), and provides a set of services to use the data and models purposefully with respect to the original system;;injection molding machine;;;;
43;AML4DT: A Model-Driven Framework for Developing and Maintaining Digital Twins with AutomationML;;AML;;textual;;;AML;platform-neutral DT metamodel;;;;;;represent information across asset lifecycle, reuse information based on machine-readable format of models;;;;Daniel;;;Model to Model Transformation;;;;;reuse information from existing engineering model (AML) for setting up/evolving DTs;;;;;;;;
44;AML4DT: A Model-Driven Framework for Developing and Maintaining Digital Twins with AutomationML;;platform-neutral DT metamodel (contribution of the paper);;textual;;;platform-neutral DT metamodel;DTDL;;;;;;;;;;Daniel;;;Model to Model Transformation;;;;;generate proprietary DTDL model from platform-neutral DT model;;;;;;;;
45;AML4DT: A Model-Driven Framework for Developing and Maintaining Digital Twins with AutomationML;;DTDL;;textual;;;DTDL;Microsoft Azure DT Service;;N  Administrative and Support Service Activities;Implement;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;reduces complexity through abstraction, enables automation through model-driven engineering;"Further Model-Driven Software Engineering (MDSE) research for DTs. From the MDSE perspective, the realization of such an approach requires (1) the adaption of existing generators such as MontiGem to be able to handle the additional models in different Domain-Specific Languages (DSLs), (2) the integration of further generation steps, (3) to extend the runtime environment of the DT to be able to handle process models at runtime, and (4) to extend the runtime environment of the DT or provide APIs to include process mining services.

Derive DTs from engineering models

Automatically exploiting DT insights. Where digital twins
are in place, they can provide tremendous insights about the
operation of the particular observed system instance. Often,
these insights can be applied to other instances of the same
system type, similar systems, and future versions of these systems. Yet, we are lacking means to automatically exploit these
insights sustainably. Automatically improving the engineering
models of the observed system based on insights produced
by its digital twins could be valuable angle to improve this.

Models at runtime in DTs. From
a computer science perspective, the long-term operation of
digital twins poses further challenges such as how to handle
DS and DS-type evolvement,";1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Daniel;;;model interpretation;;;;this part is not an actual contribution of the paper, but already provided by the Azure DT platform;setup twins in DT service based on DTDL model;interface to running system;dynamic virtual model of a system, processor, or service, with data (e.g., sensor data) from physical systems or processes integrated into it.;Air Quality Opitmization System;;;;;
46;Twin Process Model Driven Machining Quality Optimization for Complex Parts;;not specified;;;;;model containing structural and behavioral (process) information;;;C  Manufacturing;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;represent structural/behavioral information in a machine-readable format;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Daniel;;;model interpretation;;;;;;efficiently realizes simulation, monitoring and control of multi scale and physical quantity;an intelligent method to link machining process and process design, which is benefit to the scientific control of machining quality.;;integral impeller cutting;;;;
47;Multisource Model-Driven Digital Twin System of Robotic Assembly;;;;;;;;;;;;;;;;;;Daniel;No MDE technique used;;;;;;;;;;;;;;;
48;Semantic Interoperability of Digital Twins: Ontology-based Capability Checking in AAS Modeling Framework;;OWL Ontology + OML Vocabulary;;;;;OML Vocabulary;UML Profile;;C  Manufacturing;Design;Systems of Systems, such as complete factories (Biesinger et al., 2018), oil wells (Kosenkov et al., 2018), or railway systems (Vatn, 2018).;As-Designed;formal definition that allows reasoning on/interpretation of models, interoperability;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Daniel;;;Model to Model Transformation;;;EMF;additionally, OML is defined according to the OWL Ontology (conformsTo), and AAS models are annotated using the UML Profile;convert OML Vocabulary into UML Profile that can be applied to AAS models;AAS model, enriched with semantic annotations based on OWL ontology;;robotic cell (niryo ned for gripping + turtlebot for transportation);;;;;
49;Semantic Interoperability of Digital Twins: Ontology-based Capability Checking in AAS Modeling Framework;;UML Profile;;;;;AAS Model (annotated with UML stereotypes);OWL individuals;;;;;;;;;;Daniel;;;Model to Model Transformation;;;EMF;;;;;;;;;;
50;Semantic Interoperability of Digital Twins: Ontology-based Capability Checking in AAS Modeling Framework;;AAS;;;;;OWL Ontology + OWL Individuals;capability matchmaker;;;;;;;;;;Daniel;;;model interpretation;;;EMF;;apply SPARQL Queries on Ontology Models, and assess the results within the capability matchmaker (cf. Section 4.B);;;;;;;;
51;Semantic Interoperability of Digital Twins: Ontology-based Capability Checking in AAS Modeling Framework;;OWL Individuals (instantiated OWL ontology);;;;;AAS Model;user interface created by the authors (cf. Section 4.C);;;;;;;;;;Daniel;;;model interpretation;;;EMF;;integrate AAS models into the overall proces (also involving the two model transformations described above), which is handled by the developed user interface;;;;;;;;
52;A Lightweight Model-driven MES Simulation Framework Based On Probabilistic Finite Automata;;;;;;;;;;;;;;;;;;Daniel;No MDE technique used;theroetisch reden sie davon, dass die simulationen konfiguriert werden, bzw. die simulationsdaten interpretiert werden könnenaber von einer konkreten Implementierung beschreiben sie nichts;;;;;;;;;;;;;;
53;Digital Twin of an Electrical Motor Based on Empirical Performance Model;;Unity 3D simulation model describing detailed physics of twinned asset;;;;;Unity Model;Simulation Controller;;H  Transportation and Storage;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;simulation;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Daniel;;;;;;;;use feedback from simulation in simulation controller;3D simulation model that is updated with live data from the twinned asset;The concept of Digital Twin (DT) is creating and maintaining a digital representation of the real physical entity and supporting its performance through simulation and optimization tools, which are fed with real and updated data.;;Electrical Motor (phase = operate, because simulation is fed with live data by the simulation controller);;;;
54;Closed-Loop Systems Engineering (CLOSE): Integrating Experimentable Digital Twins with the Model-Driven Engineering Process;;;;;;;;;;;;;;;;;;Daniel;No MDE technique used;paper proposes a process how humans develop systems based on experimental DTs;;;;;;;;;;;;;;
55;Research on Modeling Method of System Reliability Digital Twin;;;;;;;;;;;;;;;;;;Daniel;No MDE technique used;architecture figure would imply model interpretation by an optimization service, but there is no further information on this in the paper;;;;;;;;;;;;;;
56;Improved Electric Vehicle Digital Twin Performance Incorporating Detailed Lithium-ion Battery Model;;;;;;;;;;;;;;;;;;Daniel;No MDE technique used;this paper is a 5-pager, consisting of 80 % figures;;;;;;;;;;;;;;
57;Workshop Management and Control System Based on Digital Twin;;;;;;;;;;;;;;;;;;Daniel;No MDE technique used;;;;;;;;;;;;;;;
58;Using UML and OCL Models to Realize High-Level Digital Twins;;UML (class diagrams);;textual;;;UML class diagram;uml cd adapter that interprets CD and adapts a data lake accordingly (data lake stores data from the PT);;H  Transportation and Storage;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Daniel;;;model interpretation;;;USE;;configure data lake that stores PT data based on UML CD;"DT = UML class diagram; configures data lake that stores data from PT, which should be used by different services";comprehensive digital representation of an actual system, service or product (the Physical Twin, PT), synchronized at a specified frequency and fidelity;lego mindstorms car;;;;;
59;Interface Development for Digital Twin of an Electric Motor Based on Empirical Performance Model;;;;;;;;;;;;;;;;;;Daniel;;this is the jornal extension of Digital Twin of an Electrical Motor Based on Empirical Performance Model, extracted data is for me the same than in the conference paper. Also: shall we count IEEE Access as non-peer-reviewed/predatory?;;;;;;;;;;;;;;
60;A Model-Driven Approach for Situational Intelligence & Operational Awareness;;;;;;;;;;;;;;;;;;Daniel;No MDE technique used;it is described that power models should be interpreted by data management/scada solutions, but no specifics of how this is done are given, so it seems that there is no actual implementation, but the existing implementation rather relies on hard-coded services that are tied to the specific model used;;;;;;;;;;;;;;
61;Knowledge driven rapid development of white box digital twins for industrial plant systems;;SADL ontology;;textual;;;SADL ontology;M&CML control systems model;;;;;;;;;;Daniel;;;Model to Model Transformation;;;;;Translating knowledge to a control system model enables a validation mechanism for the captured domain knowledge against the control systems domain and vocabulary. Any gap or inconsistency in the translated control system model implies gaps in the knowledge source that needs to get updated accordingly;Ts enable a virtual sand-box environment simulating the behaviour of a plant to perform analyses and predictions.;the stated purpose could also be seen as a definition;;;;;;
62;Knowledge driven rapid development of white box digital twins for industrial plant systems;;M&CML control systems model;;;;;M&CML;fininte state machine;;D  Electricity, Gas, Steam and Air Conditioning Supply;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Daniel;;;Model to Model Transformation;;;;;make control systems model executable;;;power plant;;;;;
63;Knowledge driven rapid development of white box digital twins for industrial plant systems;;finite state machines, represented in SCXML;;graphical;;;;;;;;;;;;;;Daniel;;;;;;;;;;;;;;;;
64;Interface Management with Closed-Loop Systems Engineering (CLOSE);;;;;;;;;;;;;;;;;;Daniel;No MDE technique used;;;;;;;;;;;;;;;
0;Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;;MontiArc ADL;structure;textual;code generation;;MontiArc;Java, Python or C++;DT Information System Software Architecture;;;;As-Designed;;;;;Jerome;;;;;;;;;;;;;;;;
1;Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;;Classdiagram;structure;textual;code generation;;Classdiagram;data structure, database schema, data views;Backend Infrastructure generation;;;;As-Designed;;;;;Jerome;;;;;;;;;;;;;;;;
2;Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;;Gui DSL;structure;textual;code generation;;GUI Model;Webpage;frontend generation;;;;As-Designed;;;;;Jerome;;;;;;;;;;;;;;;;
3;Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;;MontiArc + Tagging;structure;textual;code generation;;MontiArc ADL + Tagging applied on ports of adl model;new MontiArc ADL with components receiving tagged ports;frontend generation;;;;As-Designed;;;;;Jerome;;;;;;;;;;;;;;;;
4;Measuring the Fidelity of Digital Twin Systems;;;;;;;;;;;;;;;;;;Jerome;Challenge/Position Paper;;;;;;;;;;;;;;;
5;Digital Twin as Risk-Free Experimentation Aid for Techno-Socio-Economic Systems;;;;;;;;;;;;;;;;;;Jerome;No MDE technique used;;;;;;;;;;;;;;;
6;Using Trace Alignments for Measuring the Similarity between a Physical and Its Digital Twin;;;;;;;;;;;;;;;;;;Jerome;No Model used;;;;;;;;;;;;;;;
7;Towards a Digital Twin for Cyber-Physical Production Systems: A Multi-Paradigm Modeling Approach in the Postal Industry;1) behave like the real system during its entire life cycle, 2) allow to predict possible failures and 3) take autonomous decisions accordingly. Moreover, it appears to be fundamental to have a seamless connection and synchronization between the DT and the system;BPMN;behavior;;Model to Model Transformation;uni;BPMN;Activity Diagram;Multi-paradigm modeling;"O  Public Administration and Defense; Compulsory Social Security";Operate;Processes, e.g., business processes (Rambow-Hoeschele et al., 2018), medical processes (Karakra et al., 2018), or recycling processes (Popa et al., 2018).;As-Operated;;;;;Jerome;;;;;;;;;;;;;;;;
8;Towards a Digital Twin for Cyber-Physical Production Systems: A Multi-Paradigm Modeling Approach in the Postal Industry;1) behave like the real system during its entire life cycle, 2) allow to predict possible failures and 3) take autonomous decisions accordingly. Moreover, it appears to be fundamental to have a seamless connection and synchronization between the DT and the system;Activity Diagram;behavior;;Model to Model Transformation;uni;Activity Diagram;Class Diagram;Multi-paradigm modeling;"O  Public Administration and Defense; Compulsory Social Security";Operate;Processes, e.g., business processes (Rambow-Hoeschele et al., 2018), medical processes (Karakra et al., 2018), or recycling processes (Popa et al., 2018).;As-Operated;;;;;Jerome;;;;;;;;;;;;;;;;
9;Modular Fault Ascription and Corrective Maintenance Using a Digital Twin;;;;;;;;;;;;;;;;;;Jerome;No MDE technique used;;;;;;;;;;;;;;;
10;Generating customized low-code development platforms for digital twins;software systems that are representing (twinning [8]) a CPS to act as its surrogate for analyses [9], control [10], or predicting its behavior [11]. On one hand, they gather data from and about the twinned CPS that may include data not accessible by the twinned system itself, such as historic data about its usage or strategic data about its planned use received from another system (ERP, MES);DSL Component;;textual;code generation;;DSL component + GUI models for editor and viewer + DT components;Low-code editor for DT configuration;generation of low-code development platform;;Operate;;As-Operated;Custom Low-code development for domain experts;;;;Jerome;;;;;;;;;;;;;;;;
11;Generating customized low-code development platforms for digital twins;software systems that are representing (twinning [8]) a CPS to act as its surrogate for analyses [9], control [10], or predicting its behavior [11]. On one hand, they gather data from and about the twinned CPS that may include data not accessible by the twinned system itself, such as historic data about its usage or strategic data about its planned use received from another system (ERP, MES);MontiArc;;textual;code generation;;MontiArc model;Java code;generation of dt architecture;;Operate;;As-Operated;Custom Low-code development for domain experts;;;;Jerome;;;;;;;;;;;;;;;;
12;Generating customized low-code development platforms for digital twins;software systems that are representing (twinning [8]) a CPS to act as its surrogate for analyses [9], control [10], or predicting its behavior [11]. On one hand, they gather data from and about the twinned CPS that may include data not accessible by the twinned system itself, such as historic data about its usage or strategic data about its planned use received from another system (ERP, MES);GUI Model;;textual;code generation;;GUI Model;Webpage;visualization;;Operate;;As-Operated;Custom Low-code development for domain experts;;;;Jerome;;;;;;;;;;;;;;;;
13;Generating customized low-code development platforms for digital twins;software systems that are representing (twinning [8]) a CPS to act as its surrogate for analyses [9], control [10], or predicting its behavior [11]. On one hand, they gather data from and about the twinned CPS that may include data not accessible by the twinned system itself, such as historic data about its usage or strategic data about its planned use received from another system (ERP, MES);Classdiagram;;textual;code generation;;CD;Java code;data modelling;;Operate;;As-Operated;Custom Low-code development for domain experts;;;;Jerome;;;;;;;;;;;;;;;;
14;Generating customized low-code development platforms for digital twins;software systems that are representing (twinning [8]) a CPS to act as its surrogate for analyses [9], control [10], or predicting its behavior [11]. On one hand, they gather data from and about the twinned CPS that may include data not accessible by the twinned system itself, such as historic data about its usage or strategic data about its planned use received from another system (ERP, MES);Case-based reasoning;;textual;model interpretation;;CBR;;adaptive behavior of DT;;Operate;;As-Operated;Custom Low-code development for domain experts;;;;Jerome;;;;;;;;;;;;;;;;
15;Generating customized low-code development platforms for digital twins;software systems that are representing (twinning [8]) a CPS to act as its surrogate for analyses [9], control [10], or predicting its behavior [11]. On one hand, they gather data from and about the twinned CPS that may include data not accessible by the twinned system itself, such as historic data about its usage or strategic data about its planned use received from another system (ERP, MES);ECA language;;textual;model interpretation;;ECA;;recognizing error states in CPS behavior;;Operate;;As-Operated;Custom Low-code development for domain experts;;;;Jerome;;;;;;;;;;;;;;;;
16;Generating customized low-code development platforms for digital twins;software systems that are representing (twinning [8]) a CPS to act as its surrogate for analyses [9], control [10], or predicting its behavior [11]. On one hand, they gather data from and about the twinned CPS that may include data not accessible by the twinned system itself, such as historic data about its usage or strategic data about its planned use received from another system (ERP, MES);Communication specification;;textual;code generation;;Communication specification;Java Code;generating a communication protocol;;Operate;;As-Operated;Custom Low-code development for domain experts;;;;Jerome;;;;;;;;;;;;;;;;
17;A data-model fusion dispatch strategy for the building energy flexibility based on the digital twin;;;;;;;;;;;;;;;;;;Jerome;No MDE technique used;;;;;;;;;;;;;;;
18;Meta-model-based shop-floor digital twin architecture, modeling and application;;;;;;;;;;;;;;;;;;Jerome;;;;;;;;;;;;;;;;
19;3D crowdsourced parametric cadastral mapping: Pathways integrating BIM/IFC, crowdsourced data and LADM;;;;;;;;;;;;;;;;;;Jerome;No MDE technique used;;;;;;;;;;;;;;;
20;Generating Digital Twin Cockpits for Parameter Management in the Engineering of Wind Turbines;digital twin of a system consists of a set of models of the system, a set of digital shadows, and provides a set of services to use the data and models purposefully with respect to the original system;Classdiagram;structure;textual;Model to Model Transformation;uni;Classdiagram;Python;Data structure and DT cockpit backend and frontend api generation;D  Electricity, Gas, Steam and Air Conditioning Supply;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;;;;;Jerome;;;;;;;;;;;;;;;;
21;Generating Digital Twin Cockpits for Parameter Management in the Engineering of Wind Turbines;digital twin of a system consists of a set of models of the system, a set of digital shadows, and provides a set of services to use the data and models purposefully with respect to the original system;Classdiagram;structure;textual;code generation;;Classdiagram;GUI;Derive UI from Cd;D  Electricity, Gas, Steam and Air Conditioning Supply;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;;;;;Jerome;;;;;;;;;;;;;;;;
22;Generating Digital Twin Cockpits for Parameter Management in the Engineering of Wind Turbines;digital twin of a system consists of a set of models of the system, a set of digital shadows, and provides a set of services to use the data and models purposefully with respect to the original system;GUI;structure;textual;code generation;;GUI;Typescript;UI generation;D  Electricity, Gas, Steam and Air Conditioning Supply;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;;;;;Jerome;;;;;;;;;;;;;;;;
23;Digital Twin Enables Rational Design of Ultrahigh-Power Lithium-Ion Batteries;n.a.;electrochemical-thermal coupled battery model;physics;textual;model interpretation;;electrochemical-thermal coupled battery model;virtual simulation;predict  the  battery  performance  under  ultrahigh-power  dis-charging  conditions;D  Electricity, Gas, Steam and Air Conditioning Supply;Design;Products, such as reinforced plastics (Wang et al., 2018), sunroof ring frames (Wärmefjord et al., 2017), or wearable masks (Zheng et al., 2018).;As-Designed;;;;;Jerome;No MDE technique used;borderline;;;;;;;;;;;;;;
24;A framework for Model-Driven Engineering of resilient software-controlled systems;a software object exposing methods for Item monitoring and control operations;;;;;;;;;;;;;;;;;Jerome;No MDE technique used;Too few details on transformation;;;;;;;;;;;;;;
25;Model-Driven Development of a Digital Twin for Injection Molding;A digital twin of a system consists of a set of models of the system, a set of digital shadows, and provides a set of services to use the data and models purposefully with respect to the original system.;MontiArc;structure;textual;code generation;;MontiArc;Java;DT software architecture;C  Manufacturing;Maintain;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;"domain experts can easily optimize their inj, modling machine with domain expressions; optimization of injection molding process through repeated execution of DOE";;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jerome;;;;;;;;;;;;;;;;
26;Model-Driven Development of a Digital Twin for Injection Molding;A digital twin of a system consists of a set of models of the system, a set of digital shadows, and provides a set of services to use the data and models purposefully with respect to the original system.;Classdiagrams;structure;textual;code generation;;Classdiagrams;Java;domain description;C  Manufacturing;Maintain;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;"domain experts can easily optimize their inj, modling machine with domain expressions; optimization of injection molding process through repeated execution of DOE";;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jerome;;;;;;;;;;;;;;;;
27;Model-Driven Development of a Digital Twin for Injection Molding;A digital twin of a system consists of a set of models of the system, a set of digital shadows, and provides a set of services to use the data and models purposefully with respect to the original system.;Event language;behavior;textual;model interpretation;;Event model;;specifying the behavior of the DT based on Event, condition action;C  Manufacturing;Maintain;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;"domain experts can easily optimize their inj, modling machine with domain expressions; optimization of injection molding process through repeated execution of DOE";;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jerome;;;;;;;;;;;;;;;;
28;Model-Driven Development of a Digital Twin for Injection Molding;A digital twin of a system consists of a set of models of the system, a set of digital shadows, and provides a set of services to use the data and models purposefully with respect to the original system.;design of experiment language;rule;textual;code generation;;OPCUA model;Java;Setting up an experiment for optimization;C  Manufacturing;Maintain;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;"domain experts can easily optimize their inj, modling machine with domain expressions; optimization of injection molding process through repeated execution of DOE";;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jerome;;;;;;;;;;;;;;;;
29;Model-Driven Development of a Digital Twin for Injection Molding;A digital twin of a system consists of a set of models of the system, a set of digital shadows, and provides a set of services to use the data and models purposefully with respect to the original system.;OPC UA DSL;structure;textual;code generation;;;;communication;C  Manufacturing;Maintain;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;"domain experts can easily optimize their inj, modling machine with domain expressions; optimization of injection molding process through repeated execution of DOE";;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jerome;;;;;;;;;;;;;;;;
30;The Framework for Designing Autonomous Cyber-Physical Multi-agent Systems for Adaptive Resource Management;;;;;;;;;;;;;;;;;;Jerome;No MDE technique used;;;;;;;;;;;;;;;
31;A Digital Twin Model-Driven Architecture for Cyber-Physical and Human Systems;;;;;;;;;;;;;;;;;;Jerome;No MDE technique used;;;;;;;;;;;;;;;
32;Model-driven engineering city spaces via bidirectional model transformations; In the realm of smart cities, a digital twin is a virtual model of a citya model representation of the physical world;CityGML (BIM);structure;graphical;Model to Model Transformation;bi;3D model;graph structure;syncronization between models;F  Construction;Plan;Systems of Systems, such as complete factories (Biesinger et al., 2018), oil wells (Kosenkov et al., 2018), or railway systems (Vatn, 2018).;As-Designed;domain experts can formulate them;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jerome;;;;;;;;;;;;;;;;
33;Model-driven engineering city spaces via bidirectional model transformations; In the realm of smart cities, a digital twin is a virtual model of a citya model representation of the physical world;cyber-physical spaces;structure;textual;Model to Model Transformation;bi;graph structure;3D model;syncronization between models;F  Construction;Plan;Systems of Systems, such as complete factories (Biesinger et al., 2018), oil wells (Kosenkov et al., 2018), or railway systems (Vatn, 2018).;As-Designed;domain experts can formulate them;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jerome;;;;;;;;;;;;;;;;
34;A New 5S Radar Structure Design Model Driven by Digital Twin;;;;;;;;;;;;;;;;;;Jerome;No MDE technique used;;;;;;;;;;;;;;;
35;Towards Reactive Planning with Digital Twins and Model-Driven Optimization;DTs enable a bi-directional data flow between a physical system and its virtual representation, requiring different software components to enable this communication;Henshin  graph transformation rules;behavior;textual;model interpretation;;metamodel, graph transformations, and two runtime models;;identify deviations between actual and expected state;;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Operated;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jerome;;;;;;;;;;;;;;;;
36;Model-Driven Engineering in Digital Thread Platforms: A Practical Use Case and Future Challenges;;;;;;;;;;;;;;;;;;Jerome;No MDE technique used;;;;;;;;;;;;;;;
37;Performance Evaluation: Model-Driven or Problem-Driven?;;;;;;;;;;;;;;;;;;Jerome;Challenge/Position Paper;;;;;;;;;;;;;;;
38;Towards Development Platforms for Digital Twins: A Model-Driven Low-Code Approach;;;;;;;;;;;;;;;;;;Jerome;Challenge/Position Paper;;;;;;;;;;;;;;;
39;Applying a Healthcare Web of Things Framework for Infertility Treatments;;;;;;;;;;;;;;;;;;Jerome;Challenge/Position Paper;;;;;;;;;;;;;;;
40;Towards a Model-Driven Architecture for Interactive Digital Twin Cockpits;A digital twin of a system consists of a set of models of the system, a set of digital shadows and their aggregation and abstraction collected from a system, and a set of services that allow using the data and models purposefully with respect to the original system. ;MontiArc;;textual;code generation;;MontiArc model;Java code;generation of dt architecture;;Operate;;As-Operated;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jerome;;;;;;;;;;;;;;;;
41;Towards a Model-Driven Architecture for Interactive Digital Twin Cockpits;A digital twin of a system consists of a set of models of the system, a set of digital shadows and their aggregation and abstraction collected from a system, and a set of services that allow using the data and models purposefully with respect to the original system. ;MontiGem GUI Model;;textual;code generation;;GUI Model;Webpage;visualization;;Operate;;As-Operated;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jerome;;;;;;;;;;;;;;;;
42;Towards a Model-Driven Architecture for Interactive Digital Twin Cockpits;A digital twin of a system consists of a set of models of the system, a set of digital shadows and their aggregation and abstraction collected from a system, and a set of services that allow using the data and models purposefully with respect to the original system. ;Classdiagram;;textual;code generation;;CD;Java code;data modelling;;Operate;;As-Operated;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jerome;;;;;;;;;;;;;;;;
43;Dynamic design method of digital twin process model driven by knowledge-evolution machining features;;;;;;;;;;;;;;;;;;Jerome;No MDE technique used;Hier wurde nie ein Modell gezeigt. Viel bla und wenig inhalt;;;;;;;;;;;;;;
44;The Research of Aero-engine Digital Twin Model Based on Model-driven and Data-driven Fusion Method;;;;;;;;;;;;;;;;;;Jerome;No MDE technique used;Keine Details;;;;;;;;;;;;;;
45;Generative and Model-driven SDK development for the Industrie 4.0 Digital Twin; A digital twin allows us to reason about a physical and/or ideal assets in the virtual (i.e. cyber) space thus providing a necessary foundation for complex and large cyber-physical systems.;AAS model;structure;;code generation;;AAS;Target language-specific;generate usable code in an sdk or a library;;;;;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jerome;;;;;;;;;;;;;;;;
46;Towards a Reference Architecture for Leveraging Model Repositories for Digital Twins;;;;;;;;;;;;;;;;;;Jerome;No Model used;Reference Architecture;;;;;;;;;;;;;;
47;Digital Twin Operational Platform for Connectivity and Accessibility using Flask Python;;;;;;;;;;;;;;;;;;Jerome;No Model used;Wie konnte das extrahiert werden? weder MDE noch MBE im Paper;;;;;;;;;;;;;;
48;Data- and model-driven digital twins for design and logistics control of product distribution;;;;;;;;;;;;;;;;;;Jerome;No Model used;;;;;;;;;;;;;;;
49;Interface Management with Closed-Loop Systems Engineering (CLOSE);;;;;;;;;;;;;;;;;;Jerome;No MDE technique used;Nicht genügend Infos. Reden zwar von MDE aber zeigen weder Modelle noch gehen sie darauf ein was wohin generiert/transformiert wird;;;;;;;;;;;;;;
50;Urban Intelligence: Toward the Digital Twin of Matera and Catania;;;;;;;;;;;;;;;;;;Jerome;No MDE technique used;Keine Details;;;;;;;;;;;;;;
51;Developing a Physical and Digital Twin: An Example Process Model;;;;;;;;;;;;;;;;;;Jerome;No MDE technique used;MBSE;;;;;;;;;;;;;;
52;Combining Low-Code Programming and SDL-Based Modeling with Snap! in the Industry 4.0 Context;Digital Twin is a virtual re- production of a system based on simulations, real-time and historical data that allows representing, understanding, and predicting scenarios of the past, present, and future, with verified and validated models, and synchronized at a specified frequency and fidelity with the system ;SDL;behavior;graphical;code generation;;SDL model;GPL code;execute/simulate modeled behavior;;Design;Processes, e.g., business processes (Rambow-Hoeschele et al., 2018), medical processes (Karakra et al., 2018), or recycling processes (Popa et al., 2018).;As-Operated;"low-code programming; enable industrial users to test and/or build their own Digital Twin models at a suitable abstraction level and with low entry barriers ; create an open-source and web-based tool that facilitates the implementation and validation of Digital Twin prototypes";;"4-5: das Ding läuft ""im Labor""";;Jerome;;;;;;;;;;;;;;;;
53;Combining Low-Code Programming and SDL-Based Modeling with Snap! in the Industry 4.0 Context;Digital Twin is a virtual re- production of a system based on simulations, real-time and historical data that allows representing, understanding, and predicting scenarios of the past, present, and future, with verified and validated models, and synchronized at a specified frequency and fidelity with the system ;SDL;behavior;graphical;Model to Model Transformation;bi;SDL model;Discrete Event System Specification (formal model for simulation engines);execute/simulate modeled behavior;;Design;Processes, e.g., business processes (Rambow-Hoeschele et al., 2018), medical processes (Karakra et al., 2018), or recycling processes (Popa et al., 2018).;As-Operated;"low-code programming; enable industrial users to test and/or build their own Digital Twin models at a suitable abstraction level and with low entry barriers ; create an open-source and web-based tool that facilitates the implementation and validation of Digital Twin prototypes";;"4-5: das Ding läuft ""im Labor""";;Jerome;;;;;;;;;;;;;;;;
54;A Methodology for Digital Twin Modeling and Deployment for Industry 4.0;DT appears as a virtual representation of the physical product, a digital shadow that contains all its information and knowledge [15]. The DT is connected to the physical part in some way, so as to allow data transfer from the physical to the cyber part.  ;AutomationML;structure;textual;model interpretation;;AutomationML models;;Syncronizing data from the physical system with the model;C  Manufacturing;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Operated;reusability of similar basic components;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jerome;;;;;;;;;;;;;;;;
55;A Methodology for Digital Twin Modeling and Deployment for Industry 4.0;DT appears as a virtual representation of the physical product, a digital shadow that contains all its information and knowledge [15]. The DT is connected to the physical part in some way, so as to allow data transfer from the physical to the cyber part.  ;AutomationML;structure;textual;code generation;;AutomationML models;GPL;Python script translate DT and Physical Device models into REST communication interface;C  Manufacturing;Design;Systems of Systems, such as complete factories (Biesinger et al., 2018), oil wells (Kosenkov et al., 2018), or railway systems (Vatn, 2018).;As-Operated;"reusability of similar basic components; utomated the deployment process";;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jerome;;;;;;;;;;;;;;;;
56;Digital Twins Driving Model Based on Petri Net in Industrial Pipeline;the digital twin, that is, real-time data synchronization and feedback control of the entity;PetriNets;behavior;;model interpretation;;Petri net model;;online syncronization of physical and digital system;C  Manufacturing;Operate;Processes, e.g., business processes (Rambow-Hoeschele et al., 2018), medical processes (Karakra et al., 2018), or recycling processes (Popa et al., 2018).;As-Operated;single source of truth for simulation;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jerome;;;;;;;;;;;;;;;;
57;Automated Model Transformation in modeling Digital Twins of Industrial Internet-of-Things Applications utilizing AutomationML;;AutomationML;structure;;Model to Model Transformation;;AutomationML models and Requirements specification;best fitting automationML model including instantiation based on requirements;Find the best fitting machine for the job to be done;C  Manufacturing;Plan;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed; providing metadata for each of the machines;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Jerome;;Double Check required --> unsicher weil unpräzise in Paper;;;;;;;;;;;;;;
58;Digital Twin Service Unit for AC Motor Stator Inter-Turn Short Circuit Fault Detection;;;;;;;;;;;;;;;;;;Jerome;No MDE technique used;;;;;;;;;;;;;;;
59;DataTime: a Framework to smoothly Integrate Past, Present and Future into Models;The Digital Twin of DATATIME represents the set of graph instances of the model, over the time.;;;;;;;;;;;;;;;;;Jerome;No MDE technique used;"""as future work, we plan to provide DSLs for the main contributions""";;;;;;;;;;;;;;
60;AAS Capability-Based Operation and Engineering of Flexible Production Lines;;;;;;;;;;;;;;;;;;Jerome;No MDE technique used;Die haben einfach AAS nachmodelliert;;;;;;;;;;;;;;
61;An AAS Modeling Tool for Capability-Based Engineering of Flexible Production Lines;;;;;;;;;;;;;;;;;;Jerome;No MDE technique used;Kopie von AAS Capability-Based Operation and Engineering of Flexible Production Lines;;;;;;;;;;;;;;
62;Learning to Predict and Optimize Imperfect MIMO System Performance: Framework and Application;;;;;;;;;;;;;;;;;;Jerome;No MDE technique used;;;;;;;;;;;;;;;
63;Proof of Concept for a Roundtrip Engineering IS for the New Enterprise in the Industry 4.0 Era;;;;;;;;;;;;;;;;;;Jerome;Short Paper (Extended Abstract): <4 Seiten;;;;;;;;;;;;;;;
64;Holistic Network Virtualization and Pervasive Network Intelligence for 6G;;;;;;;;;;;;;;;;;;Jerome;No MDE technique used;network architecture + AI models;;;;;;;;;;;;;;
65;A neural control of the parallel Gas Turbine with differential link;;;;;;;;;;;;;;;;;;Jerome;No MDE technique used;Math models + AI;;;;;;;;;;;;;;
66;The THREAT-ARREST Cyber Range Platform;;;;;;;;;;;;;;;;;;Jerome;No Model used;;;;;;;;;;;;;;;
0;Model-Driven Digital Twin Construction: Synthesizing the Integration of Cyber-Physical Systems with Their Information Systems;DTs are digital representations of cyber-physical assets or processes that enable advanced control, decision making, and optimization.;MontiArc / MontiGem (useing UML);structure;;;;MontiArc;GPL-code;;J  Information and Communication;Design, Implement;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;Reducing the effort for engineering the communication interfaces between CPS and DT implemented as information systems;Although model-driven software engineering (MDSE) provides the necessary methods to generate these connections, these methods have not yet been applied to integrated development and connection of DTs to CPSs.;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Ann;;;code generation;;tagging;;;;to manage a CPS;;;;;;Reducing the effort for engineering the communication interfaces between CPS and DTs implemented as information systems;
1;Measuring the Fidelity of Digital Twin Systems;;;;;;;;;;;;;;;;;;Ann;;;;;;;;;;;;;;;;
2;Digital Twin as Risk-Free Experimentation Aid for Techno-Socio-Economic Systems;;;;;;;;;;;;;;;;;;Ann;;;;;;;;;;;;;;;;
3;Using Trace Alignments for Measuring the Similarity between a Physical and Its Digital Twin;;;;;;;;;;;;;;;;;;Ann;;;;;;;;;;;;;;;;
4;Towards a Digital Twin for Cyber-Physical Production Systems: A Multi-Paradigm Modeling Approach in the Postal Industry;However, the characteristics commonly associated to the DT are that it must be able to 1) behave like the real system during its entire life cycle, 2) allow to predict possible failures and 3) take autonomous decisions accordingly. Moreover, it appears to be fundamental to have a seamless connection and synchronization between the DT and the system.;BPMN / UML;behavior;;;uni;BPMN;UML Activity model;;N  Administrative and Support Service Activities;Operate;Processes, e.g., business processes (Rambow-Hoeschele et al., 2018), medical processes (Karakra et al., 2018), or recycling processes (Popa et al., 2018).;As-Operated;Correlatively model complementary aspects of the system;-;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Ann;;;Model to Model Transformation;;Multi-Paradigm Modeling;;;;emulate the sorting CPPS via Multi-Agent System;;;;;;A MPM approach completely driven by the business process;
5;A Novel Methodology to Construct Digital Twin Models for Spacecraft Operations Using Fault and Behaviour Trees;A Digital Twin (DT) is a virtual representation of a physical product, asset, process, system, or service that allows us to understand, predict, and optimise their performance for better business outcomes.;ODM, BT-model;behavior;;;uni;FT;BT;;J  Information and Communication;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Operated;Models allow the operators react more quickly and more precisely to alarms raised by the station;-;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Ann;;;Model to Model Transformation;;ODM (Operations-Dedicated Model);;;;Contribute to the stations architecture and robustness continuous improvement, through increasing its fault detection and mitigation capabilities.;;;;;;Construct Operations-Dedicated Models from Fault Trees, using the Behaviour Tree formalism;
6;Understanding and Improving Model-Driven IoT Systems through Accompanying Digital Twins;A digital twin (DT) of a system consists of a set of models of the system, a set of contextual data traces and/or their aggregation and abstraction collected from a system, and a set of services that allow using the data and models purposefully with respects to the original system.;MontiArc, MontiThings ADL, C&C Architectures;behavior;;;uni;MontiThings;Code;;IoT;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Operated;;-;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Ann;;;Model to Model Transformation, code generation;;-;;;;Leverage digital twins to collect the required data.;;;;;;One of the advantages of our model-driven approach is that there is no manual work involved when recording or replaying system traces.;
7;CPSAML: A Language and Code Generation Framework for Digital Twin Based Monitoring of Mobile Cyber-Physical Systems;-;SysML2, CPSAML;;;;uni;SysML 2;Code (C++);;H  Transportation and Storage;Design;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;"Model engineering abstracts real world concepts in a way,
such that only the relevant properties are left. A model therefore
is a simplified representation of reality. This helps planning and
designing complex systems, as a model should give a common sense
of the underlying system.";;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Ann;;;Model to Model Transformation, code generation;;Multi Paradigm Approach;;;;;;;;;;better support both the system architect and the operator for the development of a mobile CPS. The system architect only keeps the focus on her interests through the introduced DSL, while the operator is supported by the generated cockpit application. In addition, the used code generation should save a lot of implementation effort for developers;
8;On the Engineering of IoT-Intensive Digital Twin Software Systems;Digital Twins (DT) are software systems representing different aspects of a physical or conceptual counterpartthe real twin, which is instrumented with several sensors or computing devices that generate, consume and transfer data to its DT with different purposes;GEMINIS, MRAC, MIAC;structure, behavior;;;;;;;H  Transportation and Storage;Operate;Systems of Systems, such as complete factories (Biesinger et al., 2018), oil wells (Kosenkov et al., 2018), or railway systems (Vatn, 2018).;As-Operated;;"- Define a DT metamodel with sufficient expressiveness to properly describe the structural characteristics (i.e., observable properties) of a real twin and their relationships with context sources.
- Identify and undertake convenient actions regarding the possible drift of DT models (i.e., inaccuracy of originally expected behaviour).
- Determine when a DT is sufficiently mature to consider switching the control of behavioural models from an MRACbased approach, where simulations are used as reference inputs to adapt the behaviour of DT models, to an MIAC based approach that identifies control parameters using data and knowledge from the operating real twin.
- Propagate required changes in definitions of structural models and address their impact on related behavioural models.
- Enable the composition of DTs into larger DT structures and guarantee the interoperability of DT models.";1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Ann;;;model interpretation;;;;;;"Coping with the dynamic and uncertain characteristics of
the physical world (i.e., faced by the real-twin)";;;;;;In our research, we aim to advance the modelling of DTs from a data-driven, control, and MDE-based perspective, in which ML-based descriptive and predictive behaviour, and simulation and experimentation services can be supported, thus providing a platform for the development and extension of IoT-intensive DTSS.;
9;A Flexible and Modular Architecture for Edge Digital Twin: Implementation and Evaluation;;;;;;;;;;;;;;;;;;Ann;;;;;;;;;;;;;;;;
10;Enabling Semantic Interoperability of Asset Administration Shells through an Ontology-Based Modeling Method;AAS;AAS, UML, OML;behavior;;;bi;AAS;OWL;;C  Manufacturing;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Operated;;-;0;;Ann;;;Model to Model Transformation;;General concepts Mapping;;;;, the Asset Administration Shell (AAS), provides a syntactic interoperability interface for all assets involved in smart factories;;;;;;need to fill the gap regarding semantic interoperability, in order to allow efficient interactions between Industry 4.0 components.;
11;Challenges and Possible Approaches for Sustainable Digital Twinning;;;;;;;;;;;;;;;;;;Ann;;;;;;;;;;;;;;;;
12;Coordination and Explanation of Reconfigurations in Self-Adaptive High-Performance Systems;;;;;;;;;;;;;;;;;;Ann;;;;;;;;;;;;;;;;
13;Case Study on Automated and Continuous Reliability Assessment of Software-Defined Manufacturing Based on Digital Twins;A digital twin is a software system consisting of models, data, and services to interact with a cyber-physical system for a particular purpose;SysML v2, OpenPRA, FT, XML;structure, behavior;;;uni;SysML v2;hybrid reliability models;;C  Manufacturing;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Operated;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Ann;;;Model to Model Transformation;;Our M2M transformation algorithm parses a SysML v2 file and searches for keywords;;;;They serve to monitor, better understand and optimize the behavior of their respective counterparts.;;;;;;It provides system engineers with the capability to design and visualize models for various aspects of hardware and software systems and their components.;
14;Integration of SysML Models in a 3D Environment for Virtual Testing and Validation;A Digital Twin is a digital 3D - CAD replica of a living or non-living physical entity, allowing to replicate the same behavior as that of the actual component.;"SysML,  levels of
detail (LOD) mechanism";structure;;;uni;SysML v2;3D environment;;D  Electricity, Gas, Steam and Air Conditioning Supply;Design, Implement, Test;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Operated;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Ann;;;Model to Model Transformation;;;;;;;;;;;;The growing system complexity requires the implementation of new development methods to keep time, quality, and costs under control. ModelDriven Systems Engineering (MDSE) [8] addresses the complexity of the system with a model-centric engineering methodology.;
15;Modular Fault Ascription and Corrective Maintenance Using a Digital Twin;;;;;;;;;;;;;;;;;;Ann;;;;;;;;;;;;;;;;
16;Generating customized low-code development platforms for digital twins;"A digital twin is ""a set of models of the system, a set of digital shadows and their aggregation and abstraction collected from a system, and a set of services that allow using the data and models purposefully with respect to the original system""";MontiGem;;;;;MontiGem;LowCode DT;;C  Manufacturing;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Operated;The models we use for configuration are more abstract than programming languages and allow domain experts to create powerful full digital twin applications nonetheless.;DT as part of an ecosystem;"4-5: das Ding läuft ""im Labor""";;Ann;;;code generation, model interpretation;;low.code development;;;;Leveraging DTs that monitor and control the system of interest can reduce configuration time, save energy, and prevent waste.;;;;;;generate tailored LCDPs (Low-Code Development Platforms);
17;A data-model fusion dispatch strategy for the building energy flexibility based on the digital twin;;;;;;;;;;;;;;;;;;Ann;;;;;;;;;;;;;;;;
18;Meta-model-based shop-floor digital twin architecture, modeling and application;Shop-floor Digital Twin (SDT), as the digital counterpart of physical entities including the humans, machines, material, methods and environments in the existing shop-floor, mirrors the physical shop-floor behavior and performance in the virtual space. The digital counterpart is comprised of a series of semantic digital models and simulation models of the physical shop-floor and has the automatic data synchronization between the physical and virtual space. By establishing the automatic data flow between the physical shop-floor and digital counterpart, the semantic digital models and simulation models could be converted to digital shadow and further evolved into SDT.;MOF, SysML;behavior;;;;;;;C  Manufacturing;Operate;Systems of Systems, such as complete factories (Biesinger et al., 2018), oil wells (Kosenkov et al., 2018), or railway systems (Vatn, 2018).;As-Designed;;;;;Ann;;;model interpretation;;meta-model concept;;;;DT has a strong vitality in the whole product lifecycle and could provide strong support for the digital and intelligent transformation of manufacturing industry in the aspects of virtual model construction and cyber-physical information fusion.;;;;;;;
19;3D crowdsourced parametric cadastral mapping: Pathways integrating BIM/IFC, crowdsourced data and LADM;;;;;;;;;;;;;;;;;;Ann;;;;;;;;;;;;;;;;
20;Generating Digital Twin Cockpits for Parameter Management in the Engineering of Wind Turbines;a digital twin of a system consists of a set of models of the system? a set of digital shadows? and provides a set of services to use the data and models purposefully with respect to the original system;MontiGem;structure, behavior;;;uni;UML, MontiGem;Source Code;;D  Electricity, Gas, Steam and Air Conditioning Supply;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;Suitable models in the early phase are engineering models and models to describe behaviortobe? that can be simulated and analyzed;;"4-5: das Ding läuft ""im Labor""";;Ann;;;Model to Model Transformation, code generation;;;;;;The functional part of the digital twin was out of focus of this project The generated DT cockpit is intended to use in combination with other services? which allow for predictive control,model the behavior of physical systems? and can in?uence the physical system;;;;;;MDE therefore aims at exploiting the ideas introduced in mechanical design theory, that a system realizes a function by transforming energy, material, and data;
21;Digital Twin Enables Rational Design of Ultrahigh-Power Lithium-Ion Batteries;;;;;;;;;;;;;;;;;;Ann;;;;;;;;;;;;;;;;
22;A framework for Model-Driven Engineering of resilient software-controlled systems;In [29], the definition, the role and the architectural aspects of digital twins in IIoT systems are elaborated.;SysML BDD, JARVIS, FT;structure;;;uni;SysML BDD;Knowlegde Base;;H  Transportation and Storage;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Ann;;;Model to Model Transformation;;correct-by-construction strategy;;;;Software digital twins representations provide a key abstraction, providing an agile interface on hardware components, capturing operational behaviours of physical assets and processes, also providing refined and interpreted data, to enable diagnoses, predictive maintenance tasks, process plannings, process optimizations, virtual prototyping, and simulation.;;;;;;ollowing the proposed MDE approach, structural aspects of system configuration are preserved by construction guaranteeing that the meta-model complies to, and is isomorphic with, the structure of the specification artifact.;
23;Model-Driven Development of a Digital Twin for Injection Molding;A digital twin of a system consists of a set of models of the system, a set of digital shadows, and provides a set of services to use the data and models purposefully with respect to the original system.;MontiArc, MontiCore;structure;;;uni;MontiArc;Java;;C  Manufacturing;Operate, Maintain;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;The presented method relies on models describing the DTs situations (events) and reactions.;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Ann;;;code generation;;tagging;;;;The DT gathers relevant data and transmits commands to the machine to change to the machine configuration;;;;;;Model-driven engineering (MDE) bridges the gap between the production and software domain by using models that describe the DT at multiple levels of abstraction;
24;The Framework for Designing Autonomous Cyber-Physical Multi-agent Systems for Adaptive Resource Management;;;;;;;;;;;;;;;;;;Ann;;;;;;;;;;;;;;;;
25;A software engineering point of view on digital twin architecture;;;;;;;;;;;;;;;;;;Ann;;;;;;;;;;;;;;;;
26;Process Prediction with Digital Twins;;;;;;;;;;;;;;;;;;Ann;;;;;;;;;;;;;;;;
27;AML4DT: A Model-Driven Framework for Developing and Maintaining Digital Twins with AutomationML;A DT is a dynamic virtual model of a system, processor, or service, with data (e.g., sensor data) from physical systems or processes integrated into it.;AML, Azure;structure;;;uni;AML;DT models;;J  Information and Communication;Operate, Maintain;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Ann;;;Model to Model Transformation, code generation;;;;;;By integrating the digital and physical worlds, the DT enables real-time monitoring of systems and processes and helps, for example, to reduce downtimes and detect errors at an early stage;;;;;;Model-Driven Engineering (MDE) applies the abstraction power of models to tackle the complexity of systems [16], [17], and thus, is by definition related to the concept of DTs;
28;Twin Process Model Driven Machining Quality Optimization for Complex Parts;Digital twin is an efficient method to realize simulation, monitoring and control of multi scale and physical quantity;???;structure;;;uni;NC;XML;;C  Manufacturing;Operate;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Ann;;;Model to Model Transformation;;;;;;;;;;;;;
29;Multisource Model-Driven Digital Twin System of Robotic Assembly;;;;;;;;;;;;;;;;;;Ann;;;;;;;;;;;;;;;;
30;Interface Management with Closed-Loop Systems Engineering (CLOSE);;;;;;;;;;;;;;;;;;Ann;;;;;;;;;;;;;;;;
31;Urban Intelligence: Toward the Digital Twin of Matera and Catania;;;;;;;;;;;;;;;;;;Ann;;;;;;;;;;;;;;;;
32;Developing a Physical and Digital Twin: An Example Process Model;;;;;;;;;;;;;;;;;;Ann;;;;;;;;;;;;;;;;
33;Combining Low-Code Programming and SDL-Based Modeling with Snap! in the Industry 4.0 Context;A Digital Twin is defined as a virtual reproduction of a system based on simulations, either with real-time or historical data, that allows representing, understanding, and predicting scenarios of the past, present, and future, with verified and validated models, and synchronized at a specified frequency and fidelity with the system;SDL, Snap!;behavior;;;uni;SDL;Snap!, GPL;;P  Education;Design;Processes, e.g., business processes (Rambow-Hoeschele et al., 2018), medical processes (Karakra et al., 2018), or recycling processes (Popa et al., 2018).;As-Operated;;;"4-5: das Ding läuft ""im Labor""";;Ann;;;Model to Model Transformation;;low code;;;;Digital Twin is becoming a core element of model-based systems engineering;;;;;;breaking silos;
34;A Methodology for Digital Twin Modeling and Deployment for Industry 4.0;"The DT can monitor and interact with the physical entity and can be seen as a logical hub that concentrates I4.0 functionalities of a product, device, or system.
r, with the advent of CPSs, the DT appears as
a virtual representation of the physical product, a digital
shadow that contains all its information and knowledge
[15]. The DT is connected to the physical part in some
way, so as to allow data transfer from the physical to
the cyber part. Since the CPS is described as a set of
physical devices, objects, and equipment that interacts
with virtual cyberspace through a communication network, the cyber model of each physical entity can be seen
as a digital representation of the real entity [16], called
DT";AML, Web services;structure;;;uni;AML;Restful API, Html pages;;C  Manufacturing;Operate;Individual Systems, Systems of Systems;As-Designed;"model the physical device, serving as the virtual representation of the device; second, to model the DT itself, serving as a configuration reference for the deployment phase.";;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Ann;;;code generation, model interpretation;;;;;;The DT provides a virtual representation of products along their lifecycle that enables the prediction and optimization of the behavior of a production system and its components.;;;;;;The MDE concept advocates that engineers must put more effort into creating system specifications, through using models that allow automatic code generation for the system components, rather than writing this code manually;
35;Digital Twins Driving Model Based on Petri Net in Industrial Pipeline;;;;;;;;;;;;;;;;;;Ann;;;;;;;;;;;;;;;;
36;Automated Model Transformation in modeling Digital Twins of Industrial Internet-of-Things Applications utilizing AutomationML;DT only in Title;AML;structure;;;uni;PIM;PSM;;C  Manufacturing;Design;Individual Systems, such as automated cars (Atorf and Roßmann, 2018), gas turbines (Dawes et al., 2019), or manufacturing machines (Debroy et al., 2017).;As-Designed;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Ann;;;Model to Model Transformation;;MDA;;;;;;;;;;The original goal of MDA is to gain flexibility by having the ability to derive code from a stable model.;
37;Digital Twin Service Unit for AC Motor Stator Inter-Turn Short Circuit Fault Detection;;;;;;;;;;;;;;;;;;Ann;;;;;;;;;;;;;;;;
38;DataTime: a Framework to smoothly Integrate Past, Present and Future into Models;;;;;;;;;;;;;;;;;;Ann;;;;;;;;;;;;;;;;
39;AAS Capability-Based Operation and Engineering of Flexible Production Lines;;just implementation;;;;;;;;;;;;;;;;Ann;;;;;;;;;;;;;;;;
40;An AAS Modeling Tool for Capability-Based Engineering of Flexible Production Lines;;just implementation;;;;;;;;;;;;;;;;Ann;;;;;;;;;;;;;;;;
41;Learning to Predict and Optimize Imperfect MIMO System Performance: Framework and Application;;;;;;;;;;;;;;;;;;Ann;;;;;;;;;;;;;;;;
42;Proof of Concept for a Roundtrip Engineering IS for the New Enterprise in the Industry 4.0 Era;Kritzinger;AMME, ADOxx;structure;;;uni;BPMN;Diagramms, python;;C  Manufacturing;Test, Operate;Processes, e.g., business processes (Rambow-Hoeschele et al., 2018), medical processes (Karakra et al., 2018), or recycling processes (Popa et al., 2018).;As-Designed;;;1-3: die Technologie gibt's, evtl. am Toy Example gezeigt;;Ann;;;Model to Model Transformation, code generation;;Conceptual Modelling;;;;;;;;;;;
43;Holistic Network Virtualization and Pervasive Network Intelligence for 6G;;tutorial paper;;;;;;;;;;;;;;;;Ann;;;;;;;;;;;;;;;;
44;A neural control of the parallel Gas Turbine with differential link;;;;;;;;;;;;;;;;;;Ann;;;;;;;;;;;;;;;;
45;The THREAT-ARREST Cyber Range Platform;;education platform;;;;;;;;;;;;;;;;Ann;;;;;;;;;;;;;;;;
